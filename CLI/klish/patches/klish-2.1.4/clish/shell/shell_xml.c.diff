diff --git a/clish/shell/shell_xml.c b/clish/shell/shell_xml.c
index 8467ec1..6a4b49e 100644
--- a/clish/shell/shell_xml.c
+++ b/clish/shell/shell_xml.c
@@ -179,6 +179,7 @@ int clish_shell_load_scheme(clish_shell_t *this, const char *xml_path, const cha
 			root = clish_xmldoc_get_root(doc);
 			r = process_node(this, root, NULL);
 			clish_xmldoc_release(doc);
+			doc = NULL;
 
 			/* Error message */
 			if (r) {
@@ -382,6 +383,10 @@ static int process_ptype(clish_shell_t *shell, clish_xmlnode_t *element,
 	char *pattern = clish_xmlnode_fetch_attr(element, "pattern");
 	char *method_name = clish_xmlnode_fetch_attr(element, "method");
 	char *preprocess_name =	clish_xmlnode_fetch_attr(element, "preprocess");
+	char *ext_pattern = clish_xmlnode_fetch_attr(element, "ext_pattern");
+        char *ext_help = clish_xmlnode_fetch_attr(element, "ext_help");
+	char *alt_ext_pattern = clish_xmlnode_fetch_attr(element, "alt_ext_pattern");
+	char *alt_pattern = clish_xmlnode_fetch_attr(element, "alt_pattern");
 
 	/* Check syntax */
 	if (!name) {
@@ -400,8 +405,13 @@ static int process_ptype(clish_shell_t *shell, clish_xmlnode_t *element,
 	}
 
 	preprocess = clish_ptype_preprocess_resolve(preprocess_name);
+	if ((preprocess == CLISH_PTYPE_PRE_MODE) && !alt_ext_pattern) {
+		fprintf(stderr, CLISH_XML_ERROR_ATTR("alt_ext_pattern"));
+		goto error;
+	}
 	ptype = clish_shell_find_create_ptype(shell,
-		name, help, pattern, method, preprocess);
+		name, help, pattern, method, preprocess, ext_pattern, ext_help,
+		alt_ext_pattern, alt_pattern);
 
 	res = process_children(shell, element, ptype);
 error:
@@ -410,6 +420,10 @@ error:
 	clish_xml_release(pattern);
 	clish_xml_release(method_name);
 	clish_xml_release(preprocess_name);
+        clish_xml_release(ext_pattern);
+        clish_xml_release(ext_help);
+        clish_xml_release(alt_ext_pattern);
+	clish_xml_release(alt_pattern);
 
 	parent = parent; /* Happy compiler */
 
@@ -476,6 +490,7 @@ static int process_command(clish_shell_t *shell, clish_xmlnode_t *element,
 	char *args_name = clish_xmlnode_fetch_attr(element, "args");
 	char *args_help = clish_xmlnode_fetch_attr(element, "args_help");
 	char *ref = clish_xmlnode_fetch_attr(element, "ref");
+        char *hidden = clish_xmlnode_fetch_attr(element, "hidden");
 #ifdef LEGACY
 	char *lock = clish_xmlnode_fetch_attr(element, "lock");
 	char *interrupt = clish_xmlnode_fetch_attr(element, "interrupt");
@@ -573,6 +588,11 @@ static int process_command(clish_shell_t *shell, clish_xmlnode_t *element,
 	if (access)
 		clish_command__set_access(cmd, access);
 
+        if (hidden && lub_string_nocasecmp(hidden, "true") == 0)
+                clish_command__set_hidden(cmd, BOOL_TRUE);
+        else
+                clish_command__set_hidden(cmd, BOOL_FALSE);
+
 //process_command_end:
 	res = process_children(shell, element, cmd);
 error:
@@ -585,6 +605,7 @@ error:
 	clish_xml_release(args_name);
 	clish_xml_release(args_help);
 	clish_xml_release(ref);
+	clish_xml_release(hidden);
 #ifdef LEGACY
 	clish_xml_release(lock);
 	clish_xml_release(interrupt);
@@ -642,7 +663,7 @@ static int process_startup(clish_shell_t *shell, clish_xmlnode_t *element,
 	if (timeout) {
 		unsigned int to = 0;
 		lub_conv_atoui(timeout, &to, 0);
-		clish_shell__set_idle_timeout(shell, to);
+		clish_shell__set_timeout(shell, to);
 	}
 
 #ifdef LEGACY
@@ -710,6 +731,9 @@ static int process_param(clish_shell_t *shell, clish_xmlnode_t *element,
 	char *test = clish_xmlnode_fetch_attr(element, "test");
 	char *completion = clish_xmlnode_fetch_attr(element, "completion");
 	char *access = clish_xmlnode_fetch_attr(element, "access");
+	char *view = clish_xmlnode_fetch_attr(element, "view");
+        char *viewid = clish_xmlnode_fetch_attr(element, "viewid");
+
 
 	/* The PARAM can be child of COMMAND or another PARAM */
 	pelement = clish_xmlnode_parent(element);
@@ -760,7 +784,8 @@ static int process_param(clish_shell_t *shell, clish_xmlnode_t *element,
 		 */
 		tmp = clish_shell_find_create_ptype(shell,
 			ptype_name, "Option", "[^\\\\]+",
-			CLISH_PTYPE_METHOD_REGEXP, CLISH_PTYPE_PRE_NONE);
+			CLISH_PTYPE_METHOD_REGEXP, CLISH_PTYPE_PRE_NONE, NULL, NULL,
+			NULL, NULL);
 		assert(tmp);
 		lub_string_cat(&str, "_prefix_");
 		lub_string_cat(&str, name);
@@ -780,13 +805,14 @@ static int process_param(clish_shell_t *shell, clish_xmlnode_t *element,
 		/* Add the parameter to the param */
 		if (p_param)
 			clish_param_insert_param(p_param, opt_param);
+
 		/* Unset cmd and set parent param to opt_param */
 		cmd = NULL;
 		p_param = opt_param;
 	}
 
 	if (defval)
-		clish_param__set_defval(param, defval);
+		clish_param__set_default(param, defval);
 
 	if (hidden && lub_string_nocasecmp(hidden, "true") == 0)
 		clish_param__set_hidden(param, BOOL_TRUE);
@@ -841,6 +867,12 @@ static int process_param(clish_shell_t *shell, clish_xmlnode_t *element,
 	if (p_param)
 		clish_param_insert_param(p_param, param);
 
+	if (view)
+		clish_param__set_viewname(param, view);
+
+	if (viewid)
+		clish_param__set_viewid(param, viewid);
+
 	res = process_children(shell, element, param);
 
 error:
@@ -857,6 +889,8 @@ error:
 	clish_xml_release(test);
 	clish_xml_release(completion);
 	clish_xml_release(access);
+        clish_xml_release(view);
+        clish_xml_release(viewid);
 
 	return res;
 }
