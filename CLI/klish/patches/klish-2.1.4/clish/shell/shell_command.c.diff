8a9,11
> #include "lub/system.h"
> #include "clish/command.h"
> #include "clish/ptype.h"
19,20c22
< const clish_command_t *clish_shell_resolve_command(const clish_shell_t * this,
< 	const char *line)
---
> bool_t clish_shell_command_test(const clish_command_t *cmd, void *context)
22c24,37
< 	clish_command_t *cmd, *result;
---
>         char *str = NULL;
>         char *teststr = NULL;
>         bool_t res;
> 
>         if (!cmd)
>                 return BOOL_FALSE;
>         teststr = clish_command__get_test(cmd);
>         if (!teststr)
>                 return BOOL_TRUE;
>         str = clish_shell_expand(teststr, SHELL_VAR_ACTION, context);
>         if (!str)
>                 return BOOL_FALSE;
>         res = lub_system_line_test(str);
>         lub_string_free(str);
24,27c39,40
< 	/* Search the current view */
< 	result = clish_view_resolve_command(clish_shell__get_view(this), line, BOOL_TRUE);
< 	/* Search the global view */
< 	cmd = clish_view_resolve_command(this->global, line, BOOL_TRUE);
---
>         return res;
> }
29c42,63
< 	result = clish_command_choose_longest(result, cmd);
---
> /*--------------------------------------------------------- */
> const clish_command_t *clish_shell_resolve_command(const clish_shell_t * this,
> 	const char *line, clish_context_t *context)
> {
> 	        clish_command_t *cmd, *result;
>         bool_t test_result = BOOL_TRUE;
>         clish_context_t local_context;
> 
>         /* Search the current view */
>         result = clish_view_resolve_command(clish_shell__get_view(this), line, BOOL_TRUE);
>         /* Search the global view */
>         cmd = clish_view_resolve_command(this->global, line, BOOL_TRUE);
> 
>         result = clish_command_choose_longest(result, cmd);
> 
>         if(result) {
>                 clish_context_init(&local_context, (clish_shell_t *)this);
>                 clish_context__set_cmd(&local_context, result);
>                 test_result = clish_shell_command_test(result, &local_context);
>                 if(test_result == BOOL_FALSE)
>                         result = NULL;
>         }
31c65
< 	return result;
---
>         return result;
91a126
> 		const char *penultimate_text = NULL;
94,95c129,149
< 		if ((0 != index) && (text[0] != '\0'))
< 			index--;
---
> 		if ((0 != index) && (text[0] != '\0')) {
>                         index--;
>                         /* text is the string after last space.
>                            If user enters "interface ethernet"
>                            "interface ethernet 1/", text will be "ethernet".
>                            and "1/" respectively.The penultimate_text for these
>                            cases will be string before the text which is
>                            "interface" and "ethernet" respectively.
>                          */
>                         penultimate_text = lub_string_dup(lub_argv__get_arg(argv,
>                                                 lub_argv__get_count(argv)-2));
>                 } else {
>                         /* If user enters "interface ethernet " or "interface ",
>                            text will be a NULL string.The penultimate_text for
>                            these cases will be the string before the last space,
>                            which is "ethernet" and "interface" for the above
>                            examples respectively */
>                         penultimate_text = lub_string_dup(lub_argv__get_arg(argv,
>                                                 lub_argv__get_count(argv)-1));
>                 }
> 
105c159
< 			argv, &idx, completion, index + idx);
---
> 			argv, &idx, completion, index + idx, NULL, NULL);
116a171,172
> 			if (BOOL_TRUE == clish_param__get_hidden(param))
> 				continue;
120c176,180
< 				result = clish_param__get_value(param);
---
> 
> 				const clish_ptype_t *ptype = clish_param__get_ptype(param);
>                 		if (CLISH_PTYPE_METHOD_REGEXP_SELECT != 
> 						clish_ptype__get_method(ptype))
> 					result = clish_param__get_value(param);
140,141c200,207
< 			if ((ptype = clish_param__get_ptype(param)))
< 				clish_ptype_word_generator(ptype, matches, text);
---
> 			if ((ptype = clish_param__get_ptype(param))) {
>                 		if (CLISH_PTYPE_METHOD_REGEXP_SELECT != clish_ptype__get_method(ptype))
>                                 	clish_ptype_word_generator(ptype, matches, text, NULL);
>                 		else {
>                                 	clish_ptype_word_generator(ptype, matches, text, penultimate_text);
>                 		}
> 
> 			}
144a211,213
> 		if(penultimate_text)
>                         lub_string_free((char *)penultimate_text);
> 
