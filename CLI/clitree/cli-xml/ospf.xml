<?xml version="1.0"?>                                                               
<!--                                                                                
Copyright 2019 Dell, Inc.                                                           

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at                         

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and     
limitations under the License.                                          
-->                                                                                          

<CLISH_MODULE
    xmlns="http://www.dellemc.com/sonic/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xsi:schemaLocation="http://www.dellemc.com/sonic/XMLSchema
                        http://www.dellemc.com/sonic/XMLSchema/clish.xsd"
    >

<VIEW name="configure-view">
  <COMMAND name="router ospf" help="Start OSPF configuration" view="configure-router-ospf-view" viewid="vrf-name=${vrf-name}">
    <PARAM name="vrf" help="VRF Instance" ptype="SUBCOMMAND" mode="subcommand" optional="true">
      <PARAM name="vrf-name" help="Name of VRF (Max size 15, prefixed by Vrf)" ptype="STRING_15" default="default"/>
    </PARAM>
    <ACTION>
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_config ${vrf-name} &#xA;
    </ACTION>
  </COMMAND>
  <COMMAND name="no router ospf" help="Disable OSPF routing process">
    <PARAM name="vrf" help="VRF Instance" ptype="SUBCOMMAND" mode="subcommand" optional="true">
      <PARAM name="vrf-name" help="VRF Name" ptype="STRING_15" default="default"/>
    </PARAM>
    <ACTION>
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global ${vrf-name} &#xA;
</ACTION>
  </COMMAND>
</VIEW>

<VIEW name="configure-router-ospf-view" prompt="${SYSTEM_NAME}(config-router-ospf)# " depth="2">
  <NAMESPACE ref="configure-view" help="false" completion="false" />

  <COMMAND name="area" help="OSPF area parameters" >
      <PARAM name = "areaid" help = "OSPF area ID as a decimal value/IP address format" ptype = "AREA_NUM_DOT" />
      <PARAM name = "areacmdtype" help = "" ptype = "SUBCOMMAND" mode="switch" > 
        <PARAM name="authentication" help="Enable authentication" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="message-digest" help="Use message-digest authentication" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        </PARAM>
        <PARAM name="default-cost" help="Set the summary-default cost of a NSSA or stub area" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="defaultcost" help="Stub's advertised default summary cost" ptype="RANGE_0_16777215" />
        </PARAM>
<!--
        <PARAM name="export-list" help="Set the filter for networks announced to other areas" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="exportlistname" help="Name of the access-list" ptype="STRING" />
        </PARAM>
-->
        <PARAM name="filter-list" help="Filter networks between OSPF areas" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="prefix" help="Filter prefixes between OSPF areas" ptype="SUBCOMMAND" mode="subcommand" >
            <PARAM name="prefixlistname" help="Name of an IP prefix-list" ptype="STRING" >
              <PARAM name = "filterdirection" help = "" ptype = "SUBCOMMAND" mode="switch" >
                <PARAM name="in" help="Filter networks sent to this area" ptype="SUBCOMMAND" mode="subcommand" />
                <PARAM name="out" help="Filter networks sent from this area" ptype="SUBCOMMAND" mode="subcommand" />
              </PARAM> 
            </PARAM> 
          </PARAM>   
        </PARAM>
<!--
        <PARAM name="import-list" help="Set the filter for networks from other areas announced to the specified one" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="importlistname" help="Name of the access-list" ptype="STRING" />
        </PARAM>
-->
<!--
        <PARAM name="nssa" help="Configure OSPF area as nssa" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="no-summary" help="Do not inject inter-area routes into nssa" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
          <PARAM name="translate-always" help="Configure NSSA-ABR to always translate" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
          <PARAM name="translate-candidate" help="Configure NSSA-ABR for translate election (default)" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
          <PARAM name="translate-never" help="Configure NSSA-ABR to never translate" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        </PARAM>
-->
        <PARAM name="range" help="Summarize routes matching address/mask (border routers only)" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name = "rangeprefix" help = "Area range prefix" ptype = "IP_ADDR_MASK" >
            <PARAM name = "rangecmdtype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true" > 
              <PARAM name="advertise" help="Advertise this range (default)" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name="cost" help="User specified metric for this range" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                  <PARAM name = "metriccost" help = "Advertised metric for this range" ptype = "RANGE_0_16777215" />
                </PARAM>
              </PARAM>
              <PARAM name="cost" help="User specified metric for this range" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name = "metriccost" help = "Advertised metric for this range" ptype = "RANGE_0_16777215" />
              </PARAM>
              <PARAM name="not-advertise" help="DoNotAdvertise this range" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
              <PARAM name="substitute" help="Announce area range as another prefix" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name = "rangenetworkprefix" help = "Network prefix to be announced instead of range" ptype = "IP_ADDR_MASK" /> 
              </PARAM>
            </PARAM>
          </PARAM>
        </PARAM>

        <PARAM name="stub" help="Configure OSPF area as stub" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="no-summary" help="Do not inject inter-area routes into stub" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        </PARAM>

        <PARAM name="virtual-link" help="Configure a virtual link" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name = "vlinkip" help = "Router ID of the remote ABR" ptype = "IP_ADDR" >
            <PARAM name = "vlinkcmdtype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true" >
              <PARAM name="authentication" help="Enable authentication on this virtual link" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name = "vlinkauthtype" help = "" ptype = "SUBCOMMAND" mode="switch" >
                  <PARAM name="null" help="Use null authentication" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
                  <PARAM name="message-digest" help="Use message-digest authentication" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                    <PARAM name="message-digest-key" help="Message digest authentication password (key)" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                      <PARAM name="keyid" help="Key ID" ptype="RANGE_1_255" >
                        <PARAM name="md5" help="Use MD5 algorithm" ptype="SUBCOMMAND" mode="subcommand" >
                          <PARAM name="md5key" help="The OSPF password (key)" ptype="STRING" />
                        </PARAM>
                      </PARAM>
                    </PARAM>
                  </PARAM>
                </PARAM>
              </PARAM>
              <PARAM name="authentication-key" help="Authentication password (key)" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name="auth-key" help="Password" ptype="STRING" />
              </PARAM>
              <PARAM name="dead-interval" help="Interval time after which a neighbor is declared down" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name = "deadinterval" help = "Seconds" ptype = "RANGE_1_65535" />
              </PARAM>
              <PARAM name="hello-interval" help="Time between HELLO packets" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name = "hellointerval" help = "Seconds" ptype = "RANGE_1_65535" />
              </PARAM>
              <PARAM name="retransmit-interval" help="Time between retransmitting lost link state advertisements" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name = "retransmitinterval" help = "Seconds" ptype = "RANGE_1_65535" />
              </PARAM>
              <PARAM name="transmit-delay" help="Link state transmit delay" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name = "transmitinterval" help = "Seconds" ptype = "RANGE_1_65535" />
              </PARAM>
            </PARAM>
          </PARAM>
        </PARAM>

        <PARAM name="shortcut" help=" Configure the area's shortcutting mode" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name = "shortcuttype" help = "" ptype = "SUBCOMMAND" mode="switch" >
            <PARAM name="default" help="Set default shortcutting behavior" ptype="SUBCOMMAND" mode="subcommand" />
            <PARAM name="disable" help="Disable shortcutting through the area" ptype="SUBCOMMAND" mode="subcommand" />
            <PARAM name="enable" help="Enable shortcutting through the area" ptype="SUBCOMMAND" mode="subcommand" />
          </PARAM>
        </PARAM>

      </PARAM>
      <ACTION>
      if test "${areacmdtype}" = "virtual-link"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link ${vrf-name} ${areaid} ${vlinkip} &#xA;
        if test "${vlinkcmdtype}" = "dead-interval"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_dead_interval ${vrf-name} ${areaid} ${vlinkip} ${deadinterval} &#xA;
        fi&#xA;
        if test "${vlinkcmdtype}" = "hello-interval"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_hello_interval ${vrf-name} ${areaid} ${vlinkip} ${hellointerval} &#xA;
        fi&#xA;
        if test "${vlinkcmdtype}" = "retransmit-interval"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_retransmission_interval ${vrf-name} ${areaid} ${vlinkip} ${retransmitinterval} &#xA;
        fi&#xA;
        if test "${vlinkcmdtype}" = "transmit-delay"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_transmit_interval ${vrf-name} ${areaid} ${vlinkip} ${transmitinterval} &#xA;
        fi&#xA;
        if test "${vlinkauthtype}" = "null"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_auth_type_null ${vrf-name} ${areaid} ${vlinkip} &#xA;
        fi&#xA;
        if test "${vlinkauthtype}" = "message-digest"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_auth_type_message_digest ${vrf-name} ${areaid} ${vlinkip} &#xA;
          if test "${md5}" != ""; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_auth_type_message_digest_keyid ${vrf-name} ${areaid} ${vlinkip} ${keyid} &#xA;
            python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_auth_type_message_digest_md5pass ${vrf-name} ${areaid} ${vlinkip} ${md5key} &#xA;
          fi&#xA;
        fi&#xA;
        if test "${vlinkcmdtype}" = "authentication-key"; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_auth_type_message_digest_key ${vrf-name} ${areaid} ${vlinkip} ${auth-key}&#xA;
        fi&#xA;
      fi&#xA;
      if test "${areacmdtype}" = "authentication"; then&#xA;
        if test "${message-digest}" != ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_config_authentication_type_message_digest ${vrf-name} ${areaid} &#xA;
        fi&#xA;
        if test "${message-digest}" = ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_config_authentication_type_text ${vrf-name} ${areaid} &#xA;
        fi&#xA;
      fi&#xA;
      if test "${areacmdtype}" = "default-cost"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_stub_config_default_cost ${vrf-name} ${areaid} ${defaultcost} &#xA;
      fi&#xA;
      if test "${areacmdtype}" = "stub"; then&#xA;
        if test "${no-summary}" = ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_stub_config_enable ${vrf-name} ${areaid} &#xA;
        fi&#xA;
        if test "${no-summary}" != ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_stub_config_no_summary ${vrf-name} ${areaid} &#xA;
        fi&#xA;
      fi&#xA;
      if test "${areacmdtype}" = "range"; then&#xA;
        if test "${rangeprefix}" != ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_propagation_policy_address_prefix ${vrf-name} ${areaid} ${rangeprefix} &#xA;
        fi&#xA;

        if test "${rangecmdtype}" = "advertise"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_propagation_policy_address_prefix_advertise ${vrf-name} ${areaid} ${rangeprefix} &#xA;
        fi&#xA;

        if test "${cost}" != ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_propagation_policy_address_prefix_metric ${vrf-name} ${areaid} ${rangeprefix} ${metriccost} &#xA;
        fi&#xA;

        if test "${rangecmdtype}" = "not-advertise"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_propagation_policy_address_prefix_notadvertise ${vrf-name} ${areaid} ${rangeprefix} &#xA;
        fi&#xA;

        if test "${rangecmdtype}" = "substitute"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_propagation_policy_address_prefix_substitute ${vrf-name} ${areaid} ${rangeprefix} ${rangenetworkprefix} &#xA;
        fi&#xA;
      fi&#xA;
<!--
      if test "${areacmdtype}" = "import-list"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_area_importlist ${vrf-name} ${areaid} ${importlistname} &#xA;
      fi&#xA;

      if test "${areacmdtype}" = "export-list"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_area_exportlist ${vrf-name} ${areaid} ${exportlistname} &#xA;
      fi&#xA;
-->

      if test "${areacmdtype}" = "filter-list"; then&#xA;
        if test "${filterdirection}" = "in"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_area_filterlist_in ${vrf-name} ${areaid} ${prefixlistname} &#xA;
        fi&#xA;
        if test "${filterdirection}" = "out"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_area_filterlist_out ${vrf-name} ${areaid} ${prefixlistname} &#xA;
        fi&#xA;
      fi&#xA;

      if test "${areacmdtype}" = "shortcut"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_config_shortcut ${vrf-name} ${areaid} ${shortcuttype} &#xA;
      fi&#xA;

      </ACTION>
  </COMMAND>


  <COMMAND name="no area" help="OSPF area parameters" >
      <PARAM name = "areaid" help = "OSPF area ID as a decimal value/IP address format" ptype = "AREA_NUM_DOT" />
      <PARAM name = "areacmdtype" help = "" ptype = "SUBCOMMAND" mode="switch" >
        <PARAM name="authentication" help="Enable authentication" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="message-digest" help="Use message-digest authentication" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        </PARAM>
        <PARAM name="default-cost" help="Set the summary-default cost of a NSSA or stub area" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
<!--
        <PARAM name="export-list" help="Set the filter for networks announced to other areas" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
-->
        <PARAM name="filter-list" help="Filter networks between OSPF areas" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="prefix" help="Filter prefixes between OSPF areas" ptype="SUBCOMMAND" mode="subcommand" >
            <PARAM name = "filterdirection" help = "" ptype = "SUBCOMMAND" mode="switch" >
              <PARAM name="in" help="Filter networks sent to this area" ptype="SUBCOMMAND" mode="subcommand" />
              <PARAM name="out" help="Filter networks sent from this area" ptype="SUBCOMMAND" mode="subcommand" />
            </PARAM>
          </PARAM>
        </PARAM>
<!--
        <PARAM name="import-list" help="Set the filter for networks from other areas announced to the specified one" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
-->
<!--
        <PARAM name="nssa" help="Configure OSPF area as nssa" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="no-summary" help="Do not inject inter-area routes into nssa" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
          <PARAM name="translate-always" help="Configure NSSA-ABR to always translate" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
          <PARAM name="translate-candidate" help="Configure NSSA-ABR for translate election (default)" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
          <PARAM name="translate-never" help="Configure NSSA-ABR to never translate" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        </PARAM>
-->
        <PARAM name="range" help="Summarize routes matching address/mask (border routers only)" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name = "rangeprefix" help = "Area range prefix" ptype = "IP_ADDR_MASK" >
            <PARAM name = "rangecmdtype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true" >
              <PARAM name="advertise" help="Advertise this range (default)" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name="cost" help="User specified metric for this range" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
              </PARAM>
              <PARAM name="cost" help="User specified metric for this range" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
              <PARAM name="not-advertise" help="DoNotAdvertise this range" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
              <PARAM name="substitute" help="Announce area range as another prefix" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
            </PARAM>
          </PARAM>
        </PARAM>

        <PARAM name="stub" help="Configure OSPF area as stub" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="no-summary" help="Do not inject inter-area routes into stub" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        </PARAM>

        <PARAM name="virtual-link" help="Configure a virtual link" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name = "vlinkip" help = "Router ID of the remote ABR" ptype = "IP_ADDR" >
            <PARAM name = "vlinkcmdtype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true" >
              <PARAM name="authentication" help="Enable authentication on this virtual link" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                <PARAM name = "vlinkauthtype" help = "" ptype = "SUBCOMMAND" mode="switch" >
                  <PARAM name="null" help="Use null authentication" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
                  <PARAM name="message-digest" help="Use message-digest authentication" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                    <PARAM name="message-digest-key" help="Message digest authentication password (key)" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
                      <PARAM name="keyid" help="Key ID" ptype="RANGE_1_255" >
                        <PARAM name="md5" help="Use MD5 algorithm" ptype="SUBCOMMAND" mode="subcommand" />
                      </PARAM>
                    </PARAM>
                  </PARAM>
                </PARAM>
              </PARAM>
              <PARAM name="authentication-key" help="Authentication password (key)" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
              <PARAM name="dead-interval" help="Interval time after which a neighbor is declared down" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
              <PARAM name="hello-interval" help="Time between HELLO packets" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
              <PARAM name="retransmit-interval" help="Time between retransmitting lost link state advertisements" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
              <PARAM name="transmit-delay" help="Link state transmit delay" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
            </PARAM>
          </PARAM>
        </PARAM>

        <PARAM name="shortcut" help=" Configure the area's shortcutting mode" ptype="SUBCOMMAND" mode="subcommand" optional="true" />

      </PARAM>
      <ACTION>
      if test "${areacmdtype}" = "virtual-link"; then&#xA;
        if test "${vlinkcmdtype}" = ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link ${vrf-name} ${areaid} ${vlinkip} &#xA;
        fi&#xA;
        if test "${vlinkcmdtype}" = "dead-interval"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_dead_interval ${vrf-name} ${areaid} ${vlinkip} &#xA;
        fi&#xA;
        if test "${vlinkcmdtype}" = "hello-interval"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_hello_interval ${vrf-name} ${areaid} ${vlinkip} &#xA;
        fi&#xA;
        if test "${vlinkcmdtype}" = "retransmit-interval"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_retransmission_interval ${vrf-name} ${areaid} ${vlinkip} &#xA;
        fi&#xA;
        if test "${vlinkcmdtype}" = "transmit-delay"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_transmit_interval ${vrf-name} ${areaid} ${vlinkip} &#xA;
        fi&#xA;
        if test "${vlinkauthtype}" = "null"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_auth_type ${vrf-name} ${areaid} ${vlinkip} &#xA;
        fi&#xA;
        if test "${vlinkauthtype}" = "message-digest"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_auth_type ${vrf-name} ${areaid} ${vlinkip} &#xA;
          if test "${md5}" != ""; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_auth_type_message_digest_keyid ${vrf-name} ${areaid} ${vlinkip} ${keyid} &#xA;
            python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_auth_type_message_digest_md5pass ${vrf-name} ${areaid} ${vlinkip} &#xA;
          fi&#xA;
        fi&#xA;
        if test "${vlinkcmdtype}" = "authentication-key"; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_virtual_links_virtual_link_config_auth_type_message_digest_key ${vrf-name} ${areaid} ${vlinkip} &#xA;
        fi&#xA;
      fi&#xA;
      if test "${areacmdtype}" = "authentication"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_config_authentication_type ${vrf-name} ${areaid} &#xA;
      fi&#xA;
      if test "${areacmdtype}" = "default-cost"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_stub_config_default_cost ${vrf-name} ${areaid} &#xA;
      fi&#xA;
      if test "${areacmdtype}" = "stub"; then&#xA;
        if test "${no-summary}" = ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_stub_config_enable ${vrf-name} ${areaid} &#xA;
        fi&#xA;
        if test "${no-summary}" != ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_stub_config_no_summary ${vrf-name} ${areaid} &#xA;
        fi&#xA;
      fi&#xA;
      if test "${areacmdtype}" = "range"; then&#xA;
        if test "${rangecmdtype}" = ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_propagation_policy_address_prefix ${vrf-name} ${areaid} ${rangeprefix} &#xA;
        fi&#xA;

        if test "${rangecmdtype}" = "advertise"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_propagation_policy_address_prefix_advertise ${vrf-name} ${areaid} ${rangeprefix} &#xA;
        fi&#xA;

        if test "${cost}" != ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_propagation_policy_address_prefix_metric ${vrf-name} ${areaid} ${rangeprefix} &#xA;
        fi&#xA;

        if test "${rangecmdtype}" = "not-advertise"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_propagation_policy_address_prefix_advertise ${vrf-name} ${areaid} ${rangeprefix} &#xA;
        fi&#xA;

        if test "${rangecmdtype}" = "substitute"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_propagation_policy_address_prefix_substitute ${vrf-name} ${areaid} ${rangeprefix} &#xA;
        fi&#xA;
      fi&#xA;

<!--
      if test "${areacmdtype}" = "import-list"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_area_importlist ${vrf-name} ${areaid} &#xA;
      fi&#xA;

      if test "${areacmdtype}" = "export-list"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_area_exportlist ${vrf-name} ${areaid} &#xA;
      fi&#xA;
-->

      if test "${areacmdtype}" = "filter-list"; then&#xA;
        if test "${filterdirection}" = "in"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_area_filterlist_in ${vrf-name} ${areaid} &#xA;
        fi&#xA;
        if test "${filterdirection}" = "out"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_area_filterlist_out ${vrf-name} ${areaid} &#xA;
        fi&#xA;
      fi&#xA;

      if test "${areacmdtype}" = "shortcut"; then&#xA;
          python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_config_shortcut ${vrf-name} ${areaid} &#xA;
      fi&#xA;

      </ACTION>
  </COMMAND>

  <COMMAND name="auto-cost" help="Calculate OSPF interface cost according to bandwidth" >
    <PARAM name="reference-bandwidth" help="Use reference bandwidth method to assign OSPF cost" ptype="SUBCOMMAND" mode="subcommand" >
      <PARAM name="ref-bandwidth" help="The reference bandwidth in terms of Mbits per second" ptype="RANGE_1_4294967" />
    </PARAM>
    <ACTION>
    python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_auto_cost_reference_bandwidth ${vrf-name} ${ref-bandwidth}
    </ACTION>
  </COMMAND>

  <COMMAND name="no auto-cost" help="Calculate OSPF interface cost according to bandwidth" >
    <PARAM name="reference-bandwidth" help="Use reference bandwidth method to assign OSPF cost" ptype="SUBCOMMAND" mode="subcommand" />
    <ACTION>
    python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_auto_cost_reference_bandwidth ${vrf-name}
    </ACTION>
  </COMMAND>
<!--
  <COMMAND name="capability" help="Enable specific OSPF feature" >
    <PARAM name="opaque" help="Opaque LSA" ptype="SUBCOMMAND" mode="subcommand" />
    <ACTION builtin="clish_nop"></ACTION>
  </COMMAND>

  <COMMAND name="no capability" help="Enable specific OSPF feature" >
    <PARAM name="opaque" help="Opaque LSA" ptype="SUBCOMMAND" mode="subcommand" />
    <ACTION builtin="clish_nop"></ACTION>
  </COMMAND>
-->
  <COMMAND name="compatible" help="OSPF compatibility list" >
    <PARAM name="rfc1583" help="compatible with RFC 1583" ptype="SUBCOMMAND" mode="subcommand" />
    <ACTION>
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_ospf_rfc1583_compatible ${vrf-name}
    </ACTION>
  </COMMAND>

  <COMMAND name="no compatible" help="OSPF compatibility list" >
    <PARAM name="rfc1583" help="compatible with RFC 1583" ptype="SUBCOMMAND" mode="subcommand" />
    <ACTION>
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_ospf_rfc1583_compatible ${vrf-name}
    </ACTION>
  </COMMAND>

  <COMMAND name="default-information" help="Control distribution of default information" >
    <PARAM name="originate" help="Distribute a default route" ptype="SUBCOMMAND" mode="subcommand" >
      <PARAM name="always" help="Always advertise default route" ptype="SUBCOMMAND" mode="subcommand" optional="true"/>
      <PARAM name="metric" help="OSPF default metric" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="metricval" help="Always advertise default route" ptype="RANGE_0_16777214" />
      </PARAM>
      <PARAM name="metric-type" help="OSPF metric type for default routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="mertrictype" help="Set OSPF External Type 1/2 metrics" ptype="RANGE_1_2" />
      </PARAM>
      <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="routemapname" help="Pointer to route-map entries" ptype="STRING_15" />
      </PARAM>
    </PARAM>
    <ACTION>
    if test "${always}" = "" &amp;&amp; test "${metricval}" = "" &amp;&amp; test "${metrictype}" = "" &amp;&amp; test "${routemapname}" = ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_import ${vrf-name} &#xA;
    fi&#xA;
    if test "${always}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_always ${vrf-name} &#xA;
    fi&#xA;
    if test "${metricval}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_metric ${vrf-name} "default_route" ${metricval} &#xA;
    fi&#xA;
    if test "${mertrictype}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_metric_type ${vrf-name} "default_route" ${mertrictype} &#xA;
    fi&#xA;
    if test "${routemapname}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_route_map_default ${vrf-name} "default_route" ${routemapname} &#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no default-information" help="Control distribution of default information" >
    <PARAM name="originate" help="Distribute a default route" ptype="SUBCOMMAND" mode="subcommand" >
      <PARAM name="always" help="Always advertise default route" ptype="SUBCOMMAND" mode="subcommand" optional="true"/>
      <PARAM name="metric" help="OSPF default metric" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      <PARAM name="metric-type" help="OSPF metric type for default routes" ptype="SUBCOMMAND" mode="subcommand" optional="true"/>
      <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
    </PARAM>
    <ACTION>
    if test "${always}" = "" &amp;&amp; test "${metric}" = "" &amp;&amp; test "${metric-type}" = "" &amp;&amp; test "${route-map}" = ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_import ${vrf-name} &#xA;
    fi&#xA;
    if test "${always}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_always ${vrf-name} &#xA;
    fi&#xA;
    if test "${metric}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_metric ${vrf-name} "default_route" &#xA;
    fi&#xA;
    if test "${metric-type}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_metric_type ${vrf-name} "default_route" &#xA;
    fi&#xA;
    if test "${route-map}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_route_map_default ${vrf-name} "default_route" &#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="default-metric" help="Set metric of redistributed routes" >
    <PARAM name="defaultmetric" help="Default metric" ptype="RANGE_0_16777214" />
    <ACTION>
    python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_config_default_metric ${vrf-name} ${defaultmetric} &#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no default-metric" help="Set metric of redistributed routes" >
    <ACTION>
    python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_config_default_metric ${vrf-name} &#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="distance" help="Administrative distance" >
    <PARAM name = "distancetype" help = "" ptype="SUBCOMMAND" mode="switch" >
      <PARAM name="admindistance" help="OSPF Administrative distance" ptype="RANGE_1_255" optional="true" />
      <PARAM name="ospf" help="" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
        <PARAM name="external" help="External routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="extdistance" help="Distance for external routes" ptype="RANGE_1_255" />
        </PARAM>
        <PARAM name="inter-area" help="Inter-area routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="interdistance" help="Distance for inter-area routes" ptype="RANGE_1_255" />
        </PARAM>
        <PARAM name="intra-area" help="Intra-area routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="intradistance" help="Distance for intra-area routes" ptype="RANGE_1_255" />
        </PARAM>
      </PARAM>
    </PARAM>
    <ACTION>
    if test "${distancetype}" != "ospf"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distance_config_all ${vrf-name} ${admindistance} &#xA;
    else&#xA;
      if test "${intra-area}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distance_config_intra_area ${vrf-name} ${intradistance} &#xA;
      fi&#xA;
      if test "${inter-area}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distance_config_inter_area ${vrf-name} ${interdistance} &#xA;
      fi&#xA;
      if test "${external}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distance_config_external ${vrf-name} ${extdistance} &#xA;
      fi&#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no distance" help="Administrative distance" >
    <PARAM name="ospf" help="" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
      <PARAM name = "distancetype" help = "" ptype="SUBCOMMAND" mode="switch" >
        <PARAM name="external" help="External routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="inter-area" help="Inter-area routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="intra-area" help="Intra-area routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      </PARAM>
    </PARAM>
    <ACTION>
    if test "${distancetype}" = ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distance_config_all ${vrf-name} &#xA;
    fi&#xA;
    if test "${distancetype}" = "intra-area"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distance_config_intra_area ${vrf-name} &#xA;
    fi&#xA;
    if test "${distancetype}" = "inter-area"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distance_config_inter_area ${vrf-name} &#xA;
    fi&#xA;
    if test "${distancetype}" = "external"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distance_config_external ${vrf-name} &#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

<!--
  <COMMAND name="distribute-list" help="Filter networks in routing updates" >
    <PARAM name="aclname" help="Access-list name" ptype="STRING_15"  >
      <PARAM name="out" help="Filter outgoing routing updates" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name = "protocol" help = "" ptype = "SUBCOMMAND" mode="switch" >
          <PARAM name="bgp" help="Border Gateway Protocol (BGP)" ptype="SUBCOMMAND" mode="subcommand" />
          <PARAM name="connected" help="Connected routes (directly attached subnet or host)" ptype="SUBCOMMAND" mode="subcommand" />
          <PARAM name="static" help="Statically configured routes" ptype="SUBCOMMAND" mode="subcommand" />
          <PARAM name="kernel" help="Kernel routes (not installed via the zebra RIB)" ptype="SUBCOMMAND" mode="subcommand" />
          <PARAM name="table" help="Non-main Kernel Routing Table" ptype="SUBCOMMAND" mode="subcommand" />
        </PARAM>
      </PARAM>
    </PARAM>
    <ACTION>
    python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_access_list ${vrf-name} ${protocol} ${aclname} &#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no distribute-list" help="Filter networks in routing updates" >
    <PARAM name="out" help="Filter outgoing routing updates" ptype="SUBCOMMAND" mode="subcommand" >
      <PARAM name = "protocol" help = "" ptype = "SUBCOMMAND" mode="switch" >
        <PARAM name="bgp" help="Border Gateway Protocol (BGP)" ptype="SUBCOMMAND" mode="subcommand" />
        <PARAM name="connected" help="Connected routes (directly attached subnet or host)" ptype="SUBCOMMAND" mode="subcommand" />
        <PARAM name="static" help="Statically configured routes" ptype="SUBCOMMAND" mode="subcommand" />
        <PARAM name="kernel" help="Kernel routes (not installed via the zebra RIB)" ptype="SUBCOMMAND" mode="subcommand" />
        <PARAM name="table" help="Non-main Kernel Routing Table" ptype="SUBCOMMAND" mode="subcommand" />
      </PARAM>
    </PARAM>
    <ACTION>
    python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_distribute_list_config_access_list ${vrf-name} ${protocol} &#xA;
    </ACTION>
  </COMMAND>
-->

  <COMMAND name="log-adjacency-changes" help="Log changes in adjacency state" >
    <PARAM name="detail" help="Log all state changes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
    <ACTION>
    if test "${detail}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_config_log_adjacency_changes_details ${vrf-name} &#xA;
    else&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_config_log_adjacency_changes ${vrf-name} &#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no log-adjacency-changes" help="Log changes in adjacency state" >
    <PARAM name="detail" help="Log all state changes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
    <ACTION>
    if test "${detail}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_config_log_adjacency_changes_details ${vrf-name} &#xA;
    else&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_config_log_adjacency_changes ${vrf-name} &#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="max-metric" help="OSPF maximum / infinite-distance metric" >
    <PARAM name="router-lsa" help="Advertise own Router-LSA with infinite distance (stub router)" ptype="SUBCOMMAND" mode="subcommand" >
      <PARAM name = "maxmetrictype" help = "" ptype = "SUBCOMMAND" mode="switch" >
        <PARAM name="administrative" help="Administratively applied,  for an indefinite period" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
<!--
        <PARAM name="on-shutdown" help="Advertise stub-router prior to full shutdown of OSPF" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="extdistance" help="Time (seconds) to wait till full shutdown" ptype="RANGE_5_100" />
        </PARAM>
-->
        <PARAM name="on-startup" help="Automatically advertise stub Router-LSA on startup of OSPF" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="interdistance" help="Time (seconds) to advertise self as stub-router" ptype="RANGE_5_86400" />
        </PARAM>
      </PARAM>
    </PARAM>
    <ACTION>
    if test "${maxmetrictype}" = "administrative"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_max_metric_config_administrative ${vrf-name} &#xA;
    fi&#xA;
<!--
    if test "${maxmetrictype}" = "on-shutdown"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_max_metric_config_on_shutdown ${vrf-name} ${extdistance} &#xA;
    fi&#xA;
-->

    if test "${maxmetrictype}" = "on-startup"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_max_metric_config_on_startup ${vrf-name} ${interdistance} &#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no max-metric" help="OSPF maximum / infinite-distance metric" >
    <PARAM name="router-lsa" help="Advertise own Router-LSA with infinite distance (stub router)" ptype="SUBCOMMAND" mode="subcommand" >
      <PARAM name = "maxmetrictype" help = "" ptype = "SUBCOMMAND" mode="switch" >
        <PARAM name="administrative" help="Administratively applied,  for an indefinite period" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
<!--
        <PARAM name="on-shutdown" help="Advertise stub-router prior to full shutdown of OSPF" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
-->
        <PARAM name="on-startup" help="Automatically advertise stub Router-LSA on startup of OSPF" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      </PARAM>
    </PARAM>
    <ACTION>
    if test "${maxmetrictype}" = "administrative"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_max_metric_config_administrative ${vrf-name} &#xA;
    fi&#xA;

<!--
    if test "${maxmetrictype}" = "on-shutdown"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_max_metric_config_on_shutdown ${vrf-name} &#xA;
    fi&#xA;
-->

    if test "${maxmetrictype}" = "on-startup"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_max_metric_config_on_startup ${vrf-name} &#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>
<!--
  <COMMAND name="neighbor" help="Specify neighbor router" >
    <PARAM name="ipaddr" help="Neighbor IP address" ptype="IP_ADDR" mode="subcommand" >
      <PARAM name="poll-interval" help="Dead Neighbor Polling interval" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
        <PARAM name="pollinterval" help="Time (seconds)" ptype="RANGE_1_65535" />
      </PARAM>
      <PARAM name="priority" help="OSPF priority of non-broadcast neighbor" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
        <PARAM name="priorityval" help="Priority" ptype="RANGE_0_255" />
      </PARAM>
    </PARAM>
    <ACTION builtin="clish_nop"></ACTION>
  </COMMAND>

  <COMMAND name="no neighbor" help="Specify neighbor router" >
    <PARAM name="ipaddr" help="Neighbor IP address" ptype="IP_ADDR" mode="subcommand" >
      <PARAM name="poll-interval" help="Dead Neighbor Polling interval" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
        <PARAM name="pollinterval" help="Time (seconds)" ptype="RANGE_1_65535" />
      </PARAM>
      <PARAM name="priority" help="OSPF priority of non-broadcast neighbor" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
        <PARAM name="priorityval" help="Priority" ptype="RANGE_0_255" />
      </PARAM>
    </PARAM>
    <ACTION builtin="clish_nop"></ACTION>
  </COMMAND>
-->
  <COMMAND name="network" help="Enable routing on an IP network" >
    <PARAM name="ipaddrmask" help="OSPF network prefix" ptype="IP_ADDR_MASK" >
      <PARAM name="area" help="Set the OSPF area ID" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name = "areaid" help = "OSPF area ID as a decimal value/IP address format" ptype = "AREA_NUM_DOT" />
      </PARAM>
    </PARAM>
    <ACTION>
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_networks_network_config ${vrf-name} ${areaid} ${ipaddrmask} &#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no network" help="Enable routing on an IP network" >
    <PARAM name="ipaddrmask" help="OSPF network prefix" ptype="IP_ADDR_MASK" >
      <PARAM name="area" help="Set the OSPF area ID" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name = "areaid" help = "OSPF area ID as a decimal value/IP address format" ptype = "AREA_NUM_DOT" />
      </PARAM>
    </PARAM>
    <ACTION>
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_areas_area_networks_network ${vrf-name} ${areaid} ${ipaddrmask} &#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="ospf" help="OSPF specific commands" >
    <PARAM name = "ospf_cmd" help = "" ptype = "SUBCOMMAND" mode="switch" >
      <PARAM name="abr-type" help="OSPF network prefix" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
        <PARAM name = "abrtype" help = "" ptype = "SUBCOMMAND" mode="switch" >
          <PARAM name="cisco" help="Alternative ABR,  cisco implementation" ptype="SUBCOMMAND" mode="subcommand" />
          <PARAM name="ibm" help="Alternative ABR,  IBM implementation" ptype="SUBCOMMAND" mode="subcommand" />
          <PARAM name="shortcut" help="Shortcut ABR" ptype="SUBCOMMAND" mode="subcommand" />
          <PARAM name="standard" help="Standard behavior (RFC2328)" ptype="SUBCOMMAND" mode="subcommand" />
        </PARAM>
      </PARAM>
      <PARAM name="router-id" help="router-id for the OSPF process" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
        <PARAM name = "routerid" help = "OSPF router-id in IP address format" ptype = "IP_ADDR" />
      </PARAM>
<!--
      <PARAM name="opaque-lsa" help="Enable the Opaque-LSA capability (rfc2370)" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      <PARAM name="write-multiplier" help="router-id for the OSPF process" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
        <PARAM name = "writemaxinterface" help = "Maximum number of interface serviced per write" ptype = "RANGE_1_100" /> 
      </PARAM>
-->
    </PARAM>
    <ACTION> 
      if test "${ospf_cmd}" = "abr-type"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_abr_type ${vrf-name} ${abrtype} &#xA;
      fi&#xA;
      if test "${ospf_cmd}" = "router-id"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_config_router_id ${vrf-name} ${routerid} &#xA;
      fi&#xA;
<!--
      if test "${ospf_cmd}" = "opaque-lsa"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_opaque_lsa_capability ${vrf-name} &#xA;
      fi&#xA;
      if test "${ospf_cmd}" = "write-multiplier"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_write_multiplier ${vrf-name} ${writemaxinterface} &#xA;
      fi&#xA;
-->
    </ACTION>
  </COMMAND>

  <COMMAND name="no ospf" help="OSPF specific commands" >
    <PARAM name = "ospf_cmd" help = "" ptype = "SUBCOMMAND" mode="switch" >
      <PARAM name="abr-type" help="OSPF network prefix" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      <PARAM name="router-id" help="router-id for the OSPF process" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
<!--
      <PARAM name="opaque-lsa" help="Enable the Opaque-LSA capability (rfc2370)" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      <PARAM name="write-multiplier" help="router-id for the OSPF process" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
-->
    </PARAM>
    <ACTION>
      if test "${ospf_cmd}" = "abr-type"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_abr_type ${vrf-name} &#xA;
      fi&#xA;
      if test "${ospf_cmd}" = "router-id"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_config_router_id ${vrf-name} &#xA;
      fi&#xA;
<!--
      if test "${ospf_cmd}" = "write-multiplier"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_write_multiplier ${vrf-name} &#xA;
      fi&#xA;
-->
    </ACTION>
  </COMMAND>

  <COMMAND name="passive-interface" help="Suppress routing updates on an interface" >
    <PARAM name = "interfacetype" help = "" ptype = "SUBCOMMAND" mode="switch" >
      <PARAM name="default" help="Suppress routing updates on interfaces by default" ptype="SUBCOMMAND" mode="subcommand"/>
      <PARAM name = "interfacename" help = "Interface's name" ptype = "STRING" >
        <PARAM name = "ipaddr" help = "IPv4 address" ptype = "IP_ADDR" default="0.0.0.0" optional="true" />
      </PARAM>
    </PARAM>
    <ACTION>
    if test "${interfacetype}" = "default"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_passive_interface_default ${vrf-name} &#xA;
    else&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_passive_interface ${vrf-name} ${interfacename} ${ipaddr} &#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no passive-interface" help="Suppress routing updates on an interface" >
    <PARAM name = "interfacetype" help = "" ptype = "SUBCOMMAND" mode="switch" >
      <PARAM name="default" help="Suppress routing updates on interfaces by default" ptype="SUBCOMMAND" mode="subcommand" />
      <PARAM name = "interfacename" help = "Interface's name" ptype = "STRING" >
        <PARAM name = "ipaddr" help = "IPv4 address" ptype = "IP_ADDR" default="0.0.0.0" optional="true" />
      </PARAM>
      <PARAM name="default" help="Suppress routing updates on interfaces by default" ptype="SUBCOMMAND" mode="subcommand" />
    </PARAM>
    <ACTION>
    if test "${interfacetype}" = "default"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_passive_interface_default ${vrf-name} &#xA;
    else&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_passive_interface ${vrf-name} ${interfacename} ${ipaddr} &#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="redistribute" help="Redistribute information from another routing protocol" >
    <PARAM name = "protocol" help = "" ptype = "SUBCOMMAND" mode="switch" >
      <PARAM name="bgp" help="Border Gateway Protocol (BGP)" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="metric" help="Metric for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="bgpmetricval" help="OSPF default metric" ptype="RANGE_0_16777214" />
        </PARAM>
        <PARAM name="metric-type" help="OSPF exterior metric type for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="bgpmertrictype" help="Set OSPF External Type 1/2 metrics" ptype="RANGE_1_2" />
        </PARAM>
        <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="bgproutemapname" help="Pointer to route-map entries" ptype="STRING_15" />
        </PARAM>
      </PARAM>
      <PARAM name="connected" help="Connected routes (directly attached subnet or host)" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="metric" help="Metric for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="connmetricval" help="OSPF default metric" ptype="RANGE_0_16777214" />
        </PARAM>
        <PARAM name="metric-type" help="OSPF exterior metric type for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="connmertrictype" help="Set OSPF External Type 1/2 metrics" ptype="RANGE_1_2" />
        </PARAM>
        <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="connroutemapname" help="Pointer to route-map entries" ptype="STRING_15" />
        </PARAM>
      </PARAM>
      <PARAM name="static" help="Statically configured routes" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="metric" help="Metric for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="staticmetricval" help="OSPF default metric" ptype="RANGE_0_16777214" />
        </PARAM>
        <PARAM name="metric-type" help="OSPF exterior metric type for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="staticmertrictype" help="Set OSPF External Type 1/2 metrics" ptype="RANGE_1_2" />
        </PARAM>
        <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="staticroutemapname" help="Pointer to route-map entries" ptype="STRING_15" />
        </PARAM>
      </PARAM>
<!--
      <PARAM name="ospf" help=" Open Shortest Path First" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="metric" help="Metric for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="ospfmetricval" help="OSPF default metric" ptype="RANGE_0_16777214" />
        </PARAM>
        <PARAM name="metric-type" help="OSPF exterior metric type for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="ospfmertrictype" help="Set OSPF External Type 1/2 metrics" ptype="RANGE_1_2" />
        </PARAM>
        <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="ospfroutemapname" help="Pointer to route-map entries" ptype="STRING_15" />
        </PARAM>
      </PARAM>
-->
      <PARAM name="kernel" help="Kernel routes (not installed via the zebra RIB)" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="metric" help="Metric for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="kernelmetricval" help="OSPF default metric" ptype="RANGE_0_16777214" />
        </PARAM>
        <PARAM name="metric-type" help="OSPF exterior metric type for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="kernelmertrictype" help="Set OSPF External Type 1/2 metrics" ptype="RANGE_1_2" />
        </PARAM>
        <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" >
          <PARAM name="kernelroutemapname" help="Pointer to route-map entries" ptype="STRING_15" />
        </PARAM>
      </PARAM>
    </PARAM>
    <ACTION>
    if test "${protocol}" = "bgp"; then&#xA;
      if test "${bgpmetricval}" = "" &amp;&amp; test "${bgpmertrictype}" = "" &amp;&amp; test "${bgproutemapname}" = ""; then&#xA; 
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_import ${vrf-name} ${protocol} &#xA;
      fi&#xA;
      if test "${bgpmetricval}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric ${vrf-name} ${protocol} ${bgpmetricval} &#xA;
      fi&#xA;
      if test "${bgpmertrictype}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric_type ${vrf-name} ${protocol} ${bgpmertrictype} &#xA;
      fi&#xA;
      if test "${bgproutemapname}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_route_map ${vrf-name} ${protocol} ${bgproutemapname} &#xA;
      fi&#xA;
    fi&#xA;
<!--
    if test "${protocol}" = "ospf"; then&#xA;
      if test "${ospfmetricval}" = "" &amp;&amp; test "${ospfmertrictype}" = "" &amp;&amp; test "${ospfroutemapname}" = ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_import ${vrf-name} ${protocol} &#xA;
      fi&#xA;
      if test "${ospfmetricval}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric ${vrf-name} ${protocol} ${ospfmetricval} &#xA;
      fi&#xA;
      if test "${ospfmertrictype}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric_type ${vrf-name} ${protocol} ${ospfmertrictype} &#xA;
      fi&#xA;
      if test "${ospfroutemapname}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_route_map ${vrf-name} ${protocol} ${ospfroutemapname} &#xA;
      fi&#xA;
    fi&#xA;
-->
    if test "${protocol}" = "static"; then&#xA;
      if test "${staticmetricval}" = "" &amp;&amp; test "${staticmertrictype}" = "" &amp;&amp; test "${staticroutemapname}" = ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_import ${vrf-name} ${protocol} &#xA;
      fi&#xA;
      if test "${staticmetricval}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric ${vrf-name} ${protocol} ${staticmetricval} &#xA;
      fi&#xA;
      if test "${staticmertrictype}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric_type ${vrf-name} ${protocol} ${staticmertrictype} &#xA;
      fi&#xA;
      if test "${staticroutemapname}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_route_map ${vrf-name} ${protocol} ${staticroutemapname} &#xA;
      fi&#xA;
    fi&#xA;
    if test "${protocol}" = "connected"; then&#xA;
      if test "${connmetricval}" = "" &amp;&amp; test "${connmertrictype}" = "" &amp;&amp; test "${connroutemapname}" = ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_import ${vrf-name} ${protocol} &#xA;
      fi&#xA;
      if test "${connmetricval}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric ${vrf-name} ${protocol} ${connmetricval} &#xA;
      fi&#xA;
      if test "${connmertrictype}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric_type ${vrf-name} ${protocol} ${connmertrictype} &#xA;
      fi&#xA;
      if test "${connroutemapname}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_route_map ${vrf-name} ${protocol} ${connroutemapname} &#xA;
  fi&#xA;
    fi&#xA;
    if test "${protocol}" = "kernel"; then&#xA;
      if test "${kernelmetricval}" = "" &amp;&amp; test "${kernelmertrictype}" = "" &amp;&amp; test "${kernelroutemapname}" = ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_import ${vrf-name} ${protocol} &#xA;
      fi&#xA;
      if test "${kernelmetricval}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric ${vrf-name} ${protocol} ${kernelmetricval} &#xA;
      fi&#xA;
      if test "${kernelmertrictype}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric_type ${vrf-name} ${protocol} ${kernelmertrictype} &#xA;
      fi&#xA;
      if test "${kernelroutemapname}" != ""; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_route_map ${vrf-name} ${protocol} ${kernelroutemapname} &#xA;
      fi&#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no redistribute" help="Redistribute information from another routing protocol" >
    <PARAM name = "protocol" help = "" ptype = "SUBCOMMAND" mode="switch" >
      <PARAM name="bgp" help="Border Gateway Protocol (BGP)" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="metric" help="Metric for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="metric-type" help="OSPF exterior metric type for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      </PARAM>
      <PARAM name="connected" help="Connected routes (directly attached subnet or host)" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="metric" help="Metric for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="metric-type" help="OSPF exterior metric type for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      </PARAM>
      <PARAM name="static" help="Statically configured routes" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="metric" help="Metric for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="metric-type" help="OSPF exterior metric type for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      </PARAM>
      <PARAM name="ospf" help=" Open Shortest Path First" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="metric" help="Metric for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="metric-type" help="OSPF exterior metric type for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      </PARAM>
      <PARAM name="kernel" help="Kernel routes (not installed via the zebra RIB)" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="metric" help="Metric for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="metric-type" help="OSPF exterior metric type for redistributed routes" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        <PARAM name="route-map" help="Route map reference" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
      </PARAM>
    </PARAM>
    <ACTION>
    if test "${metric}" = "" &amp;&amp; test "${metric-type}" = "" &amp;&amp; test "${route-map}" = ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_import ${vrf-name} ${protocol} &#xA;
    fi&#xA;
    if test "${metric}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric ${vrf-name} ${protocol} &#xA;
    fi&#xA;
    if test "${metric-type}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_metric_type ${vrf-name} ${protocol} &#xA;
    fi&#xA;
    if test "${route-map}" != ""; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_route_distribution_policies_redistribute_list_config_route_map ${vrf-name} ${protocol} &#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="refresh" help="Adjust refresh parameters" >
    <PARAM name="timer" help="Set refresh timer" ptype="SUBCOMMAND" mode="subcommand" >
      <PARAM name="refreshtimer" help="Timer value in seconds" ptype="RANGE_10_1800" />
    </PARAM>
    <ACTION>
    python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_lsa_generation_config_refresh_timer ${vrf-name} ${refreshtimer} &#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no refresh" help="Adjust refresh parameters" >
    <PARAM name="timer" help="Set refresh timer" ptype="SUBCOMMAND" mode="subcommand" />
    <ACTION>
    python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_lsa_generation_config_refresh_timer ${vrf-name} &#xA;
    </ACTION>
  </COMMAND>

<!--
  <COMMAND name="router-info" help="OSPF Router Information specific commands" ptype="SUBCOMMAND" mode="subcommand" optional="true">
    <PARAM name = "floodingscope" help = "" ptype = "SUBCOMMAND" mode="switch" >
      <PARAM name="area" help="Enable the Router Information functionality with Area flooding scope" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name="floodingscopeareaid" help="OSPF area ID in IP format (deprecated)" ptype="IP_ADDR" optional="true" optional="true"/>
      </PARAM>
      <PARAM name="as" help="Enable the Router Information functionality with AS flooding scope" ptype="SUBCOMMAND" mode="subcommand"/>
    </PARAM>
    <ACTION builtin="clish_nop"></ACTION>
  </COMMAND>
-->

  <COMMAND name="timers" help="Adjust routing timers" >
    <PARAM name = "timertype" help = "" ptype = "SUBCOMMAND" mode="switch" >
      <PARAM name="lsa" help="OSPF LSA timers" ptype="SUBCOMMAND" mode="subcommand"  >
        <PARAM name="min-arrival" help="Minimum delay in receiving new version of a LSA" ptype="SUBCOMMAND" mode="subcommand" >
          <PARAM name="minarrivaltimer" help="Delay in milliseconds" ptype="RANGE_0_600000" />
        </PARAM>
      </PARAM>
      <PARAM name="throttle" help="Throttling adaptive timer" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name = "throttletype" help = "" ptype = "SUBCOMMAND" mode="switch" >
          <PARAM name="lsa" help="LSA delay between transmissions" ptype="SUBCOMMAND" mode="subcommand" >
            <PARAM name="all" help="All LSA types" ptype="SUBCOMMAND" mode="subcommand" >
              <PARAM name="lsadelaytimer" help="Delay (msec) between sending LSAs" ptype="RANGE_0_5000" />
            </PARAM>
          </PARAM>
          <PARAM name="spf" help="OSPF SPF timers" ptype="SUBCOMMAND" mode="subcommand" >
            <PARAM name="spfdelaytime" help="Delay (msec) from first change received till SPF calculation" ptype="RANGE_0_600000" />
            <PARAM name="spfinitialholdtime" help="Initial hold time (msec) between consecutive SPF calculations" ptype="RANGE_0_600000" />
            <PARAM name="spfmaxholdtime" help="Maximum hold time (msec)" ptype="RANGE_0_600000" />
          </PARAM>
        </PARAM>
      </PARAM>
    </PARAM>
    <ACTION>
    if test "${timertype}" = "lsa"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_lsa_generation_config_minimum_arrival ${vrf-name} ${minarrivaltimer} &#xA;
    else&#xA;
      if test "${throttletype}" = "lsa"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_lsa_generation_config_minimum_interval ${vrf-name} ${lsadelaytimer} &#xA;
      else&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_spf ${vrf-name} ${spfdelaytime} ${spfinitialholdtime} ${spfmaxholdtime} &#xA;
      fi&#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="no timers" help="Adjust routing timers" >
    <PARAM name = "timertype" help = "" ptype = "SUBCOMMAND" mode="switch" >
      <PARAM name="lsa" help="OSPF LSA timers" ptype="SUBCOMMAND" mode="subcommand"  >
        <PARAM name="min-arrival" help="Minimum delay in receiving new version of a LSA" ptype="SUBCOMMAND" mode="subcommand" />
      </PARAM>
      <PARAM name="throttle" help="Throttling adaptive timer" ptype="SUBCOMMAND" mode="subcommand" >
        <PARAM name = "throttletype" help = "" ptype = "SUBCOMMAND" mode="switch" >
          <PARAM name="lsa" help="LSA delay between transmissions" ptype="SUBCOMMAND" mode="subcommand" >
            <PARAM name="all" help="All LSA types" ptype="SUBCOMMAND" mode="subcommand" />
          </PARAM>
          <PARAM name="spf" help="OSPF SPF timers" ptype="SUBCOMMAND" mode="subcommand" />
        </PARAM>
      </PARAM>
    </PARAM>
    <ACTION>
    if test "${timertype}" = "lsa"; then&#xA;
      python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_lsa_generation_config_minimum_arrival ${vrf-name} &#xA;
    else&#xA;
      if test "${throttletype}" = "lsa"; then&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_lsa_generation_config_minimum_interval ${vrf-name} &#xA;
      else&#xA;
        python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_network_instance_network_instances_network_instance_protocols_protocol_ospfv2_global_timers_spf_config ${vrf-name} &#xA;
      fi&#xA;
    fi&#xA;
    </ACTION>
  </COMMAND>

  <COMMAND name="write-multiplier" help="Write multiplier" >
      <PARAM name="maxinterfacewrite" help="Maximum number of interface serviced per write" ptype="RANGE_1_100" />
    <ACTION>
    python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py patch_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_write_multiplier ${vrf-name} ${maxinterfacewrite}
    </ACTION>
  </COMMAND>

  <COMMAND name="no write-multiplier" help="Write multiplier" >
    <ACTION>
    python $SONIC_CLI_ROOT/sonic-cli-ospfv2.py delete_openconfig_ospfv2_ext_network_instances_network_instance_protocols_protocol_ospfv2_global_config_write_multiplier ${vrf-name} &#xA;
    </ACTION>
  </COMMAND>

</VIEW>

<VIEW name="enable-view">   

    <COMMAND name = "show ip ospf" help = "OSPF information" >
      <PARAM name="vrf" help="VRF Instance" ptype="SUBCOMMAND" mode="subcommand" optional="true">
        <PARAM name = "vrftype" help = "" ptype = "SUBCOMMAND" mode="switch" >
          <PARAM name="vrf-name" help="Name of VRF (Max size 15, prefixed by Vrf)" ptype="STRING_15" default="default"/>
          <PARAM name = "all" help = "All VRFs" ptype="SUBCOMMAND" mode="subcommand" />
        </PARAM>
      </PARAM>

      <PARAM name = "cmdtype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
        <PARAM name="border-routers" help="Show all the ABR's and ASBR's" ptype="SUBCOMMAND" mode="subcommand">
        </PARAM>

        <PARAM name="route" help="OSPF routing table" ptype="SUBCOMMAND" mode="subcommand">
        </PARAM>

        <PARAM name="database" help="Database summary" ptype="SUBCOMMAND" mode="subcommand" >
          <PARAM name = "databasetype" help = "" ptype = "SUBCOMMAND" mode="switch" >
            <PARAM name="asbr-summary" help="ASBR summary link states" ptype="SUBCOMMAND" mode="subcommand">
              <PARAM name = "lsid" help = "Link State ID (as an IP address)" ptype = "IP_ADDR" mode="subcommand" optional="true" />
              <PARAM name = "lstype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
                <PARAM name="adv-router" help="Advertising Router link states" ptype="SUBCOMMAND" mode="subcommand">
                  <PARAM name = "advrouter" help = "Advertising Router link states" ptype = "IP_ADDR" mode="subcommand" />
                </PARAM>
                <PARAM name="self-originate" help="Self-originated link statess" ptype="SUBCOMMAND" mode="subcommand" />
              </PARAM>
            </PARAM>

            <PARAM name="external" help="External link states" ptype="SUBCOMMAND" mode="subcommand">
              <PARAM name = "lsid" help = "Link State ID (as an IP address)" ptype = "IP_ADDR" mode="subcommand" optional="true" />
              <PARAM name = "lstype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
                <PARAM name="adv-router" help="Advertising Router link states" ptype="SUBCOMMAND" mode="subcommand">
                  <PARAM name = "advrouter" help = "Advertising Router link states" ptype = "IP_ADDR" mode="subcommand" />
                </PARAM>
                <PARAM name="self-originate" help="Self-originated link statess" ptype="SUBCOMMAND" mode="subcommand" />
              </PARAM>
            </PARAM>

            <PARAM name="max-age" help="LSAs in MaxAge list" ptype="SUBCOMMAND" mode="subcommand" >
            </PARAM>

            <PARAM name="network" help="Network link states" ptype="SUBCOMMAND" mode="subcommand" >
              <PARAM name = "lsid" help = "Link State ID (as an IP address)" ptype = "IP_ADDR" mode="subcommand" optional="true" />
              <PARAM name = "lstype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
                <PARAM name="adv-router" help="Advertising Router link states" ptype="SUBCOMMAND" mode="subcommand">
                  <PARAM name = "advrouter" help = "Advertising Router link states" ptype = "IP_ADDR" mode="subcommand" />
                </PARAM>
                <PARAM name="self-originate" help="Self-originated link statess" ptype="SUBCOMMAND" mode="subcommand" />
              </PARAM>
            </PARAM> 

            <PARAM name="nssa-external" help="NSSA external link state" ptype="SUBCOMMAND" mode="subcommand" >
              <PARAM name = "lsid" help = "Link State ID (as an IP address)" ptype = "IP_ADDR" mode="subcommand" optional="true" />
              <PARAM name = "lstype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
                <PARAM name="adv-router" help="Advertising Router link states" ptype="SUBCOMMAND" mode="subcommand">
                  <PARAM name = "advrouter" help = "Advertising Router link states" ptype = "IP_ADDR" mode="subcommand" />
                </PARAM>
                <PARAM name="self-originate" help="Self-originated link statess" ptype="SUBCOMMAND" mode="subcommand" />
              </PARAM>
            </PARAM> 

            <PARAM name="opaque-area" help="Link area Opaque-LSA" ptype="SUBCOMMAND" mode="subcommand" >
              <PARAM name = "lsid" help = "Link State ID (as an IP address)" ptype = "IP_ADDR" mode="subcommand" optional="true" />
              <PARAM name = "lstype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
                <PARAM name="adv-router" help="Advertising Router link states" ptype="SUBCOMMAND" mode="subcommand">
                  <PARAM name = "advrouter" help = "Advertising Router link states" ptype = "IP_ADDR" mode="subcommand" />
                </PARAM>
                <PARAM name="self-originate" help="Self-originated link statess" ptype="SUBCOMMAND" mode="subcommand" />
              </PARAM>
            </PARAM> 

            <PARAM name="opaque-as" help="Link AS Opaque-LSA" ptype="SUBCOMMAND" mode="subcommand" >
              <PARAM name = "lsid" help = "Link State ID (as an IP address)" ptype = "IP_ADDR" mode="subcommand" optional="true" />
              <PARAM name = "lstype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
                <PARAM name="adv-router" help="Advertising Router link states" ptype="SUBCOMMAND" mode="subcommand">
                  <PARAM name = "advrouter" help = "Advertising Router link states" ptype = "IP_ADDR" mode="subcommand" />
                </PARAM>
                <PARAM name="self-originate" help="Self-originated link statess" ptype="SUBCOMMAND" mode="subcommand" />
              </PARAM>
            </PARAM>

            <PARAM name="opaque-link" help="Link local Opaque-LSA" ptype="SUBCOMMAND" mode="subcommand" >
              <PARAM name = "lsid" help = "Link State ID (as an IP address)" ptype = "IP_ADDR" mode="subcommand" optional="true" />
              <PARAM name = "lstype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
                <PARAM name="adv-router" help="Advertising Router link states" ptype="SUBCOMMAND" mode="subcommand">
                  <PARAM name = "advrouter" help = "Advertising Router link states" ptype = "IP_ADDR" mode="subcommand" />
                </PARAM>
                <PARAM name="self-originate" help="Self-originated link statess" ptype="SUBCOMMAND" mode="subcommand" />
              </PARAM>
            </PARAM> 

            <PARAM name="router" help="Router link states" ptype="SUBCOMMAND" mode="subcommand" >
              <PARAM name = "lsid" help = "Link State ID (as an IP address)" ptype = "IP_ADDR" mode="subcommand" optional="true" />
              <PARAM name = "lstype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
                <PARAM name="adv-router" help="Advertising Router link states" ptype="SUBCOMMAND" mode="subcommand">
                  <PARAM name = "advrouter" help = "Advertising Router link states" ptype = "IP_ADDR" mode="subcommand" />
                </PARAM>
                <PARAM name="self-originate" help="Self-originated link statess" ptype="SUBCOMMAND" mode="subcommand" />
              </PARAM>
            </PARAM>

            <PARAM name="self-originate" help="Self-originated link states" ptype="SUBCOMMAND" mode="subcommand" >
            </PARAM> 

            <PARAM name="summary" help="Network summary link states" ptype="SUBCOMMAND" mode="subcommand" >
              <PARAM name = "lsid" help = "Link State ID (as an IP address)" ptype = "IP_ADDR" mode="subcommand" optional="true" />
              <PARAM name = "lstype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
                <PARAM name="adv-router" help="Advertising Router link states" ptype="SUBCOMMAND" mode="subcommand">
                  <PARAM name = "advrouter" help = "Advertising Router link states" ptype = "IP_ADDR" mode="subcommand" />
                </PARAM>
                <PARAM name="self-originate" help="Self-originated link statess" ptype="SUBCOMMAND" mode="subcommand" />
              </PARAM>
            </PARAM>
          </PARAM>
        </PARAM>

        <PARAM name="interface" help="Interface information" ptype="SUBCOMMAND" mode="subcommand" >
          <PARAM name="traffic" help="Protocol Packet counters" ptype="SUBCOMMAND" mode="subcommand" optional="true"/>
          <PARAM name = "interfacename" help = "Interface name" ptype = "STRING" optional="true"/>
        </PARAM>

        <PARAM name="neighbor" help="Neighbor list" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name = "neighborshowtype" help = "" ptype = "SUBCOMMAND" mode="switch" optional="true">
            <PARAM name = "neighip" help = "Neighbor ID" ptype = "IP_ADDR" optional="true" />
            <PARAM name="all" help="include down status neighbor" ptype="SUBCOMMAND" mode="subcommand" optional="true"/>
            <PARAM name = "interfacename" help = "Interface name" ptype = "STRING" optional="true"/>
          </PARAM>
          <PARAM name="detail" help="detail of all neighbors" ptype="SUBCOMMAND" mode="subcommand" optional="true" />
        </PARAM>
      </PARAM>

      <ACTION>
        if test "${cmdtype}" = ""; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf show_ip_ospf.j2 ${vrf-name} &#xA;
        elif test "${cmdtype}" = "neighbor"; then&#xA;
            if test "${neighborshowtype}" = ""; then&#xA;
                python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_neighbor show_ip_ospf_neighbor.j2 ${vrf-name} &#xA;
            else&#xA;
                if test "${neighborshowtype}" = "neighip"; then&#xA;
                    python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_neighbor_detail show_ip_ospf_neighbor_detail.j2 ${vrf-name} ${neighip} &#xA;
                elif test "${neighborshowtype}" = "interfacename" &amp;&amp; test "${interfacename}" = "detail"; then&#xA;
                    python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_neighbor_detail show_ip_ospf_neighbor_detail.j2 ${vrf-name} &#xA;
                elif test "${neighborshowtype}" = "interfacename" &amp;&amp; test "${interfacename}" != "detail" &amp;&amp; test "${detail}" != ""; then&#xA;
                    python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_neighbor_detail show_ip_ospf_neighbor_detail.j2 ${vrf-name} ${interfacename} &#xA;
                elif test "${neighborshowtype}" = "interfacename" &amp;&amp; test "${interfacename}" != "detail"; then&#xA;
                    python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_neighbor show_ip_ospf_neighbor.j2 ${vrf-name} ${interfacename} &#xA;
                fi&#xA;
            fi&#xA;
        elif test "${cmdtype}" = "interface" &amp;&amp; test "${traffic}" = "" &amp;&amp; test "${interfacename}" = ""; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_interface show_ip_ospf_interface.j2 ${vrf-name} &#xA;
        elif test "${cmdtype}" = "interface" &amp;&amp; test "${traffic}" = "" &amp;&amp; test "${interfacename}" != ""; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_interface show_ip_ospf_interface.j2 ${vrf-name} ${interfacename} &#xA;
        elif test "${cmdtype}" = "interface" &amp;&amp; test "${traffic}" != "" &amp;&amp; test "${interfacename}" = ""; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_interface_traffic show_ip_ospf_interface_traffic.j2 ${vrf-name} &#xA;
        elif test "${cmdtype}" = "interface" &amp;&amp; test "${traffic}" != "" &amp;&amp; test "${interfacename}" != ""; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_interface_traffic show_ip_ospf_interface_traffic.j2 ${vrf-name} ${interfacename} &#xA;
        elif test "${cmdtype}" = "route"; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_route show_ip_ospf_route.j2 ${vrf-name} &#xA;
        elif test "${cmdtype}" = "border-routers"; then&#xA;
            python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_border_routers show_ip_ospf_border_routers.j2 ${vrf-name} &#xA;
        fi&#xA;
      </ACTION>
        <DOCGEN>
    <DESCRIPTION>
      Display ospf global information
    </DESCRIPTION>
    <EXAMPLE summary="Display ospf information for all vrf">
      device# show ip ospf
 OSPF Routing Process, Router ID: 1.1.1.1
 Supports only single TOS (TOS0) routes
 This implementation conforms to RFC2328
 RFC1583Compatibility flag is enabled
 OpaqueCapability flag is disabled
 Initial SPF scheduling delay 0 millisec(s) 
 Minimum hold time between consecutive SPFs 50 millisec(s) 
 Maximum hold time between consecutive SPFs 5000 millisec(s)
 Hold time multiplier is currently 1
 time is 92031756
 SPF algorithm last executed 1065d4h22m ago
 Last SPF duration 0.0s 
 SPF timer is inactive
 LSA minimum interval 5000 msecs  
 LSA minimum arrival 1000 msecs
 Write Multiplier set to 20 
 Refresh timer 10 secs
 Number of external LSA 0. Checksum Sum 0x0
 Number of opaque AS LSA 0. Checksum Sum 0x0
 Number of areas attached to this router: 2
 Area ID: 0.0.0.0 (Backbone)
   Number of interfaces in this area: Total: 1 , Active: 1
   Number of fully adjacent neighbors in this area: 1
   Area has no authentication
   SPF algorithm executed 8 times
   Number of LSA 3
   Number of router LSA 2. Checksum Sum 0x40f64b4000000000
   Number of network LSA 1. Checksum Sum 0x40d5adc000000000
   Number of summary LSA 0. Checksum Sum 0x0
   Number of ASBR summary LSA 0. Checksum Sum 0x0
   Number of NSSA LSA 0. Checksum Sum 0x0
   Number of opaque link LSA . Checksum Sum 0x
   Number of opaque area LSA 0. Checksum Sum 0x0
 Area ID: 0.0.0.1  
   Number of interfaces in this area: Total: 1 , Active: 1
   Number of fully adjacent neighbors in this area: 0
   Area has no authentication
   SPF algorithm executed 1 times
   Number of LSA 2
   Number of router LSA 0. Checksum Sum 0x0
   Number of network LSA 0. Checksum Sum 0x0
   Number of summary LSA 2. Checksum Sum 0x40f1f61000000000
   Number of ASBR summary LSA 0. Checksum Sum 0x0
   Number of NSSA LSA 0. Checksum Sum 0x0
   Number of opaque link LSA . Checksum Sum 0x
   Number of opaque area LSA 0. Checksum Sum 0x0
    </EXAMPLE>
  </DOCGEN>
     </COMMAND>

     <COMMAND name="show ip ospf route" help="OSPF routing table" >
        <ACTION>python $SONIC_CLI_ROOT/sonic-cli-show-ospfv2.py show_ip_ospf_route show_ip_ospf_route.j2 default&#xA;</ACTION>
     </COMMAND>

     <COMMAND name="show ip ospf vrfs" help="Show OSPF VRFs" >
        <ACTION builtin="clish_nop"></ACTION>
     </COMMAND>

     <COMMAND name="show ip ospf router-info" help="Router Information" >
        <ACTION builtin="clish_nop"></ACTION>
     </COMMAND>
</VIEW>

<!--=======================================================-->
<!--                Config Interface PHY-MODE              -->
<!--=======================================================-->

<VIEW name="configure-if-view">
    <MACRO name="BIND-INTF-TO-OSPF" arg="${iface}"></MACRO>
</VIEW>

<VIEW name="configure-lag-view">
    <MACRO name="BIND-INTF-TO-OSPF" arg="${po_name}"></MACRO>
</VIEW>

<VIEW name="configure-vlan-view">
    <MACRO name="BIND-INTF-TO-OSPF" arg="${vlan_name}"></MACRO>
</VIEW>

<VIEW name="configure-lo-view">
    <MACRO name="BIND-INTF-TO-OSPF" arg="${lo_name}"></MACRO>
</VIEW>

</CLISH_MODULE>
