<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2019 Dell, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<CLISH_MODULE
    xmlns="http://www.dellemc.com/sonic/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xsi:schemaLocation="http://www.dellemc.com/sonic/XMLSchema
    http://www.dellemc.com/sonic/XMLSchema/clish.xsd"
    >
    <VAR name="phyifname" dynamic="true">
        <ACTION>echo -n "${phy-if-name}" | sed 's#/#%2f#g'</ACTION>
    </VAR>

    <VIEW name="enable-view">
    <!--show interface -->
    <COMMAND
         name="show interface"
         help="Show interface info"
         >
         <PARAM
             name="if-subcommands"
             help="Interface subcommands"
             mode="switch"
             ptype="SUBCOMMAND"
             >
             <!-- show interface counters -->
             <PARAM
                 name="counters"
                 help="Counters for physical interfaces"
                 ptype="SUBCOMMAND"
                 mode="subcommand"
                 >
             </PARAM>
             <!-- show interface Ethernet [<id>] -->
             <PARAM 
                 name="Eth" 
                 help="Physical Interface" 
                 test="${SONIC_CLI_IFACE_MODE} = alias" 
                 ptype="SUBCOMMAND" 
                 mode="subcommand"
                 hidden="true" 
                 >
                 <PARAM 
                    name="iface_num" 
                    help="Physical Interface" 
                    ptype="ETH_PHY_SLOT_PORT_SUBPORT" 
                    optional="true"
                    hidden="true"
                    > 
                 </PARAM>
             </PARAM>
             <PARAM 
                 name="Ethernet" 
                 help="Physical Interface" 
                 test="-z ${SONIC_CLI_IFACE_MODE}" 
                 ptype="SUBCOMMAND" 
                 mode="subcommand"
                 hidden="true" 
                 >
                 <PARAM 
                    name="iface_num" 
                    help="Physical Interface" 
                    ptype="UINT" 
                    optional="true"
                    hidden="true"
                    > 
                 </PARAM>
             </PARAM>
             <PARAM
                 name="phy-if-name"
                 help="Physical Interface"
                 ptype="PHY_INTERFACE"
                 >
             </PARAM>
	         <!-- show interface PortChannel-->
	         <PARAM
                 name="PortChannel"
                 help="PortChannel interface"
                 ptype="SUBCOMMAND"
                 mode="subcommand"
                 >
                 <PARAM
                    name="po-id"
                    help="PortChannel ID"
                    ptype="LAG_ID"
                    optional="true"
                    >
                 </PARAM>
             </PARAM>
             <!-- show interface Management -->
             <PARAM
                 name="Management"
                 help="Management interface"
                 ptype="SUBCOMMAND"
                 mode="subcommand"
                 >
                 <PARAM
                    name="mgmt-if-id"
                    help="Management interface id"
                    ptype="MGMT_INTF_ID"
                    optional="true"
                    >
                </PARAM>
             </PARAM>
             <!-- show interface Vlan-->
             <PARAM
                 name="Vlan"
                 help="VLAN interface"
                 ptype="SUBCOMMAND"
                 mode="subcommand"
                 >
                 <PARAM
                    name="vlan-id"
                    help="Vlan ID"
                    ptype="VLAN_ID"
                    >
                 </PARAM>
             </PARAM>
           <!-- show interface Loopback-->
           <PARAM
                 name="Loopback"
                 help="Loopback interface"
                 ptype="SUBCOMMAND"
                 mode="subcommand"
                 >
                 <PARAM
                    name="lo-id"
                    help="Loopback ID"
                    ptype="LO_ID"
                    >
                 </PARAM>
             </PARAM>
             <PARAM
                 name="status"
                 help="Physical interfaces status"
                 ptype="SUBCOMMAND"
                 mode="subcommand"
                 >
             </PARAM>
          <!-- show interface transceiver-->
          <PARAM
                name="transceiver"
                help="Transceiver info"
                ptype="SUBCOMMAND"
                mode="subcommand"
                >
                <PARAM
                    name="phy-if-name"
                    help="Interface"
                    ptype="PHY_INTERFACE"
                    optional="true"
                    >
                </PARAM>
                <PARAM
                    name="summary"
                    help="Summary of transceiver info"
                    ptype="SUBCOMMAND"
                    mode="subcommand"
                    optional="true"
                    >
                 </PARAM>
          </PARAM>
         </PARAM>
   <ACTION>
        if test "${if-subcommands}" = "status"; then&#xA;
            python $SONIC_CLI_ROOT/sonic_cli_if.py get_sonic_port_sonic_port_port_table show_sonic_interface_status.j2 ${__full_line}&#xA;
        elif test "${if-subcommands}" = "counters"; then&#xA;
            python $SONIC_CLI_ROOT/sonic_cli_if.py rpc_interface_counters show_intf_counters.j2 ${__full_line}&#xA;
        elif test "${if-subcommands}" = "PortChannel"; then&#xA;
            if test "${po-id}" = ""; then&#xA;
                python $SONIC_CLI_ROOT/sonic-cli-interface-port-channel.py get_all_portchannels show_interface_portchannel.j2 ${__full_line}&#xA;
            else&#xA;
                python $SONIC_CLI_ROOT/sonic-cli-interface-port-channel.py get_specific_portchannel PortChannel${po-id} show_interface_portchannel.j2 ${__full_line}&#xA;
            fi&#xA;
        elif test "${if-subcommands}" = "Management"; then&#xA;
            if test "${mgmt-if-id}" = ""; then&#xA;
            python $SONIC_CLI_ROOT/sonic_cli_if.py get_openconfig_interfaces_interfaces_interface eth0 show_mgmt_interface_id.j2 ${__full_line}&#xA;
            else&#xA;
            python $SONIC_CLI_ROOT/sonic_cli_if.py get_openconfig_interfaces_interfaces_interface eth${mgmt-if-id} show_mgmt_interface_id.j2 ${__full_line}&#xA;
            fi&#xA;
        elif test "${if-subcommands}" = "Vlan"; then&#xA;
            if test "${vlan-id}" = ""; then&#xA;
                #Note: TODO, Discussion needed&#xA;
                python $SONIC_CLI_ROOT/sonic_cli_if.py get_all_vlans show_interface_vlan.j2 ${__full_line}&#xA;
            else&#xA;
            python $SONIC_CLI_ROOT/sonic_cli_if.py get_openconfig_interfaces_interfaces_interface Vlan${vlan-id} show_interface_vlan.j2 ${__full_line}&#xA;
            fi&#xA;
        elif test "${if-subcommands}" = "Loopback"; then&#xA;
            if test "${lo-id}" = ""; then&#xA;
                # Note: TODO, Discussion needed&#xA;
                python $SONIC_CLI_ROOT/sonic_cli_if.py get_all_loopbacks show_interface_loopback.j2 ${__full_line}&#xA;
            else&#xA;
            python $SONIC_CLI_ROOT/sonic_cli_if.py get_openconfig_interfaces_interfaces_interface Loopback${lo-id} show_interface_loopback.j2 ${__full_line}&#xA;
            fi&#xA;
        elif test "${if-subcommands}" = "Eth"; then&#xA;
            if test "${iface_num}" = ""; then&#xA;
                python $SONIC_CLI_ROOT/sonic_cli_if.py get_openconfig_interfaces_interfaces show_interface.j2 ${__full_line}&#xA;
            else&#xA;
                python $SONIC_CLI_ROOT/sonic_cli_if.py get_openconfig_interfaces_interfaces_interface Eth${iface_num} show_interface_id.j2 ${__full_line}&#xA;
            fi&#xA;
        elif test "${if-subcommands}" = "Ethernet"; then&#xA;
            if test "${iface_num}" = ""; then&#xA;
                python $SONIC_CLI_ROOT/sonic_cli_if.py get_openconfig_interfaces_interfaces show_interface.j2 ${__full_line}&#xA;
            else&#xA;
                python $SONIC_CLI_ROOT/sonic_cli_if.py get_openconfig_interfaces_interfaces_interface Ethernet${iface_num} show_interface_id.j2 ${__full_line}&#xA;
            fi&#xA;
        elif test "${if-subcommands}" = "transceiver"; then&#xA;
            if test "${summary}" = "summary"; then&#xA;
                python $SONIC_CLI_ROOT/sonic-cli-pfm.py get_openconfig_platform_components_component_transceiver_status Ethernet_SUMMARY platform_transceiver_show.j2 ${__full_line}&#xA;
            elif test "${phy-if-name}" = ""; then&#xA;
                python $SONIC_CLI_ROOT/sonic-cli-pfm.py get_openconfig_platform_components_component_transceiver_status Ethernet_ALL platform_transceiver_show.j2 ${__full_line}&#xA;
            else&#xA;
                python $SONIC_CLI_ROOT/sonic-cli-pfm.py get_openconfig_platform_components_component_transceiver_status ${phy-if-name} platform_transceiver_show.j2 ${__full_line}&#xA;
            fi&#xA;
        else&#xA;
            if test "${phy-if-name}" = ""; then&#xA;
            python $SONIC_CLI_ROOT/sonic_cli_if.py get_openconfig_interfaces_interfaces show_interface.j2 ${__full_line}&#xA;
            else&#xA;
            python $SONIC_CLI_ROOT/sonic_cli_if.py get_openconfig_interfaces_interfaces_interface ${phy-if-name} show_interface_id.j2 ${__full_line}&#xA;
            fi&#xA;
        fi
   </ACTION>
   </COMMAND>

   <COMMAND
       name="show Vlan"
       help="Show VLAN commands"
       ptype="SUBCOMMAND"
       mode="subcommand"
       >
       <PARAM
           name="id"
           help="VLAN identifier"
           ptype="VLAN_ID"
           optional="true"
           >
       </PARAM>
   <ACTION builtin="clish_pyobj">sonic_cli_vlan get_sonic_vlan_sonic_vlan Vlan${id} show_vlan.j2 ${__full_line}</ACTION>
   </COMMAND>
   <COMMAND
       name="show NeighbourSuppressStatus"
       help="Show arp and nd suppression status"
       ptype="SUBCOMMAND"
       mode="subcommand"
       >
       <PARAM
           name="id"
           help="VLAN identifier"
           ptype="VLAN_ID"
           optional="true"
           >
       </PARAM>
   <ACTION>
       if test "${id}" = ""; then&#xA;
          python $SONIC_CLI_ROOT/sonic_cli_vlan.py get_sonic_vxlan_sonic_vxlan_suppress_vlan_neigh "" show_neigh_suppress.j2 ${__full_line}&#xA;
       else&#xA;
          python $SONIC_CLI_ROOT/sonic_cli_vlan.py get_sonic_vxlan_sonic_vxlan_suppress_vlan_neigh Vlan${id} show_neigh_suppress.j2 ${__full_line}&#xA;
       fi&#xA;
   </ACTION>
   </COMMAND>
   <COMMAND
       name="show PortChannel"
       help="LAG status and configuration"
       ptype="SUBCOMMAND"
       mode="subcommand" />
    <COMMAND
        name="show PortChannel summary"
        help="LAG status and configurationn"
        mode="subcommand">
       <ACTION>
            python $SONIC_CLI_ROOT/sonic-cli-portchannel.py get_sonic_portchannel_sonic_portchannel_lag_table show_portchannel.j2 ${__full_line}&#xA;
       </ACTION>
   </COMMAND>
   <COMMAND
        name="show threshold"
        help="show threshold commands"/>
   <COMMAND
	name="show threshold breaches"
	help="Show threshold breach entries"
	ptype="SUBCOMMAND"
	mode="subcommand">
	<ACTION>
            python $SONIC_CLI_ROOT/sonic_cli_threshold.py get_threshold_breach_event_reports ${__full_line}&#xA;
	</ACTION>
	<DOCGEN>
           <DESCRIPTION>
                   This command is used to show information about threshold breach events recorded by the system.
           </DESCRIPTION>
           <USAGE>
                   Use this command to display the threshold breach events recorded by the system.
           </USAGE>
           <EXAMPLE
		    summary="Show threshold breaches">
	------------------------------------------------------------------------------------------------------------------
	Event-id    Buffer            Type        Port           Index     Breach Value(%)       Time-stamp
	------------------------------------------------------------------------------------------------------------------
	2           priority-group    shared      Ethernet0      7         77                    2020-04-14-11:35:20
	3           queue             unicast     Ethernet0      5         45                    2020-04-17-11:30:20
	   </EXAMPLE>
	</DOCGEN>
    </COMMAND>
    <COMMAND name="show threshold buffer-pool" help="Show buffer-pool configuration" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION> python $SONIC_CLI_ROOT/sonic_cli_threshold.py get_list_sonic_threshold_sonic_threshold_threshold_bufferpool_table_threshold_bufferpool_table_list ${__full_line}</ACTION>
    </COMMAND>
    <COMMAND name="show threshold priority-group" help="Show priority-group threshold configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="threshold_buffer_type" help="choose from shared, headroom." mode="switch" ptype="SUBCOMMAND">
        <PARAM name="headroom" help="choose headroom as threshold buffer type" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="shared" help="choose shared as threshold buffer type" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION> python $SONIC_CLI_ROOT/sonic_cli_threshold.py get_list_sonic_threshold_sonic_threshold_threshold_table_threshold_table_list ${__params} ${__full_line}
 </ACTION>
    </COMMAND>
    <COMMAND name="show threshold queue" help="Show queue threshold configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="queue_buffer_type" help="choose from unicast/multicast as queue buffer type" mode="switch" ptype="SUBCOMMAND">
        <PARAM name="unicast" help="choose unicast as queue_buffer_type" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="multicast" help="choose multicast as queue_buffer_type" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="CPU" help="choose threshold cpu queue" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION> python $SONIC_CLI_ROOT/sonic_cli_threshold.py get_list_sonic_threshold_sonic_threshold_threshold_table_threshold_table_list ${__params} ${__full_line}
 </ACTION>
    </COMMAND>
    <COMMAND name="clear threshold"
                 help="Clear threshold"
                 ptype="SUBCOMMAND"
                 >
                 <PARAM name="breach"
                        help="Clear threshold breach events"
                        ptype="SUBCOMMAND"
                        mode="subcommand"
                        >
                        <PARAM
                            name="eventid-switch"
                            help="breach clear type all or eventId"
                            ptype="SUBCOMMAND"
                            mode="switch"
                            >
                            <PARAM
                                name="all"
                                help="Clear all threshold breaches"
                                ptype="SUBCOMMAND"
                                mode="subcommand"
                                >
                            </PARAM>
                            <PARAM name="eventId"
                                   help="Clear threshold breach of an eventId"
                                   ptype="RANGE_0_65535">
                            </PARAM>
                            </PARAM>
                            </PARAM>
			<ACTION>python $SONIC_CLI_ROOT/sonic_cli_threshold.py rpc_sonic_threshold_clear_threshold_breach ${__full_line} </ACTION>
			<DOCGEN>
			<DESCRIPTION>
				This command is used to clear all or a given threshold breach event(s) recorded by the system.
			</DESCRIPTION>
			<USAGE>
				Use this command to clear all or a given threshold breach event(s) recorded by the system.
			</USAGE>
			<EXAMPLE
				summary="Clear threshold breach">
					sonic-cli# clear threshold breach all
					sonic-cli# clear threshold breach eventId
			</EXAMPLE>
			</DOCGEN>
	</COMMAND>
   </VIEW>
   <VIEW
       name="configure-view"
       >
     <COMMAND
        name="interface"
        help="Select an interface"
        db_flag="SEP_CLI"
        view_keys="name=*|name=*"
        view_tables="sonic-port:sonic-port/PORT/ifname={name}|sonic-vlan:sonic-vlan/VLAN/name={name}"
        >
        <PARAM
                name="if-switch"
                help="Interface commands"
                mode="switch"
                ptype="STRING"
                db_flag="SEP_CLI"
        >
        <PARAM
                name="phy-if-name"
                help="Enter Physical interface global configuration"
                ptype="PHY_INTERFACE"
                view="configure-if-view"
                dbpath="sonic-port:sonic-port/PORT/ifname"
                viewid="iface=${phy-if-name};iface_uri=${phyifname}"
        />
        <PARAM
                name="vlan-if-name"
                help="Enter VLAN global configuration"
                ptype="VLAN_INTERFACE"
                view="configure-vlan-view"
                dbpath="sonic-vlan:sonic-vlan/VLAN/name"
                viewid="vlan_name=${vlan-if-name}"
        />
        </PARAM>
	<ACTION builtin="clish_pyobj">sonic_cli_if if_config ${if-switch} ${phy-if-name}${vlan-if-name}</ACTION>
     </COMMAND>

     <COMMAND
         name="interface Management"
         help="Management interface commands"
         view="configure-if-mgmt-view"
         viewid="iface=eth${mgmt-if-id}"
         view_keys="name=*"
         view_tables="sonic-mgmt-port:sonic-mgmt-port/MGMT_PORT/ifname={name}"
         render_command_cb="interface_management"
         mode="subcommand"
         ptype="SUBCOMMAND"
         >
         <PARAM
             name="mgmt-if-id"
             help="Enter Management interface global configuration"
             ptype="MGMT_INTF_ID"
             >
         </PARAM>
         <ACTION builtin="clish_nop"></ACTION>
     </COMMAND>

    <COMMAND
        name="interface PortChannel"
        help="PortChannel interface configuration"
        mode="subcommand"
        ptype="SUBCOMMAND"
        view="configure-lag-view"
        viewid="po_id=po${lag-id};po_name=PortChannel${lag-id};"
        view_keys="name=*"
        view_tables="sonic-portchannel:sonic-portchannel/PORTCHANNEL/name={name}"
        render_command_cb="interface_portchannel"
        >
        <PARAM
                name="lag-id"
                help="Enter PortChannel interface global configuration"
                ptype="LAG_ID"
                >
        </PARAM>
        <PARAM
                name="mode"
                help="PortChannel Mode"
                ptype="SUBCOMMAND"
                mode="subcommand"
                optional="true"
                >
                <PARAM
                        name="PoMode"
                        help=""
                        ptype="PO_MODE"
                        >
                </PARAM>
        </PARAM>
        <PARAM
                name="min-links"
                help="Minimum links"
                ptype="SUBCOMMAND"
                mode="subcommand"
                optional="true"
                >
                <PARAM
                        name="min-links-value"
                        help="Minimum links value"
                        ptype="MIN_LINK"
                        >
                </PARAM>
        </PARAM>
        <PARAM
                name="fallback"
                help="LACP Fallback"
                ptype="SUBCOMMAND"
                mode="subcommand"
                optional="true"
                >
         </PARAM>
         <PARAM
                name="fast_rate"
                help="LACP Fast Rate Interval"
                ptype="SUBCOMMAND"
                mode="subcommand"
                optional="true"
                >
         </PARAM>

         <ACTION builtin="clish_pyobj">sonic_cli_if portchannel_config PortChannel${lag-id} mode=${PoMode} min-links=${min-links-value} fallback=${fallback} fast_rate=${fast_rate}</ACTION>
    </COMMAND>

    <COMMAND
        name="interface Loopback"
        help="Loopback interface configuration"
        mode="subcommand"
        ptype="SUBCOMMAND"
        view="configure-lo-view"
        viewid="lo_id=lo${lo-id};lo_name=Loopback${lo-id};"
        view_keys="name=*"
        view_tables="sonic-loopback-interface:sonic-loopback-interface/LOOPBACK_INTERFACE/loIfName={name}"
        render_command_cb="interface_loopback"
        >
        <PARAM
                name="lo-id"
                help="Enter Loopback interface global configuration"
                ptype="LO_ID"
                >
        </PARAM>
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=Loopback${lo-id}/config body={"openconfig-interfaces:config": {"name": "Loopback${lo-id}"}}</ACTION>
    </COMMAND>

     <!-- no interface commands -->
     <COMMAND
         name="no interface"
         help="Delete interface"
         />
     <COMMAND
         name="no interface Vlan"
         help="Delete VLAN"
         mode="subcommand"
         ptype="SUBCOMMAND"
         >
         <PARAM
             name="vlan-id"
             help="VLAN identifier"
             ptype="VLAN_ID"
             >
         </PARAM>
        <ACTION builtin="clish_restcl">oper=DELETE url=/restconf/data/openconfig-interfaces:interfaces/interface=Vlan${vlan-id}</ACTION>
    </COMMAND>

    <COMMAND
        name="no interface PortChannel"
        help="Delete PortChannel"
        mode="subcommand"
        ptype="SUBCOMMAND"
        >
        <PARAM
                name="lag-id"
                help="PortChannel identifier"
                ptype="LAG_ID"
                >
        </PARAM>
        <ACTION builtin="clish_restcl">oper=DELETE url=/restconf/data/openconfig-interfaces:interfaces/interface=PortChannel${lag-id}</ACTION>
    </COMMAND>

    <COMMAND
        name="no interface Loopback"
        help="Delete Loopback"
        mode="subcommand"
        ptype="SUBCOMMAND"
        >
        <PARAM
                name="lo-id"
                help="Loopback identifier"
                ptype="LO_ID"
                >
        </PARAM>
        <ACTION builtin="clish_restcl">oper=DELETE url=/restconf/data/openconfig-interfaces:interfaces/interface=Loopback${lo-id}</ACTION>
    </COMMAND>
	<COMMAND
         name="interface CPU"
         help="CPU Interface commands"
         view="config-if-CPU-view"
         viewid="cpu_ifname=CPU"
         mode="subcommand"
         ptype="SUBCOMMAND"
         view_keys="name=CPU"
         view_tables="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/buffer={buffer}, threshold_buffer_type={threshold} interface_name={name}, buffer_index_per_port={port}"
         >
         <ACTION builtin="clish_nop"></ACTION>
     </COMMAND>
     <COMMAND name="buffer-pool" help="Configure buffer pool."/>
	<COMMAND name="buffer-pool threshold" help="configure buffer pool threshold."
		ptype="SUBCOMMAND"
		mode="subcommand"
		>
                <PARAM
                    name="buffer_pool_name"
                    help="configure buffer pool name"
                    ptype="STRING_63"
                    >
                 </PARAM>
		<PARAM
                       name="threshold_value"
                       help="threshold value"
                       ptype="PERCENT_1">
                </PARAM>
	<ACTION builtin="clish_pyobj">sonic_cli_threshold patch_sonic_threshold_sonic_threshold_threshold_bufferpool_table_threshold_bufferpool_table_list_threshold ${__params}</ACTION>
	<DOCGEN>
           <DESCRIPTION>
                   this command is to configure buffer pool threshold on ingress/egress buffers pools-lossy/lossless.
           </DESCRIPTION>
           <USAGE>
                   use this command to configure buffer pool threshold on ingress/egress buffer pools-lossy/lossless.
           </USAGE>
           <EXAMPLE
                    summary="buffer pool threshold configuration commands.">
			    sonic(config)# buffer-pool threshold ingress_lossless_pool 1
			    sonic(config)# buffer-pool threshold egress_lossy_pool 1
			    sonic(config)# buffer-pool threshold egress_lossless_pool 1
           </EXAMPLE>
	</DOCGEN>
         </COMMAND>
     <!-- no buffer-pool commands -->
     <COMMAND
         name="no buffer-pool"
         help="Remove buffer-pool config"
         />
     <COMMAND name="no buffer-pool threshold"
             help="Remove buffer-pool threshold config"
             ptype="SUBCOMMAND"
             mode="subcommand">
                <ACTION builtin="clish_pyobj">sonic_cli_threshold delete_list_sonic_threshold_sonic_threshold_threshold_bufferpool_table_threshold_bufferpool_table_list ${__full_line}</ACTION>
                <DOCGEN>
                <DESCRIPTION>
                        This command can be used to remove buffer-pool threshold configured on ingress and egress buffers.
                </DESCRIPTION>
                <USAGE>
                        Use this command to remove buffer-pool threshold configured on ingress and egress buffers.
                </USAGE>
                <EXAMPLE
			summary="Removes previously configured buffer-pool threshold on ingress and egress buffers.">
                                sonic(config)# no buffer-pool threshold
                </EXAMPLE>
                </DOCGEN>
     </COMMAND>
     </VIEW>

     <VIEW
        name="configure-if-view"
        prompt="${SYSTEM_NAME}(conf-if-${iface})# "
        depth="2"
        >
        <NAMESPACE
            ref="configure-view"
            help="false"
            completion="false"
            />
        <COMMAND
            name="no"
            help="Negate a command or set its defaults"
            />

        <COMMAND
            name="nat-zone"
            help="NAT Zone"
            command_tables="sonic-interface:sonic-interface/INTERFACE/portname={name}">
            <PARAM
                name="zone"
                help="NAT Zone of the interface"
                dbpath="sonic-interface:sonic-interface/INTERFACE/nat_zone"
                ptype="RANGE_NAT_ZONE" />
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/openconfig-interfaces-ext:nat-zone/config/nat-zone body={"openconfig-interfaces-ext:nat-zone": ${zone}}</ACTION>
        </COMMAND>
        <COMMAND
            name="no nat-zone"
            help="Remove NAT Zone on an interface" >
            <ACTION builtin="clish_restcl">oper=DELETE url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/openconfig-interfaces-ext:nat-zone/config/nat-zone</ACTION>
        </COMMAND>

        <COMMAND
            name="description"
            help="Textual description">
            <PARAM
                name="desc"
                help="Textual description of the interface"
                dbpath="sonic-port:sonic-port/PORT/description"
                ptype="STRING" />
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/config/description body={"openconfig-interfaces:description": "${desc}"}</ACTION>
        </COMMAND>
        <COMMAND
            name="no description"
            help="Remove description" >
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/config/description body={"openconfig-interfaces:description": ""}</ACTION>
        </COMMAND>
        <COMMAND
            name="mtu"
            help="Configure MTU">
            <PARAM
                name="mtu"
                help="MTU of the interface"
                dbpath="sonic-port:sonic-port/PORT/mtu"
                ptype="RANGE_MTU" />
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/config/mtu body={"openconfig-interfaces:mtu": ${mtu}}</ACTION>
        </COMMAND>
        <COMMAND
            name="no mtu"
            help="Remove MTU">
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/config/mtu body={"openconfig-interfaces:mtu": 9100}</ACTION>
        </COMMAND>
        <COMMAND
            name="speed"
            help="Configure speed">
            <PARAM
                name="speed"
                help="Speed config of the interface"
                dbpath="sonic-port:sonic-port/PORT/speed"
                ptype="INTF_SPEED" />
            <ACTION builtin="clish_pyobj">sonic_cli_if patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed ${iface_uri} ${speed}</ACTION>
        </COMMAND>
        <COMMAND
            name="no speed"
            help="Set default speed config">
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/openconfig-if-ethernet:ethernet/config/port-speed body = {"openconfig-if-ethernet:port-speed": "SPEED_UNKNOWN"}</ACTION>
        </COMMAND>
        <COMMAND
            name="channel-group"
            render_command_cb="if_channel_group"
            help="Configure PortChannel parameters"
            command_tables="sonic-portchannel:sonic-portchannel/PORTCHANNEL_MEMBER/name={vname},ifname={name}"
            >
            <!-- channel-group <number> -->
            <PARAM
                name="lag-id"
                help="Specify a PortChannel number"
                ptype="LAG_ID"
            >
        </PARAM>
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/openconfig-if-ethernet:ethernet/config/openconfig-if-aggregate:aggregate-id body={"openconfig-if-aggregate:aggregate-id": "${lag-id}"}</ACTION>
        </COMMAND>

        <COMMAND
            name="no channel-group"
            help="Remove from PortChannel group">
        <ACTION builtin="clish_restcl">oper=DELETE url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/openconfig-if-ethernet:ethernet/config/openconfig-if-aggregate:aggregate-id</ACTION>
        </COMMAND>
        <COMMAND
            name="shutdown"
            help="Disable the interface"
            dbpath="sonic-port:sonic-port/PORT/admin_status=down">
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/config/enabled body={"openconfig-interfaces:enabled": false}</ACTION>
        </COMMAND>
        <COMMAND
            name="no shutdown"
            help="Enable the interface">
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/config/enabled body={"openconfig-interfaces:enabled": true}</ACTION>
        </COMMAND>

        <COMMAND
            name="switchport"
            help="Configure switchport parameters"
             />
        <COMMAND
            name="switchport access"
            help="Set access mode characteristics of the interface"
            ptype="SUBCOMMAND"
            mode="subcommand"
            render_command_cb="if_switchport_access"
            command_tables="sonic-vlan:sonic-vlan/VLAN_MEMBER/name={vname},ifname={name}"
            >
            <PARAM
                name="Vlan"
                help="Set VLAN when interface is in access mode"
                ptype="SUBCOMMAND"
                mode="subcommand"
                >
                <PARAM
                    name="vlan-id"
                    help="VLAN ID of the VLAN when this port is in access mode"
                    ptype="VLAN_ID"
                    />
            </PARAM>
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/config body={"openconfig-vlan:config": {"interface-mode": "ACCESS", "access-vlan": ${vlan-id}}}</ACTION>
        </COMMAND>

        <COMMAND
            name="switchport trunk"
            help="Configure trunking parameters on an interface"
            ptype="SUBCOMMAND"
            mode="subcommand"
            render_command_cb="if_switchport_trunk"
            command_tables="sonic-vlan:sonic-vlan/VLAN_MEMBER/name={vname},ifname={name}"            
            >
            <PARAM
                name="allowed"
                help="Configure trunking parameters on an interface"
                ptype="SUBCOMMAND"
                mode="subcommand"
                >
                <PARAM
                    name="Vlan"
                    help="Configure trunking parameters on an interface"
                    ptype="SUBCOMMAND"
                    mode="subcommand"
                    >
                    <PARAM
                        name="vlan_id_list"
                        help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142"
                        ptype="VLAN_RANGE"
                        />
                </PARAM>
            </PARAM>
             <ACTION builtin="clish_pyobj">sonic_cli_if patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config ${iface_uri} TRUNK ${vlan_id_list}</ACTION>
       </COMMAND>

       <COMMAND name="sflow" help="Interface sFlow settings"/>
       <COMMAND name="sflow sampling-rate" help="Set sampling-rate" ptype="SUBCOMMAND" mode="subcommand"  command_tables="sonic-sflow:sonic-sflow/SFLOW_SESSION/ifname={name}">
            <PARAM name="rate" help="Sampling rate" ptype="SFLOW_SAMPLING_RATE" dbpath="sonic-sflow:sonic-sflow/SFLOW_SESSION/sample_rate"/>
            <ACTION builtin="clish_restcl">oper=PATCH url= /restconf/data/sonic-sflow:sonic-sflow/SFLOW_SESSION/SFLOW_SESSION_LIST=${iface_uri}/sample_rate body={"sonic-sflow:sample_rate": ${rate}}</ACTION>
       </COMMAND>

       <COMMAND name="sflow enable" help="Enable sflow" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-sflow:sonic-sflow/SFLOW_SESSION/ifname={name}" dbpath="sonic-sflow:sonic-sflow/SFLOW_SESSION/admin_state=up">
            <ACTION builtin="clish_restcl">oper=PATCH url= /restconf/data/sonic-sflow:sonic-sflow/SFLOW_SESSION/SFLOW_SESSION_LIST=${iface_uri}/admin_state body={"sonic-sflow:admin_state": "up"}</ACTION>
       </COMMAND>

       <COMMAND name="no sflow" help="Interface sFlow settings"/>
       <COMMAND name="no sflow enable" help="Disable sflow">
            <ACTION builtin="clish_restcl">oper=PATCH url= /restconf/data/sonic-sflow:sonic-sflow/SFLOW_SESSION/SFLOW_SESSION_LIST=${iface_uri}/admin_state body={"sonic-sflow:admin_state": "down"}</ACTION>
       </COMMAND>

       <COMMAND name="no sflow sampling-rate" help="Set sampling rate to default" ptype="SUBCOMMAND" mode="subcommand">
            <ACTION builtin="clish_restcl">oper=DELETE url= /restconf/data/sonic-sflow:sonic-sflow/SFLOW_SESSION/SFLOW_SESSION_LIST=${iface_uri}/sample_rate</ACTION>
       </COMMAND>

       <COMMAND name="no switchport" help="Remove switchport paramaters"/>
       <COMMAND
            name="no switchport access"
            help="Remove access mode characteristics of the interface"
            ptype="SUBCOMMAND"
            mode="subcommand"
       >
            <PARAM
                name="Vlan"
                help="Remove VLAN when interface is in access mode"
                ptype="SUBCOMMAND"
                mode="subcommand"
                >
            </PARAM>
            <ACTION builtin="clish_restcl">oper=DELETE url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface_uri}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/config/access-vlan</ACTION>
        </COMMAND>

        <COMMAND
            name="no switchport trunk"
            help="Remove trunking parameters on an interface"
            ptype="SUBCOMMAND"
            mode="subcommand"
            >
            <PARAM
                name="allowed"
                help="Remove trunking parameters on an interface"
                ptype="SUBCOMMAND"
                mode="subcommand"
            >
                 <PARAM
                    name="Vlan"
                    help="Remove trunking parameters on an interface"
                    ptype="SUBCOMMAND"
                    mode="subcommand"
                    >
                <PARAM
                    name="vlan_id_list"
                    help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142"
                    ptype="VLAN_RANGE"
                />
                </PARAM>
            </PARAM>
            <ACTION builtin="clish_pyobj">sonic_cli_if del_llist_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans ${iface_uri} TRUNK ${vlan_id_list}</ACTION>
        </COMMAND>
	<COMMAND name="threshold" help="Configure priority-group/queue threshold on an interface."/>
	<COMMAND name="threshold priority-group"
		 help="Configure priority-group thresholds" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/buffer={buffer}, threshold_buffer_type={threshold}, interface_name={name}, buffer_index_per_port={port}" dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/buffer=priority-group">
		<PARAM name="PG-Index"
			help="PG Index value"
			ptype="RANGE_0_7"
      dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/buffer_index_per_port">
		</PARAM>
		<PARAM
			name="threshold_buffer_type"
			help="choose from shared, headroom."
			mode="switch"
			ptype="SUBCOMMAND">
                <PARAM
                       name="headroom"
                       help="choose headroom as threshold buffer type"
                       ptype="SUBCOMMAND"
                       mode="subcommand"
                       dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/threshold_buffer_type=headroom">
		</PARAM>
		<PARAM
                       name="shared"
                       help="choose shared as threshold buffer type"
                       ptype="SUBCOMMAND"
                       mode="subcommand"
                       dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/threshold_buffer_type=shared">
		</PARAM>
		</PARAM>
		<PARAM
		       name="threshold_value"
		       help="Threshold value"
		       ptype="PERCENT_1"
           dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/threshold">
                </PARAM>
	    <ACTION builtin="clish_pyobj">sonic_cli_threshold patch_sonic_threshold_sonic_threshold_threshold_table_threshold_table_list_threshold ${__full_line} ${iface}</ACTION>
		<DOCGEN>
		<DESCRIPTION>
			This command is used to configure a threshold for a specific priority-group shared/headroom buffer of an interface. The threshold value is provided in %. Valid values are 1-100.
		</DESCRIPTION>
		<USAGE>
			Use this command to configure a threshold for a  specific priority-group shared/headroom buffer of an interface.
		</USAGE>
		<EXAMPLE summary="Configure priority-group buffer threshold configuration.">
				sonic(conf-if-Ethernet0)# threshold priority-group 5 headroom 57
				sonic(conf-if-Ethernet0)# threshold priority-group 7 shared 78
		</EXAMPLE>
		</DOCGEN>
	</COMMAND>
	<COMMAND name="threshold queue"
		 help="Configure queue thresholds" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/buffer={buffer}, threshold_buffer_type={threshold},interface_name={name}, buffer_index_per_port={port}" dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/buffer=queue">
		<PARAM
                       name="queue_index"
                       help="queue_index value"
                       ptype="RANGE_0_7"
                       dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/buffer_index_per_port">
                </PARAM>
	        <PARAM
			name="queue_buffer_type"
			help="choose from unicast/multicast as queue buffer type"
			mode="switch"
			ptype="SUBCOMMAND">
		<PARAM
			name="unicast"
			help="choose unicast as queue_buffer_type"
			ptype="SUBCOMMAND"
			mode="subcommand"
      dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/threshold_buffer_type=unicast">
		</PARAM>
		<PARAM
                       name="multicast"
                       help="choose multicast as queue_buffer_type"
                       ptype="SUBCOMMAND"
                       mode="subcommand"
                       dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/threshold_buffer_type=multicast">
		</PARAM>
                </PARAM>
		<PARAM
		       name="threshold_value"
		       help="Threshold value"
		       ptype="PERCENT_1"
           dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/threshold">
                </PARAM>
		<ACTION builtin="clish_pyobj">sonic_cli_threshold patch_sonic_threshold_sonic_threshold_threshold_table_threshold_table_list_threshold ${__full_line} ${iface} </ACTION>
		<DOCGEN>
		<DESCRIPTION>
			This command is used to configure a threshold for a specific unicast/multicast queue of an interface. The threshold value is provided in %. Valid values are 1-100..
		</DESCRIPTION>
		<USAGE>
			Use this command to configure queue threshold for a specific unicast/multicast queue of an interface.
		</USAGE>
		<EXAMPLE summary="Configure queue buffer threshold configuration.">
					sonic(conf-if-Ethernet0)# threshold queue 4 unicast 47
					sonic(conf-if-Ethernet0)# threshold queue 2 multicast 67
		</EXAMPLE>
		</DOCGEN>
	</COMMAND>
	<COMMAND
	        name="no threshold"
		help="Remove priority-group/queue thresholds"
		>
	</COMMAND>

	<!-- no threshold priority-group -->
	<COMMAND name="no threshold priority-group"
		help="Clears priority-group buffer threshold."
		ptype="SUBCOMMAND"
		mode="subcommand">
                <PARAM name="PG-Index" help="PG Index value" ptype="RANGE_0_7"> </PARAM>
                <PARAM name="clear-priority-group-subcommands" help="Clear priority group sub commands" mode="switch" ptype="SUBCOMMAND">
		<PARAM name="headroom" help="Choose headroom as threshold buffer type." ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
		<PARAM name="shared" help="Choose shared as threshold buffer type." ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
                </PARAM>
	<ACTION builtin="clish_pyobj">sonic_cli_threshold delete_sonic_threshold_sonic_threshold_threshold_table_threshold_table_list_threshold ${__full_line} ${iface}</ACTION>
		<DOCGEN>
		<DESCRIPTION>
			This command can be used to clear a previously configured threshold on shared/headroom priority-group buffer of an interface.
		</DESCRIPTION>
		<USAGE>
			Use this command to clear a previously configured threshold on shared/headroom priority-group buffer of an interface.
		</USAGE>
		<EXAMPLE summary="Clear a previously configured threshold on shared/headroom priority-group buffer of an interface.">
				 sonic(conf-if-Ethernet0)# no threshold priority-group 5 headroom
				 sonic(conf-if-Ethernet0)# no threshold priority-group 7 shared
			</EXAMPLE>
		</DOCGEN>
	</COMMAND>
	<!-- no threshold queue -->
	<COMMAND name="no threshold queue"
             help="Clears queue buffer threshold."
             ptype="SUBCOMMAND"
             mode="subcommand">
		<PARAM name="queue_index" help="queue Index value" ptype="RANGE_0_7"> </PARAM>
		<PARAM name="clear-queue-subcommands" help="Clear queue sub commands" mode="switch" ptype="SUBCOMMAND">
		<PARAM name="unicast" help="Choose unicast as queue buffer type." ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
		<PARAM name="multicast" help="Choose multicast as queue buffer type." ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
		</PARAM>
	        <ACTION builtin="clish_pyobj">sonic_cli_threshold delete_sonic_threshold_sonic_threshold_threshold_table_threshold_table_list_threshold ${__full_line} ${iface} </ACTION>
		<DOCGEN>
		<DESCRIPTION>
			This command can be used to clear a previously configured threshold on unicast/multicast queue buffer of an interface .
		</DESCRIPTION>
		<USAGE>
			Use this command to clear a previously configured threshold on unicast/multicast queue buffer of an interface.
		</USAGE>
		<EXAMPLE summary="Clear a previously configured threshold on unicast/multicast queue buffer of an interface.">
				sonic(conf-if-Ethernet0)# no threshold queue 7 unicast
				sonic(conf-if-Ethernet0)# no threshold queue 5 multicast
			</EXAMPLE>
		</DOCGEN>
    </COMMAND>
    </VIEW>

<VIEW
     name="configure-lo-view"
     prompt="${SYSTEM_NAME}(conf-if-${lo_id})# "
     depth="2"
     >
        <!-- Inheritance -->
     <NAMESPACE
         ref="configure-view"
         help="false"
         completion="false"
      />
      <COMMAND
        name="no"
        help="Negate a command or set its defaults"
      />
      <COMMAND
            name="nat-zone"
            help="NAT Zone"
            command_tables="sonic-loopback-interface:sonic-loopback-interface/LOOPBACK_INTERFACE/loIfName={name}">
            <PARAM
                name="zone"
                help="NAT zone of the interface"
                ptype="RANGE_NAT_ZONE" 
                dbpath="sonic-loopback-interface:sonic-loopback-interface/LOOPBACK_INTERFACE/nat_zone"/>
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${lo_name}/openconfig-interfaces-ext:nat-zone/config/nat-zone body={"openconfig-interfaces-ext:nat-zone": ${zone}}</ACTION>
        </COMMAND>
        <COMMAND
            name="no nat-zone"
            help="Remove Nat Zone on the interface" >
            <ACTION builtin="clish_restcl">oper=DELETE url=/restconf/data/openconfig-interfaces:interfaces/interface=${lo_name}/openconfig-interfaces-ext:nat-zone/config/nat-zone</ACTION>
        </COMMAND>
</VIEW>

<VIEW
     name="configure-vlan-view"
     prompt="${SYSTEM_NAME}(conf-if-${vlan_name})# "
     depth="2"
     >
        <!-- Inheritance -->
     <NAMESPACE
         ref="configure-view"
         help="false"
         completion="false"
      />
      <COMMAND
        name="no"
        help="Negate a command or set its defaults"
      />

      <COMMAND
            name="nat-zone"
            help="NAT Zone"
            command_tables="sonic-vlan-interface:sonic-vlan-interface/VLAN_INTERFACE/vlanName={name}">
            <PARAM
                name="zone"
                help="NAT Zone of the VLAN"
                ptype="RANGE_NAT_ZONE" 
                dbpath="sonic-vlan-interface:sonic-vlan-interface/VLAN_INTERFACE/nat_zone"/>
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${vlan_name}/openconfig-interfaces-ext:nat-zone/config/nat-zone body={"openconfig-interfaces-ext:nat-zone": ${zone}}</ACTION>
        </COMMAND>
        <COMMAND
            name="no nat-zone"
            help="Remove NAT Zone on a VLAN" >
            <ACTION builtin="clish_restcl">oper=DELETE url=/restconf/data/openconfig-interfaces:interfaces/interface=${vlan_name}/openconfig-interfaces-ext:nat-zone/config/nat-zone</ACTION>
        </COMMAND>

      <COMMAND
            name="mtu"
            help="Configure MTU">
            <PARAM
                name="mtu"
                help="MTU of the VLAN interface"
                ptype="RANGE_MTU"
                dbpath="sonic-vlan:sonic-vlan/VLAN/mtu"
            />
          <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${vlan_name}/config/mtu body={"openconfig-interfaces:mtu": ${mtu}}</ACTION>
       </COMMAND>
       <COMMAND
            name="no mtu"
            help="Remove MTU of VLAN interface">
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${vlan_name}/config/mtu body={"openconfig-interfaces:mtu": 9100}</ACTION>
      </COMMAND>
      <COMMAND
        name="neigh_suppress"
        help="Enable ARP and ND Suppression"
        command_tables="sonic-vxlan:sonic-vxlan/SUPPRESS_VLAN_NEIGH/name={name}"
        dbpath="sonic-vxlan:sonic-vxlan/SUPPRESS_VLAN_NEIGH/suppress=on">
        <ACTION builtin="clish_pyobj">sonic_cli_vxlan patch_sonic_vxlan_sonic_vxlan_suppress_vlan_neigh_suppress_vlan_neigh_list ${vlan_name}</ACTION>
      </COMMAND>
      <COMMAND
        name="no neigh_suppress"
        help="Disable ARP and ND Suppression">
        <ACTION builtin="clish_pyobj">sonic_cli_vxlan delete_sonic_vxlan_sonic_vxlan_suppress_vlan_neigh_suppress_vlan_neigh_list ${vlan_name}</ACTION>
      </COMMAND>
      <!--
      <COMMAND
        name="shutdown"
        help="Disable the Vlan interface">
        <ACTION>python $SONIC_CLI_ROOT/sonic_cli_if.py patch_openconfig_interfaces_interfaces_interface_config_enabled ${vlan_name} False </ACTION>
      </COMMAND>
      <COMMAND
        name="no shutdown"
        help="Enable the Vlan interface">
        <ACTION>python $SONIC_CLI_ROOT/sonic_cli_if.py patch_openconfig_interfaces_interfaces_interface_config_enabled ${vlan_name} True </ACTION>
      </COMMAND>
      -->

    <COMMAND
           name="mclag-separate-ip"
           help="Configure separate IP on Vlan interface for L3 protocol support over MCLAG"
           command_tables="sonic-mclag:sonic-mclag/MCLAG_UNIQUE_IP/if_name={name}"
           dbpath="sonic-mclag:sonic-mclag/MCLAG_UNIQUE_IP/unique_ip=enable" >
           <ACTION builtin="clish_pyobj">sonic_cli_mclag patch_sonic_mclag_seperate_ip_list ${vlan_name} </ACTION>
           <DOCGEN>
               <DESCRIPTION>
                   Configure separate IP on Vlan interface for L3 protocol support over MCLAG
               </DESCRIPTION>
               <USAGE>
                   sonic-cli(conf-if-Vlan10)# mclag-separate-ip
               </USAGE>
               <EXAMPLE summary="mclag-separate-ip">
                   sonic-cli(config)# interface Vlan 10
                   sonic-cli(conf-if-Vlan10)# mclag-separate-ip
               </EXAMPLE>
           </DOCGEN>
    </COMMAND>
    <COMMAND
           name="no mclag-separate-ip"
           help="Unconfigure separate IP on Vlan interface for L3 protocol support over MCLAG" >
           <ACTION builtin="clish_pyobj">sonic_cli_mclag delete_sonic_mclag_seperate_ip_list ${vlan_name} </ACTION>
           <DOCGEN>
               <DESCRIPTION>
                   Unconfigure separate IP on Vlan interface for L3 protocol support over MCLAG
               </DESCRIPTION>
               <USAGE>
                   sonic-cli(conf-if-Vlan10)# no mclag-separate-ip
               </USAGE>
               <EXAMPLE summary="no mclag-separate-ip">
                   sonic-cli(config)# interface Vlan 10
                   sonic-cli(conf-if-Vlan10)# no mclag-separate-ip
               </EXAMPLE>
           </DOCGEN>
    </COMMAND>
</VIEW> <!-- End of Configure View for Vlan-->
<VIEW
    name="configure-lag-view"
    prompt="${SYSTEM_NAME}(conf-if-${po_id})# "
    depth="2"
    >
    <!-- Inheritance -->
    <NAMESPACE
        ref="configure-view"
        help="false"
        completion="false"
        />

        <COMMAND
            name="nat-zone"
            help="NAT Zone"
            command_tables="sonic-portchannel-interface:sonic-portchannel-interface/PORTCHANNEL_INTERFACE/pch_name={name}">
            <PARAM
                name="zone"
                help="NAT Zone of the PortChannel"
                ptype="RANGE_NAT_ZONE" 
                dbpath="sonic-portchannel-interface:sonic-portchannel-interface/PORTCHANNEL_INTERFACE/nat_zone"/>
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${po_name}/openconfig-interfaces-ext:nat-zone/config/nat-zone body={"openconfig-interfaces-ext:nat-zone": ${zone}}</ACTION>
        </COMMAND>
        <COMMAND
            name="no nat-zone"
            help="Remove NAT Zone on a PortChannel" >
            <ACTION builtin="clish_restcl">oper=DELETE url=/restconf/data/openconfig-interfaces:interfaces/interface=${po_name}/openconfig-interfaces-ext:nat-zone/config/nat-zone</ACTION>
        </COMMAND>

        <COMMAND
            name="switchport"
            help="Configure switchport parameters"
        />

        <COMMAND
           name="switchport access"
           help="Set access mode characteristics of the interface"
           ptype="SUBCOMMAND"
           mode="subcommand"
           command_tables="sonic-vlan:sonic-vlan/VLAN_MEMBER/name={vname},ifname={name}"
           render_command_cb="if_switchport_access">
           <PARAM
               name="Vlan"
               help="Set VLAN when interface is in access mode"
               ptype="SUBCOMMAND"
               mode="subcommand"
               >
               <PARAM
                   name="vlan-id"
                   help="VLAN ID of the VLAN when this port is in access mode"
                   ptype="VLAN_ID"
                   />
           </PARAM>
           <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${po_name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/config body={"openconfig-vlan:config": {"interface-mode": "ACCESS", "access-vlan": ${vlan-id}}}</ACTION>
       </COMMAND>

       <COMMAND
           name="switchport trunk"
           help="Configure trunking parameters on an interface"
           ptype="SUBCOMMAND"
           mode="subcommand"
           command_tables="sonic-vlan:sonic-vlan/VLAN_MEMBER/name={vname},ifname={name}"           
           render_command_cb="if_switchport_trunk"           
           >
           <PARAM
               name="allowed"
               help="Configure trunking parameters on an interface"
               ptype="SUBCOMMAND"
               mode="subcommand"
               >
               <PARAM
                   name="Vlan"
                   help="Configure trunking parameters on an interface"
                   ptype="SUBCOMMAND"
                   mode="subcommand"
                   >
                   <PARAM
                       name="vlan_id_list"
                       help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142"
                       ptype="VLAN_RANGE"
                       />
               </PARAM>
           </PARAM>
            <ACTION builtin="clish_pyobj">sonic_cli_if patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config ${po_name} TRUNK ${vlan_id_list}</ACTION>
      </COMMAND>

        <COMMAND
            name="no switchport"
            help="Removes switchport parameters"
        />

      <COMMAND
            name="no switchport access"
            help="Remove access mode characteristics of the interface"
            ptype="SUBCOMMAND"
            mode="subcommand"
            >
            <PARAM
                name="Vlan"
                help="Remove VLAN when interface is in access mode"
                ptype="SUBCOMMAND"
                mode="subcommand"
                >
            </PARAM>
            <ACTION builtin="clish_restcl">oper=DELETE url=/restconf/data/openconfig-interfaces:interfaces/interface=${po_name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/config/access-vlan</ACTION>
       </COMMAND>

       <COMMAND
            name="no switchport trunk"
            help="Remove trunking parameters on an interface"
            ptype="SUBCOMMAND"
            mode="subcommand"
            >
            <PARAM
                name="allowed"
                help="Remove trunking parameters on an interface"
                ptype="SUBCOMMAND"
                mode="subcommand"
            >
                <PARAM
                    name="Vlan"
                    help="Remove trunking parameters on an interface"
                    ptype="SUBCOMMAND"
                    mode="subcommand"
                >
                    <PARAM
                        name="vlan_id_list"
                        help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142"
                        ptype="VLAN_RANGE"
                    />
                </PARAM>
            </PARAM>
            <ACTION builtin="clish_pyobj">sonic_cli_if del_llist_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans ${po_name} TRUNK ${vlan_id_list}</ACTION>
        </COMMAND>

    <COMMAND
        name="no"
        help="Negate a command or set its defaults"
        />
    <COMMAND
        name="mtu"
        help="Configure MTU">
        <PARAM
            name="mtu"
            help="MTU of the interface"
            ptype="RANGE_MTU" 
            dbpath="sonic-portchannel:sonic-portchannel/PORTCHANNEL/mtu"/>
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${po_name}/config/mtu body={"openconfig-interfaces:mtu": ${mtu}}</ACTION>
    </COMMAND>
    <COMMAND
        name="no mtu"
        help="Configure default MTU">
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${po_name}/config/mtu body={"openconfig-interfaces:mtu": 9100}</ACTION>
    </COMMAND>
    <COMMAND
        name="shutdown"
        help="Disable the interface"
        dbpath="sonic-portchannel:sonic-portchannel/PORTCHANNEL/admin_status=down">
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${po_name}/config/enabled body={"openconfig-interfaces:enabled": false}</ACTION>
    </COMMAND>
    <COMMAND
        name="no shutdown"
        help="Enable the interface"
        dbpath="sonic-portchannel:sonic-portchannel/PORTCHANNEL/admin_status=up">
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${po_name}/config/enabled body={"openconfig-interfaces:enabled": true}</ACTION>
    </COMMAND>

    <COMMAND
           name="mclag"
           help="Configure MCLAG interface" 
           command_tables="sonic-mclag:sonic-mclag/MCLAG_INTERFACE=if_name={name},domain_id={id}"
           render_command_cb="if_lag_mclag">
           <PARAM name="domain_id" help="mclag domain id" ptype="RANGE_1_4095" />
           <ACTION builtin="clish_pyobj">sonic_cli_mclag patch_sonic_mclag_sonic_mclag_mclag_interface_mclag_interface_list ${domain_id} ${po_name} </ACTION>
    </COMMAND>
    <COMMAND
           name="no mclag"
           help="Unconfigure MCLAG interface">
           <PARAM name="domain_id" help="mclag domain id" ptype="RANGE_1_4095" />
           <ACTION builtin="clish_pyobj">sonic_cli_mclag delete_sonic_mclag_sonic_mclag_mclag_interface_mclag_interface_list ${domain_id} ${po_name} </ACTION>
    </COMMAND>
    </VIEW> <!-- End of Configure View for PortChannel-->

    <VIEW
        name="configure-if-mgmt-view"
        prompt="${SYSTEM_NAME}(conf-if-${iface})# "
        depth="2"
        >

        <NAMESPACE
            ref="configure-view"
            help="false"
            completion="false"
            />
        <COMMAND
            name="no"
            help="Negate a command or set its defaults"
            />
        <COMMAND
            name="shutdown"
            help="Disable the interface"
            dbpath="sonic-mgmt-port:sonic-mgmt-port/MGMT_PORT/admin_status=down">
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/config/enabled body={"openconfig-interfaces:enabled": false}</ACTION>
        </COMMAND>
        <COMMAND
            name="no shutdown"
            help="Enable the interface">
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/config/enabled body={"openconfig-interfaces:enabled": true}</ACTION>
        </COMMAND>
        <COMMAND
            name="description"
            help="Textual description">
            <PARAM
                name="desc"
                help="Textual description of the interface"
                ptype="STRING"
                dbpath="sonic-mgmt-port:sonic-mgmt-port/MGMT_PORT/description" />
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/config/description body={"openconfig-interfaces:description": "${desc}"}</ACTION>
        </COMMAND>
        <COMMAND
            name="no description"
            help="Remove description" >
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/config/description body={"openconfig-interfaces:description": ""}</ACTION>
        </COMMAND>
        <COMMAND
            name="mtu"
            help="Configure MTU">
            <PARAM
                name="mtu"
                help="MTU of the interface"
                ptype="MGMT_RANGE_MTU" 
                dbpath="sonic-mgmt-port:sonic-mgmt-port/MGMT_PORT/mtu" />
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/config/mtu body={"openconfig-interfaces:mtu": ${mtu}}</ACTION>
        </COMMAND>
        <COMMAND
            name="no mtu"
            help="Set default MTU (1500)">
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/config/mtu body={"openconfig-interfaces:mtu": 1500}</ACTION>
        </COMMAND>
        <COMMAND
            name="autoneg"
            help="Configure autoneg"
            render_command_cb="if_management_autoneg" >
            <PARAM
                name="autoneg"
                help="Autoneg config of the interface"
                ptype="ON_OFF" 
                dbpath="sonic-mgmt-port:sonic-mgmt-port/MGMT_PORT/autoneg=true" />
            <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/openconfig-if-ethernet:ethernet/config/auto-negotiate  body={"openconfig-if-ethernet:auto-negotiate": true}</ACTION>
        </COMMAND>
        <COMMAND
            name="no autoneg"
            help="Set default autoneg config">
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/openconfig-if-ethernet:ethernet/config/auto-negotiate  body={"openconfig-if-ethernet:auto-negotiate": false}</ACTION>
        </COMMAND>
        <COMMAND
            name="speed"
            help="Configure speed">
            <PARAM
                name="speed"
                help="Speed config of the interface"
                ptype="MGMT_INTF_SPEED" 
                dbpath="sonic-mgmt-port:sonic-mgmt-port/MGMT_PORT/speed" />
            <ACTION builtin="clish_pyobj">sonic_cli_if patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed ${iface} ${speed}</ACTION>
        </COMMAND>
        <COMMAND
            name="no speed"
            help="Set default speed config">
        <ACTION builtin="clish_restcl">oper=PATCH url=/restconf/data/openconfig-interfaces:interfaces/interface=${iface}/openconfig-if-ethernet:ethernet/config/port-speed body = {"openconfig-if-ethernet:port-speed": "SPEED_1GB"}</ACTION>
        </COMMAND>

    </VIEW>

<VIEW
         name="config-if-CPU-view"
         prompt="${SYSTEM_NAME}(conf-if-CPU)# "
         depth="2"
         >
         <NAMESPACE
             ref="configure-view"
             help="false"
             completion="false"
             />
	<COMMAND name="threshold" help="Configure threshold on CPU interface."/>
        <COMMAND
	     name="threshold queue"
	     help="Configure queue buffer threshold on CPU interface."
	     ptype="SUBCOMMAND"
       mode="subcommand"
       dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/buffer=queue">
		    <PARAM
                       name="cpu_queue_index"
                       help="cpu_queue_index value"
                       ptype="RANGE_0_47"
                       dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/buffer_index_per_port">
                </PARAM>
		            <PARAM
                       name="multicast"
                       help="choose multicast as queue buffer type on CPU interface"
                       ptype="SUBCOMMAND"
                       mode="subcommand"
                       dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/threshold_buffer_type=multicast">
                </PARAM>
		<PARAM
		       name="threshold_value"
		       help="Threshold value"
		       ptype="PERCENT_1"
           dbpath="sonic-threshold:sonic-threshold/THRESHOLD_TABLE/threshold">
                </PARAM>
		<ACTION builtin="clish_pyobj">sonic_cli_threshold patch_sonic_threshold_sonic_threshold_threshold_table_threshold_table_list_threshold ${__full_line}  ${cpu_ifname}</ACTION>
		<DOCGEN>
		<DESCRIPTION>
			This command is used to configure multicact queue buffer threshold of CPU interface. The threshold value is provided in %. Valid values are 1-100..
		</DESCRIPTION>
		<USAGE>
			Use this command to configure multicast queue buffer threshold of CPU interface.
		</USAGE>
		<EXAMPLE summary="Configure queue buffer threshold of CPU interface.">
			sonic(conf-if-CPU)# threshold queue 3 multicast 37
		</EXAMPLE>
		</DOCGEN>
	</COMMAND>

	<!-- no cpu queue threshold -->
        <COMMAND
            name="no"
            help="Negate a command or set its defaults"
            />
	<COMMAND
	        name="no threshold"
		help="Remove CPU interface thresholds"
                ptype="SUBCOMMAND"
                mode="subcommand">
	</COMMAND>
	<COMMAND name="no threshold queue"
		help="Clears CPU interface queue buffer threshold."
		ptype="SUBCOMMAND"
		mode="subcommand">
		<PARAM name="cpu_queue_index" help="cpu_queue index value" ptype="RANGE_0_47"> </PARAM>
		<PARAM name="clear-queue-subcommands" help="Clear queue sub commands" mode="switch" ptype="SUBCOMMAND">
		<PARAM name="multicast" help="Choose multicast as queue buffer type." ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
		</PARAM>
		<ACTION builtin="clish_pyobj">sonic_cli_threshold delete_sonic_threshold_sonic_threshold_threshold_table_threshold_table_list_threshold ${__full_line} ${cpu_ifname} </ACTION>
		<DOCGEN>
		<DESCRIPTION>
			This command can be used to clear a previously configured threshold on multicast queue buffer of CPU interface.
		</DESCRIPTION>
		<USAGE>
			Use this command to clear a previously configured threshold on multicast queue buffer of CPU interface.
		</USAGE>
		<EXAMPLE summary="Clears previously configured threshold on multicast queue buffer of CPU interface.">
				sonic(conf-if-CPU)# no threshold queue 7 multicast 77
		</EXAMPLE>
		</DOCGEN>
	</COMMAND>
    <COMMAND
            name="scheduler-policy"
            help="Scheduler Policy configuration">
           <PARAM
               name="sp_name"
               help="Scheduler Policy name"
               ptype="STRING_32"
               >
            </PARAM>
            <ACTION builtin="clish_pyobj"> sonic_cli_qos patch_openconfig_qos_qos_interfaces_interface_output_scheduler_policy_config_name ${cpu_ifname} ${sp_name}
            </ACTION>
            <DOCGEN>
                <DESCRIPTION>
                    This command is used to configure scheduler policy of CPU interface.
                </DESCRIPTION>
                <USAGE>
                    Use this command to configure scheduler policy of CPU interface.
                </USAGE>
                <EXAMPLE summary="Configure scheduler policy of CPU interface.">
                    sonic(conf-if-CPU)# scheduler-policy scheduler.cpu
                </EXAMPLE>
            </DOCGEN>
        </COMMAND>

        <COMMAND name="no scheduler-policy" help="Unconfigure a scheduler policy">
        <ACTION builtin="clish_restcl">
             oper=DELETE url=/restconf/data/openconfig-qos:qos/interfaces/interface=${cpu_ifname}/output/scheduler-policy/config/name
        </ACTION>
    	<DOCGEN>
		<DESCRIPTION>
			This command can be used to delete scheduler policy of an CPU interface .
		</DESCRIPTION>
		<USAGE>
			Use this command to delete previously configured scheduler policy of an CPU interface.
		</USAGE>
		<EXAMPLE summary="Clear scheduler policy of an interface.">
                sonic(conf-if-CPU)#no scheduler-policy
			</EXAMPLE>
		</DOCGEN>
        </COMMAND>
</VIEW>
</CLISH_MODULE>
