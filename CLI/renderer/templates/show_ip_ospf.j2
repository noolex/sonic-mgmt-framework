{# There are 3 list elements with key as 'openconfig-network-instance:state'(global state, spt timer state and lsa generation state). #}
{# remaining are list elements with area states present in this ospf domain. #}
{% set vars = {'router_id': "0", 'ospf_rfc1583_compatible': "False", 'opaque_capability': "False", 'throttle_delay': "0", 'initial_delay': "0", 'maximum_delay': "0",                'holdtime_multiplier': "0", 'spf_run': "False", 'spf_last_executed_time': 0, 'last_spf_duration':"0", 'spf_timer_running': "False", 'spf_timer_value':"0",
  'min_interval_timer':"0", 'min_arival_timer':"0", 'refresh_timer':"0", 'external_lsa_count':"0", 'external_lsa_checksum':"0", 'opaque_lsa_count':"0",
  'opaque_lsa_checksum':"0", area_count:0, 'area_id': "0", 'total_interface': "0", 'active_interface': "0", 'fully_adj_nbrs': "0", 
  'auth_type': "no", 
        'spf_algo_executed_count': "0", 'all_lsa_count': "0", 'router_lsa_count': "0", 'router_lsa_checksum': "0", 'network_lsa_count': "0", 
        'network_lsa_checksum': "0", 'summary_lsa_count': "0", 'summary_lsa_checksum': "0", 'asbr_summary_lsa_count': "0",  
        'asbr_summary_lsa_checksum': "0", 'nssa_lsa_count': "0",'nssa_lsa_checksum': "0", 'opaque_link_lsa_count': "0", 'opaque_link_lsa_checksum': "0", 
        'opaque_area_lsa_count': "0", 'opaque_lsa_checksum': "0", 'areas_info': "", 'area_exists':"False", 'abrtype': 'None', 'vlink_count' : '0', 'stub_str':'',
        'shortcut_str': 'Default', 'sbit_str': 'no', 'stubAdvertisement': False,
        'preShutdownEnabledSecs': 0, 'postShutdownEnabledSecs': 0 } %}
{% set ospf_global_list = json_output  %}
{% for list_elem in ospf_global_list %}
{% if 'vrfName' in list_elem  %}
VRF Name: {{list_elem['vrfName']}}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'router-id' in list_elem['openconfig-network-instance:global_state']%}
{% if vars.update({'router_id':list_elem['openconfig-network-instance:global_state' ]['router-id']}) %}{% endif -%}
{% if 'openconfig-ospfv2-ext:ospf-rfc1583-compatible' in list_elem['openconfig-network-instance:global_state'] and list_elem['openconfig-network-instance:global_state']['openconfig-ospfv2-ext:ospf-rfc1583-compatible'] == True %}
{% if vars.update({'ospf_rfc1583_compatible':'RFC1583Compatibility flag is enabled'}) %}{% endif -%}
{% else %}
{% if vars.update({'ospf_rfc1583_compatible':'RFC1583Compatibility flag is disabled'}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-ospfv2-ext:opaque-lsa-capability' in list_elem['openconfig-network-instance:global_state'] and list_elem['openconfig-network-instance:global_state']['openconfig-ospfv2-ext:opaque-lsa-capability'] == True %}
{% if vars.update({'opaque_capability':'OpaqueCapability flag is enabled'}) %}{% endif -%}
{% else %}
{% if vars.update({'opaque_capability':'OpaqueCapability flag is disabled'}) %}{% endif -%}
{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:spf_state' in list_elem and 'openconfig-ospfv2-ext:throttle-delay' in list_elem['openconfig-network-instance:spf_state'] %}
{% if vars.update({'throttle_delay':list_elem['openconfig-network-instance:spf_state']['openconfig-ospfv2-ext:throttle-delay']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:spf_state' in list_elem and  'initial-delay' in list_elem['openconfig-network-instance:spf_state'] %}
{% if vars.update({'initial_delay':list_elem['openconfig-network-instance:spf_state']['initial-delay']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:spf_state' in list_elem and  'maximum-delay' in list_elem['openconfig-network-instance:spf_state'] %}
{% if vars.update({'maximum_delay':list_elem['openconfig-network-instance:spf_state']['maximum-delay']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:hold-time-multiplier' in list_elem['openconfig-network-instance:global_state'] %}
{% if vars.update({'holdtime_multiplier':list_elem['openconfig-network-instance:global_state']['openconfig-ospfv2-ext:hold-time-multiplier']}) %}{% endif -%}
{% endif -%}

{% if 'openconfig-network-instance:global_state' in list_elem %}
{% if 'openconfig-ospfv2-ext:last-spf-execution-time' in list_elem['openconfig-network-instance:global_state'] %}
 {% set time = list_elem['openconfig-network-instance:global_state']['openconfig-ospfv2-ext:last-spf-execution-time']|int %}
 {% if vars.update({'spf_last_executed_time':time/1000}) %}{% endif -%}
 {% if vars.update({'spf_run':'True'}) %}{% endif -%}
 {% if vars.update({'last_spf_duration':list_elem['openconfig-network-instance:global_state']['openconfig-ospfv2-ext:last-spf-duration']}) %}{% endif -%}
{% else %}
 {% if vars.update({'spf_run':'False'}) %}{% endif -%}
{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:spf_state' in list_elem and list_elem['openconfig-network-instance:spf_state']['openconfig-ospfv2-ext:spf-timer-due'] != 0 %}
{% if vars.update({'spf_timer_running':'True'}) %}{% endif -%}
{% if vars.update({'spf_timer_value':list_elem['openconfig-network-instance:spf_state']['openconfig-ospfv2-ext:spf-timer-due']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:lsa_gen_state' in list_elem and  'openconfig-ospfv2-ext:lsa-min-interval-timer' in list_elem['openconfig-network-instance:lsa_gen_state'] %}
{% if vars.update({'min_interval_timer':list_elem['openconfig-network-instance:lsa_gen_state']['openconfig-ospfv2-ext:lsa-min-interval-timer']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:lsa_gen_state' in list_elem and  'openconfig-ospfv2-ext:lsa-min-arrival-timer' in list_elem['openconfig-network-instance:lsa_gen_state'] %}
{% if vars.update({'min_arrival_timer':list_elem['openconfig-network-instance:lsa_gen_state']['openconfig-ospfv2-ext:lsa-min-arrival-timer']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:lsa_gen_state' in list_elem and  'openconfig-ospfv2-ext:refresh-timer' in list_elem['openconfig-network-instance:lsa_gen_state'] %}
{% if vars.update({'refresh_timer':list_elem['openconfig-network-instance:lsa_gen_state']['openconfig-ospfv2-ext:refresh-timer']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:write-multiplier' in list_elem['openconfig-network-instance:global_state']%}
{% if vars.update({'write_multiplier':list_elem['openconfig-network-instance:global_state' ]['openconfig-ospfv2-ext:write-multiplier']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:external-lsa-count' in list_elem['openconfig-network-instance:global_state']%}
{% if vars.update({'external_lsa_count':list_elem['openconfig-network-instance:global_state' ]['openconfig-ospfv2-ext:external-lsa-count']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:external-lsa-checksum' in list_elem['openconfig-network-instance:global_state']%}
{% if vars.update({'external_lsa_checksum':list_elem['openconfig-network-instance:global_state' ]['openconfig-ospfv2-ext:external-lsa-checksum']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:opaque-lsa-count' in list_elem['openconfig-network-instance:global_state']%}
{% if vars.update({'opaque_lsa_count':list_elem['openconfig-network-instance:global_state' ]['openconfig-ospfv2-ext:opaque-lsa-count']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:opaque-lsa-checksum' in list_elem['openconfig-network-instance:global_state']%}
{% if vars.update({'opaque_lsa_checksum':list_elem['openconfig-network-instance:global_state' ]['openconfig-ospfv2-ext:opaque-lsa-checksum']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:area-count' in list_elem['openconfig-network-instance:global_state']%}
{% if vars.update({'area_count':list_elem['openconfig-network-instance:global_state' ]['openconfig-ospfv2-ext:area-count']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:stub-advertisement' in list_elem['openconfig-network-instance:global_state']%}
{% if vars.update({'stubAdvertisement':list_elem['openconfig-network-instance:global_state' ]['openconfig-ospfv2-ext:stub-advertisement']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:pre-shutdown-enabled-secs' in list_elem['openconfig-network-instance:global_state']%}
{% if vars.update({'preShutdownEnabledSecs':list_elem['openconfig-network-instance:global_state' ]['openconfig-ospfv2-ext:pre-shutdown-enabled-secs']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:post-start-enabled-secs' in list_elem['openconfig-network-instance:global_state']%}
{% if vars.update({'postShutdownEnabledSecs':list_elem['openconfig-network-instance:global_state' ]['openconfig-ospfv2-ext:post-start-enabled-secs']}) %}{% endif -%}
{% endif -%}
{% if 'openconfig-network-instance:global_state' in list_elem and 'openconfig-ospfv2-ext:abr-type' in list_elem['openconfig-network-instance:global_state']%}
{% if list_elem['openconfig-network-instance:global_state']['openconfig-ospfv2-ext:abr-type'] == 'openconfig-ospfv2-ext:CISCO' %}
{% if vars.update({'abrtype':'Alternative Cisco'}) %}{% endif -%}
{% elif list_elem['openconfig-network-instance:global_state']['openconfig-ospfv2-ext:abr-type'] == 'openconfig-ospfv2-ext:IBM' %}
{% if vars.update({'abrtype':'Alternative IBM'}) %}{% endif -%}
{% elif list_elem['openconfig-network-instance:global_state']['openconfig-ospfv2-ext:abr-type'] == 'openconfig-ospfv2-ext:STANDARD' %}
{% if vars.update({'abrtype':'Standard (RFC2328)'}) %}{% endif -%}
{% elif list_elem['openconfig-network-instance:global_state']['openconfig-ospfv2-ext:abr-type'] == 'openconfig-ospfv2-ext:SHORTCUT' %}
{% if vars.update({'abrtype':'Alternative Shortcut'}) %}{% endif -%}
{% else %}
{% if vars.update({'abrtype':''}) %}{% endif -%}
{% endif %}
{% endif %}
{% if 'openconfig-network-instance:areas' in list_elem %}
{% if vars.update({'areas_info':list_elem['openconfig-network-instance:areas']}) %}{% endif -%}
{% endif %}
{% endfor -%}
 {{' '}}OSPF Routing Process, Router ID: {{vars.router_id}}
 Supports only single TOS (TOS0) routes
 This implementation conforms to RFC2328
 {{vars.ospf_rfc1583_compatible}}
 {{vars.opaque_capability}}
{% if vars.stubAdvertisement == True %}
 Stub router advertisement is configured
{% endif -%}
{% if vars.preShutdownEnabledSecs != 0 %}
 {{'  '}}Enabled for {{vars.preShutdownEnabledSecs}}s prior to full shutdown
{% endif -%}
{% if vars.postShutdownEnabledSecs != 0 %}
 {{'  '}}Enabled for {{vars.postShutdownEnabledSecs}}s after start-up
{% endif -%}
 {{' '}}Initial SPF scheduling delay {{vars.throttle_delay}} millisec(s)
 Minimum hold time between consecutive SPFs {{vars.initial_delay}} millisec(s)
 Maximum hold time between consecutive SPFs {{vars.maximum_delay}} millisec(s)
 Hold time multiplier is currently {{vars.holdtime_multiplier}}
{% if vars.spf_run == "False" -%}
  SPF algorithm has not been run
{% elif vars.spf_last_executed_time/86400 >= 1 -%}
  SPF algorithm last executed {{'%dd%dh%dm%ds'|format(vars.spf_last_executed_time/86400, (vars.spf_last_executed_time%86400)/3600, ((vars.spf_last_executed_time%86400)%3600)/60, ((vars.spf_last_executed_time%86400)%3600)%60 )}} ago
 Last SPF duration {{vars.last_spf_duration}} usecs
{% else -%} 
 {{' '}}SPF algorithm last executed {{'%dh%dm%ds'|format((vars.spf_last_executed_time%86400)/3600, ((vars.spf_last_executed_time%86400)%3600)/60, ((vars.spf_last_executed_time%86400)%3600)%60 )}} ago
 Last SPF duration {{vars.last_spf_duration}} usecs
{%endif -%} 
 {% if vars.spf_timer_running == "False" %}
 SPF timer is inactive
{%else %}
 SPF timer due in {{vars.spf_timer_value}} secs.
{%endif %}
 LSA minimum interval {{vars.min_interval_timer}} msecs  
 LSA minimum arrival {{vars.min_arrival_timer}} msecs
 Write Multiplier set to {{vars.write_multiplier}}
 Refresh timer {{'%2d'|format(vars.refresh_timer/1000)}} secs
{% if vars.abrtype != 'None' -%}
 {{' '}}This router is an ABR, ABR type is: {{vars.abrtype}}
{% endif -%}
 {{' '}}Number of external LSA {{vars.external_lsa_count}}. Checksum Sum {{'%8s'|format(vars.external_lsa_checksum.rjust(8,'0'))}}
 Number of opaque AS LSA {{vars.opaque_lsa_count}}. Checksum Sum {{'%8s'|format(vars.opaque_lsa_checksum.rjust(8,'0'))}}
 Number of areas attached to this router: {{vars.area_count}}
{% if vars.area_count != 0 %}
{% set area_id_list = [] %}
{% if 'area' in vars.areas_info %}
{% set area_list = vars.areas_info['area'] %}
{% endif %}
{% for areainfo in area_list %}
    {% if vars.update({'backbone':' '})  %}{% endif %}
    {% if vars.update({'sbit_str':'no'})  %}{% endif %}
    {% if 'openconfig-ospfv2-ext:stub' in areainfo and 'state' in areainfo['openconfig-ospfv2-ext:stub']%}
    {% set stubstate = areainfo['openconfig-ospfv2-ext:stub']['state'] %}
    {% if 'enable' in stubstate and stubstate['enable'] == True %}
    {% if vars.update({'stub_str':vars.stub_str + 'Stub'}) %}{% endif -%}
    {% endif -%}
    {% if 'no-summary' in stubstate and stubstate['no-summary'] == True %}
    {% if vars.update({'stub_str':vars.stub_str + ', no summary'}) %}{% endif -%}
    {% endif -%}
    {% endif -%}
    {% if 'state' in areainfo %}
    {% if vars.update({'vlink_count':'0'}) %}{% endif -%}
    {% if 'identifier' in areainfo %}
    {% if vars.update({'area_id':areainfo['identifier']}) %}{% endif %}
    {% if vars.update({'area_exists':'False'}) %}{% endif %}
    {% for id in area_id_list %}
    {% if vars.area_id == id %}
        {% if vars.update({'area_exists':'True'}) %}{% endif %}
    {% endif %}
    {% endfor %}
    {% if vars.area_exists == 'False' %}
    {% do area_id_list.append(vars.area_id) %}
    {% endif %}
    {% endif %}
    {% if vars.area_id == '0.0.0.0' %}
    {% if vars.update({'backbone':'(Backbone)'})  %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:interface-count" in areainfo['state'] %}
    {% if vars.update({'total_interface':areainfo['state']['openconfig-ospfv2-ext:interface-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:active-interface-count" in areainfo['state'] %}
    {% if vars.update({'active_interface':areainfo['state']['openconfig-ospfv2-ext:active-interface-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:adjacency-count" in areainfo['state'] %}
    {% if vars.update({'fully_adj_nbrs':areainfo['state']['openconfig-ospfv2-ext:adjacency-count']}) %}{% endif %}
    {% endif %}
    {% if vars.update({'auth_type':'no'}) %}{% endif %}
    {% if 'openconfig-ospfv2-ext:authentication-type' in areainfo['state'] %}
    {% if vars.update({'auth_type':areainfo['state']['openconfig-ospfv2-ext:authentication-type']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:spf-execution-count" in areainfo['state'] %}
    {% if vars.update({'spf_algo_executed_count':areainfo['state']['openconfig-ospfv2-ext:spf-execution-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:lsa-count" in areainfo['state'] %}
    {% if vars.update({'all_lsa_count':areainfo['state']['openconfig-ospfv2-ext:lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:router-lsa-count" in areainfo['state'] %}
    {% if vars.update({'router_lsa_count':areainfo['state']['openconfig-ospfv2-ext:router-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:router-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'router_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:router-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:network-lsa-count" in areainfo['state'] %}
    {% if vars.update({'network_lsa_count':areainfo['state']['openconfig-ospfv2-ext:network-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:network-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'network_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:network-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:summary-lsa-count" in areainfo['state'] %}
    {% if vars.update({'summary_lsa_count':areainfo['state']['openconfig-ospfv2-ext:summary-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:summary-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'summary_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:summary-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:asbr-summary-lsa-count" in areainfo['state'] %}
    {% if vars.update({'asbr_summary_lsa_count':areainfo['state']['openconfig-ospfv2-ext:asbr-summary-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:asbr-summary-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'asbr_summary_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:asbr-summary-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:nssa-lsa-count" in areainfo['state'] %}
    {% if vars.update({'nssa_lsa_count':areainfo['state']['openconfig-ospfv2-ext:nssa-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:nssa-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'nssa_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:nssa-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:opaque-area-lsa-count" in areainfo['state'] %}
    {% if vars.update({'opaque_area_lsa_count':areainfo['state']['openconfig-ospfv2-ext:opaque-area-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:opaque-area-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'opaque_area_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:opaque-area-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:opaque-link-lsa-count" in areainfo['state'] %}
    {% if vars.update({'opaque_link_lsa_count':areainfo['state']['openconfig-ospfv2-ext:opaque-link-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:opaque-link-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'opaque_link_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:opaque-link-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:virtual-link-adjacency-count" in areainfo['state'] %}
    {% if vars.update({'vlink_count':areainfo['state']['openconfig-ospfv2-ext:virtual-link-adjacency-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:shortcut" in areainfo['state'] %}
    {% if areainfo['state']['openconfig-ospfv2-ext:shortcut'] == 'openconfig-ospfv2-ext:ENABLE' %}
    {% if vars.update({'shortcut_str':'Enabled'}) %}{% endif %}
    {% if vars.update({'sbit_str':'ok'}) %}{% endif %}
    {% elif areainfo['state']['openconfig-ospfv2-ext:shortcut'] == 'openconfig-ospfv2-ext:DISABLE' %}
    {% if vars.update({'shortcut_str':'Disabled'}) %}{% endif %}
    {% elif areainfo['state']['openconfig-ospfv2-ext:shortcut'] == 'openconfig-ospfv2-ext:DEFAULT' %}
    {% if vars.update({'shortcut_str':'Default'}) %}{% endif %}
    {% endif %}
    {% endif %}
    {% if vars.stub_str != '' %}
    {% if vars.shortcut_str != 'Default' %}	
            {% if vars.update({'backbone':'(' + vars.stub_str + '; ' +  ')'})  %}{% endif %}
        {% else %}
            {% if vars.update({'backbone':'(' + vars.stub_str +  ')'})  %}{% endif %}
    {% endif %}
    {% endif -%}
{% if vars.area_exists == "False" %}
 Area ID: {{'%s %s'|format(vars.area_id, vars.backbone)}}
{% if vars.area_id != '0.0.0.0' %}
   Shortcutting mode: {{vars.shortcut_str}}, S-bit consensus: {{vars.sbit_str}}
{% endif %}
   Number of interfaces in this area: Total: {{'%d'|format(vars.total_interface)}} , Active: {{'%d'|format(vars.active_interface)}}
{% if 'openconfig-ospfv2-ext:origin-stub-max-dist-router-lsa' in areainfo['state'] and areainfo['state']['openconfig-ospfv2-ext:origin-stub-max-dist-router-lsa'] == True %}
   Originating stub / maximum-distance Router-LSA
{% endif -%}
{% if 'openconfig-ospfv2-ext:indefinite-active-admin' in areainfo['state'] and areainfo['state']['openconfig-ospfv2-ext:indefinite-active-admin'] == True %}
     Administratively activated (indefinitely)
{% endif -%}
   {{'   '}}Number of fully adjacent neighbors in this area: {{'%d'|format(vars.fully_adj_nbrs)}}
   Area has {{'%s'|format(vars.auth_type)}} authentication
{% if vars.area_id != '0.0.0.0' %}
   Number of full virtual adjacencies going through this area: {{vars.vlink_count}}
{% endif %}
   SPF algorithm executed {{'%s'|format(vars.spf_algo_executed_count)}} times
   Number of LSA {{'%s'|format(vars.all_lsa_count)}}
   Number of router LSA {{'%s'|format(vars.router_lsa_count)}}. Checksum Sum {{'%8s'|format((vars.router_lsa_checksum).rjust(8,'0'))}}
   Number of network LSA {{'%s'|format(vars.network_lsa_count)}}. Checksum Sum {{'%8s'|format((vars.network_lsa_checksum).rjust(8,'0'))}}
   Number of summary LSA {{'%s'|format(vars.summary_lsa_count)}}. Checksum Sum {{'%8s'|format((vars.summary_lsa_checksum).rjust(8,'0'))}}
   Number of ASBR summary LSA {{'%s'|format(vars.asbr_summary_lsa_count)}}. Checksum Sum {{'%8s'|format((vars.asbr_summary_lsa_checksum).rjust(8,'0'))}}
   Number of NSSA LSA {{'%s'|format(vars.nssa_lsa_count)}}. Checksum Sum {{'%8s'|format((vars.nssa_lsa_checksum).rjust(8,'0'))}}
   Number of opaque link LSA {{'%s'|format(vars.opaque_link_lsa_count)}}. Checksum Sum {{'%8s'|format((vars.opaque_link_lsa_checksum).rjust(8,'0'))}}
   Number of opaque area LSA {{'%s'|format(vars.opaque_area_lsa_count)}}. Checksum Sum {{'%8s'|format((vars.opaque_area_lsa_checksum).rjust(8,'0'))}}
   {{' ' }}
{% endif %}
   {% endif %}
{% endfor -%}
{% endif -%}
