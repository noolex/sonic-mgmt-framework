openapi: 3.0.1
info:
  description: Network Management Open APIs for SONiC
  version: 1.0.0
  title: Sonic Network Management RESTCONF APIs
servers:
- url: https://
security:
- basic: []
- bearer: []
tags:
- name: test-data-nodes
  description: Operations for test-data-nodes
paths:
  /restconf/data/test-data-nodes:interfaces:
    put:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: put_test_data_nodes_interfaces
      description: 'OperationId: put_test_data_nodes_interfaces

        Interface parameters.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/put_test_data_nodes_interfaces'
        required: true
    patch:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: patch_test_data_nodes_interfaces
      description: 'OperationId: patch_test_data_nodes_interfaces

        Interface parameters.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/patch_test_data_nodes_interfaces'
        required: true
    get:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: get_test_data_nodes_interfaces
      description: 'OperationId: get_test_data_nodes_interfaces

        Interface parameters.'
    head:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: head_test_data_nodes_interfaces
      description: 'OperationId: head_test_data_nodes_interfaces

        Interface parameters.'
    delete:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: delete_test_data_nodes_interfaces
      description: 'OperationId: delete_test_data_nodes_interfaces

        Interface parameters.'
    post:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: post_list_test_data_nodes_interfaces_interface
      description: 'OperationId: post_list_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/post_list_test_data_nodes_interfaces_interface'
        required: true
  /restconf/data/test-data-nodes:interfaces/interface={name}:
    put:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: put_test_data_nodes_interfaces_interface
      description: 'OperationId: put_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/put_test_data_nodes_interfaces_interface'
        required: true
    patch:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: patch_test_data_nodes_interfaces_interface
      description: 'OperationId: patch_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/patch_test_data_nodes_interfaces_interface'
        required: true
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: get_test_data_nodes_interfaces_interface
      description: 'OperationId: get_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: head_test_data_nodes_interfaces_interface
      description: 'OperationId: head_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
    delete:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: delete_test_data_nodes_interfaces_interface
      description: 'OperationId: delete_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
    post:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: post_test_data_nodes_interfaces_interface_description
      description: 'OperationId: post_test_data_nodes_interfaces_interface_description

        A textual description of the interface.


        A server implementation MAY map this leaf to the ifAlias

        MIB object.  Such an implementation needs to use some

        mechanism to handle the differences in size and characters

        allowed between this leaf and ifAlias.  The definition of

        such a mechanism is outside the scope of this document.


        Since ifAlias is defined to be stored in non-volatile

        storage, the MIB implementation MUST map ifAlias to the

        value of ''description'' in the persistently stored

        configuration.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/post_test_data_nodes_interfaces_interface_description'
        required: true
  /restconf/data/test-data-nodes:interfaces/interface:
    put:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: put_list_test_data_nodes_interfaces_interface
      description: 'OperationId: put_list_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/put_list_test_data_nodes_interfaces_interface'
        required: true
    patch:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: patch_list_test_data_nodes_interfaces_interface
      description: 'OperationId: patch_list_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/patch_list_test_data_nodes_interfaces_interface'
        required: true
    get:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: get_list_test_data_nodes_interfaces_interface
      description: 'OperationId: get_list_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
    head:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: head_list_test_data_nodes_interfaces_interface
      description: 'OperationId: head_list_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
    delete:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: delete_list_test_data_nodes_interfaces_interface
      description: 'OperationId: delete_list_test_data_nodes_interfaces_interface

        The list of interfaces on the device.


        The status of an interface is available in this list in the

        operational state.  If the configuration of a

        system-controlled interface cannot be used by the system

        (e.g., the interface hardware present does not match the

        interface type), then the configuration is not applied to

        the system-controlled interface shown in the operational

        state.  If the configuration of a user-controlled interface

        cannot be used by the system, the configured interface is

        not instantiated in the operational state.


        System-controlled interfaces created by the system are

        always present in this list in the operational state,

        whether or not they are configured.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/description:
    put:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: put_test_data_nodes_interfaces_interface_description
      description: 'OperationId: put_test_data_nodes_interfaces_interface_description

        A textual description of the interface.


        A server implementation MAY map this leaf to the ifAlias

        MIB object.  Such an implementation needs to use some

        mechanism to handle the differences in size and characters

        allowed between this leaf and ifAlias.  The definition of

        such a mechanism is outside the scope of this document.


        Since ifAlias is defined to be stored in non-volatile

        storage, the MIB implementation MUST map ifAlias to the

        value of ''description'' in the persistently stored

        configuration.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/put_test_data_nodes_interfaces_interface_description'
        required: true
    patch:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: patch_test_data_nodes_interfaces_interface_description
      description: 'OperationId: patch_test_data_nodes_interfaces_interface_description

        A textual description of the interface.


        A server implementation MAY map this leaf to the ifAlias

        MIB object.  Such an implementation needs to use some

        mechanism to handle the differences in size and characters

        allowed between this leaf and ifAlias.  The definition of

        such a mechanism is outside the scope of this document.


        Since ifAlias is defined to be stored in non-volatile

        storage, the MIB implementation MUST map ifAlias to the

        value of ''description'' in the persistently stored

        configuration.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/patch_test_data_nodes_interfaces_interface_description'
        required: true
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_description'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: get_test_data_nodes_interfaces_interface_description
      description: 'OperationId: get_test_data_nodes_interfaces_interface_description

        A textual description of the interface.


        A server implementation MAY map this leaf to the ifAlias

        MIB object.  Such an implementation needs to use some

        mechanism to handle the differences in size and characters

        allowed between this leaf and ifAlias.  The definition of

        such a mechanism is outside the scope of this document.


        Since ifAlias is defined to be stored in non-volatile

        storage, the MIB implementation MUST map ifAlias to the

        value of ''description'' in the persistently stored

        configuration.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: head_test_data_nodes_interfaces_interface_description
      description: 'OperationId: head_test_data_nodes_interfaces_interface_description

        A textual description of the interface.


        A server implementation MAY map this leaf to the ifAlias

        MIB object.  Such an implementation needs to use some

        mechanism to handle the differences in size and characters

        allowed between this leaf and ifAlias.  The definition of

        such a mechanism is outside the scope of this document.


        Since ifAlias is defined to be stored in non-volatile

        storage, the MIB implementation MUST map ifAlias to the

        value of ''description'' in the persistently stored

        configuration.'
    delete:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: delete_test_data_nodes_interfaces_interface_description
      description: 'OperationId: delete_test_data_nodes_interfaces_interface_description

        A textual description of the interface.


        A server implementation MAY map this leaf to the ifAlias

        MIB object.  Such an implementation needs to use some

        mechanism to handle the differences in size and characters

        allowed between this leaf and ifAlias.  The definition of

        such a mechanism is outside the scope of this document.


        Since ifAlias is defined to be stored in non-volatile

        storage, the MIB implementation MUST map ifAlias to the

        value of ''description'' in the persistently stored

        configuration.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/type:
    put:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: put_test_data_nodes_interfaces_interface_type
      description: 'OperationId: put_test_data_nodes_interfaces_interface_type

        The type of the interface.


        When an interface entry is created, a server MAY

        initialize the type leaf with a valid value, e.g., if it

        is possible to derive the type from the name of the

        interface.


        If a client tries to set the type of an interface to a

        value that can never be used by the system, e.g., if the

        type is not supported or if the type does not match the

        name of the interface, the server MUST reject the request.

        A NETCONF server MUST reply with an rpc-error with the

        error-tag ''invalid-value'' in this case.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/put_test_data_nodes_interfaces_interface_type'
        required: true
    patch:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: patch_test_data_nodes_interfaces_interface_type
      description: 'OperationId: patch_test_data_nodes_interfaces_interface_type

        The type of the interface.


        When an interface entry is created, a server MAY

        initialize the type leaf with a valid value, e.g., if it

        is possible to derive the type from the name of the

        interface.


        If a client tries to set the type of an interface to a

        value that can never be used by the system, e.g., if the

        type is not supported or if the type does not match the

        name of the interface, the server MUST reject the request.

        A NETCONF server MUST reply with an rpc-error with the

        error-tag ''invalid-value'' in this case.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/patch_test_data_nodes_interfaces_interface_type'
        required: true
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_type'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: get_test_data_nodes_interfaces_interface_type
      description: 'OperationId: get_test_data_nodes_interfaces_interface_type

        The type of the interface.


        When an interface entry is created, a server MAY

        initialize the type leaf with a valid value, e.g., if it

        is possible to derive the type from the name of the

        interface.


        If a client tries to set the type of an interface to a

        value that can never be used by the system, e.g., if the

        type is not supported or if the type does not match the

        name of the interface, the server MUST reject the request.

        A NETCONF server MUST reply with an rpc-error with the

        error-tag ''invalid-value'' in this case.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: head_test_data_nodes_interfaces_interface_type
      description: 'OperationId: head_test_data_nodes_interfaces_interface_type

        The type of the interface.


        When an interface entry is created, a server MAY

        initialize the type leaf with a valid value, e.g., if it

        is possible to derive the type from the name of the

        interface.


        If a client tries to set the type of an interface to a

        value that can never be used by the system, e.g., if the

        type is not supported or if the type does not match the

        name of the interface, the server MUST reject the request.

        A NETCONF server MUST reply with an rpc-error with the

        error-tag ''invalid-value'' in this case.'
    delete:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: delete_test_data_nodes_interfaces_interface_type
      description: 'OperationId: delete_test_data_nodes_interfaces_interface_type

        The type of the interface.


        When an interface entry is created, a server MAY

        initialize the type leaf with a valid value, e.g., if it

        is possible to derive the type from the name of the

        interface.


        If a client tries to set the type of an interface to a

        value that can never be used by the system, e.g., if the

        type is not supported or if the type does not match the

        name of the interface, the server MUST reject the request.

        A NETCONF server MUST reply with an rpc-error with the

        error-tag ''invalid-value'' in this case.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/enabled:
    put:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: put_test_data_nodes_interfaces_interface_enabled
      description: 'OperationId: put_test_data_nodes_interfaces_interface_enabled

        This leaf contains the configured, desired state of the

        interface.


        Systems that implement the IF-MIB use the value of this

        leaf in the intended configuration to set

        IF-MIB.ifAdminStatus to ''up'' or ''down'' after an ifEntry

        has been initialized, as described in RFC 2863.


        Changes in this leaf in the intended configuration are

        reflected in ifAdminStatus.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/put_test_data_nodes_interfaces_interface_enabled'
        required: true
    patch:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: patch_test_data_nodes_interfaces_interface_enabled
      description: 'OperationId: patch_test_data_nodes_interfaces_interface_enabled

        This leaf contains the configured, desired state of the

        interface.


        Systems that implement the IF-MIB use the value of this

        leaf in the intended configuration to set

        IF-MIB.ifAdminStatus to ''up'' or ''down'' after an ifEntry

        has been initialized, as described in RFC 2863.


        Changes in this leaf in the intended configuration are

        reflected in ifAdminStatus.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/patch_test_data_nodes_interfaces_interface_enabled'
        required: true
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_enabled'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: get_test_data_nodes_interfaces_interface_enabled
      description: 'OperationId: get_test_data_nodes_interfaces_interface_enabled

        This leaf contains the configured, desired state of the

        interface.


        Systems that implement the IF-MIB use the value of this

        leaf in the intended configuration to set

        IF-MIB.ifAdminStatus to ''up'' or ''down'' after an ifEntry

        has been initialized, as described in RFC 2863.


        Changes in this leaf in the intended configuration are

        reflected in ifAdminStatus.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: head_test_data_nodes_interfaces_interface_enabled
      description: 'OperationId: head_test_data_nodes_interfaces_interface_enabled

        This leaf contains the configured, desired state of the

        interface.


        Systems that implement the IF-MIB use the value of this

        leaf in the intended configuration to set

        IF-MIB.ifAdminStatus to ''up'' or ''down'' after an ifEntry

        has been initialized, as described in RFC 2863.


        Changes in this leaf in the intended configuration are

        reflected in ifAdminStatus.'
    delete:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: delete_test_data_nodes_interfaces_interface_enabled
      description: 'OperationId: delete_test_data_nodes_interfaces_interface_enabled

        This leaf contains the configured, desired state of the

        interface.


        Systems that implement the IF-MIB use the value of this

        leaf in the intended configuration to set

        IF-MIB.ifAdminStatus to ''up'' or ''down'' after an ifEntry

        has been initialized, as described in RFC 2863.


        Changes in this leaf in the intended configuration are

        reflected in ifAdminStatus.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/link-up-down-trap-enable:
    put:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: put_test_data_nodes_interfaces_interface_link_up_down_trap_enable
      description: 'OperationId: put_test_data_nodes_interfaces_interface_link_up_down_trap_enable

        Controls whether linkUp/linkDown SNMP notifications

        should be generated for this interface.


        If this node is not configured, the value ''enabled'' is

        operationally used by the server for interfaces that do

        not operate on top of any other interface (i.e., there are

        no ''lower-layer-if'' entries), and ''disabled'' otherwise.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/put_test_data_nodes_interfaces_interface_link_up_down_trap_enable'
        required: true
    patch:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '409':
          description: Conflict
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: patch_test_data_nodes_interfaces_interface_link_up_down_trap_enable
      description: 'OperationId: patch_test_data_nodes_interfaces_interface_link_up_down_trap_enable

        Controls whether linkUp/linkDown SNMP notifications

        should be generated for this interface.


        If this node is not configured, the value ''enabled'' is

        operationally used by the server for interfaces that do

        not operate on top of any other interface (i.e., there are

        no ''lower-layer-if'' entries), and ''disabled'' otherwise.'
      requestBody:
        content:
          application/yang-data+json:
            schema:
              $ref: '#/components/schemas/patch_test_data_nodes_interfaces_interface_link_up_down_trap_enable'
        required: true
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_link_up_down_trap_enable'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: get_test_data_nodes_interfaces_interface_link_up_down_trap_enable
      description: 'OperationId: get_test_data_nodes_interfaces_interface_link_up_down_trap_enable

        Controls whether linkUp/linkDown SNMP notifications

        should be generated for this interface.


        If this node is not configured, the value ''enabled'' is

        operationally used by the server for interfaces that do

        not operate on top of any other interface (i.e., there are

        no ''lower-layer-if'' entries), and ''disabled'' otherwise.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: head_test_data_nodes_interfaces_interface_link_up_down_trap_enable
      description: 'OperationId: head_test_data_nodes_interfaces_interface_link_up_down_trap_enable

        Controls whether linkUp/linkDown SNMP notifications

        should be generated for this interface.


        If this node is not configured, the value ''enabled'' is

        operationally used by the server for interfaces that do

        not operate on top of any other interface (i.e., there are

        no ''lower-layer-if'' entries), and ''disabled'' otherwise.'
    delete:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      operationId: delete_test_data_nodes_interfaces_interface_link_up_down_trap_enable
      description: 'OperationId: delete_test_data_nodes_interfaces_interface_link_up_down_trap_enable

        Controls whether linkUp/linkDown SNMP notifications

        should be generated for this interface.


        If this node is not configured, the value ''enabled'' is

        operationally used by the server for interfaces that do

        not operate on top of any other interface (i.e., there are

        no ''lower-layer-if'' entries), and ''disabled'' otherwise.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/admin-status:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_admin_status'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_admin_status
      description: 'OperationId: get_test_data_nodes_interfaces_interface_admin_status

        The desired state of the interface.


        This leaf has the same read semantics as ifAdminStatus.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_admin_status
      description: 'OperationId: head_test_data_nodes_interfaces_interface_admin_status

        The desired state of the interface.


        This leaf has the same read semantics as ifAdminStatus.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/oper-status:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_oper_status'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_oper_status
      description: 'OperationId: get_test_data_nodes_interfaces_interface_oper_status

        The current operational state of the interface.


        This leaf has the same semantics as ifOperStatus.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_oper_status
      description: 'OperationId: head_test_data_nodes_interfaces_interface_oper_status

        The current operational state of the interface.


        This leaf has the same semantics as ifOperStatus.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/last-change:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_last_change'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_last_change
      description: 'OperationId: get_test_data_nodes_interfaces_interface_last_change

        The time the interface entered its current operational

        state.  If the current state was entered prior to the

        last re-initialization of the local network management

        subsystem, then this node is not present.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_last_change
      description: 'OperationId: head_test_data_nodes_interfaces_interface_last_change

        The time the interface entered its current operational

        state.  If the current state was entered prior to the

        last re-initialization of the local network management

        subsystem, then this node is not present.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/if-index:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_if_index'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_if_index
      description: 'OperationId: get_test_data_nodes_interfaces_interface_if_index

        The ifIndex value for the ifEntry represented by this

        interface.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_if_index
      description: 'OperationId: head_test_data_nodes_interfaces_interface_if_index

        The ifIndex value for the ifEntry represented by this

        interface.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/phys-address:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_phys_address'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_phys_address
      description: 'OperationId: get_test_data_nodes_interfaces_interface_phys_address

        The interface''s address at its protocol sub-layer.  For

        example, for an 802.x interface, this object normally

        contains a Media Access Control (MAC) address.  The

        interface''s media-specific modules must define the bit

        and byte ordering and the format of the value of this

        object.  For interfaces that do not have such an address

        (e.g., a serial line), this node is not present.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_phys_address
      description: 'OperationId: head_test_data_nodes_interfaces_interface_phys_address

        The interface''s address at its protocol sub-layer.  For

        example, for an 802.x interface, this object normally

        contains a Media Access Control (MAC) address.  The

        interface''s media-specific modules must define the bit

        and byte ordering and the format of the value of this

        object.  For interfaces that do not have such an address

        (e.g., a serial line), this node is not present.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/higher-layer-if:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_higher_layer_if'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_higher_layer_if
      description: 'OperationId: get_test_data_nodes_interfaces_interface_higher_layer_if

        A list of references to interfaces layered on top of this

        interface.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_higher_layer_if
      description: 'OperationId: head_test_data_nodes_interfaces_interface_higher_layer_if

        A list of references to interfaces layered on top of this

        interface.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/lower-layer-if:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_lower_layer_if'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_lower_layer_if
      description: 'OperationId: get_test_data_nodes_interfaces_interface_lower_layer_if

        A list of references to interfaces layered underneath this

        interface.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_lower_layer_if
      description: 'OperationId: head_test_data_nodes_interfaces_interface_lower_layer_if

        A list of references to interfaces layered underneath this

        interface.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/speed:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_speed'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_speed
      description: 'OperationId: get_test_data_nodes_interfaces_interface_speed

        An estimate of the interface''s current bandwidth in bits

        per second.  For interfaces that do not vary in

        bandwidth or for those where no accurate estimation can

        be made, this node should contain the nominal bandwidth.

        For interfaces that have no concept of bandwidth, this

        node is not present.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_speed
      description: 'OperationId: head_test_data_nodes_interfaces_interface_speed

        An estimate of the interface''s current bandwidth in bits

        per second.  For interfaces that do not vary in

        bandwidth or for those where no accurate estimation can

        be made, this node should contain the nominal bandwidth.

        For interfaces that have no concept of bandwidth, this

        node is not present.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics

        A collection of interface-related statistics objects.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics

        A collection of interface-related statistics objects.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/discontinuity-time:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_discontinuity_time'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_discontinuity_time
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_discontinuity_time

        The time on the most recent occasion at which any one or

        more of this interface''s counters suffered a

        discontinuity.  If no such discontinuities have occurred

        since the last re-initialization of the local management

        subsystem, then this node contains the time the local

        management subsystem re-initialized itself.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_discontinuity_time
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_discontinuity_time

        The time on the most recent occasion at which any one or

        more of this interface''s counters suffered a

        discontinuity.  If no such discontinuities have occurred

        since the last re-initialization of the local management

        subsystem, then this node contains the time the local

        management subsystem re-initialized itself.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/in-octets:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_in_octets'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_in_octets
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_in_octets

        The total number of octets received on the interface,

        including framing characters.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_in_octets
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_in_octets

        The total number of octets received on the interface,

        including framing characters.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/in-unicast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_in_unicast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_in_unicast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_in_unicast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were not addressed to a

        multicast or broadcast address at this sub-layer.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_in_unicast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_in_unicast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were not addressed to a

        multicast or broadcast address at this sub-layer.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/in-broadcast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_in_broadcast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_in_broadcast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_in_broadcast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were addressed to a broadcast

        address at this sub-layer.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_in_broadcast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_in_broadcast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were addressed to a broadcast

        address at this sub-layer.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/in-multicast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_in_multicast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_in_multicast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_in_multicast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were addressed to a multicast

        address at this sub-layer.  For a MAC-layer protocol,

        this includes both Group and Functional addresses.



        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_in_multicast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_in_multicast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were addressed to a multicast

        address at this sub-layer.  For a MAC-layer protocol,

        this includes both Group and Functional addresses.



        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/in-discards:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_in_discards'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_in_discards
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_in_discards

        The number of inbound packets that were chosen to be

        discarded even though no errors had been detected to

        prevent their being deliverable to a higher-layer

        protocol.  One possible reason for discarding such a

        packet could be to free up buffer space.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_in_discards
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_in_discards

        The number of inbound packets that were chosen to be

        discarded even though no errors had been detected to

        prevent their being deliverable to a higher-layer

        protocol.  One possible reason for discarding such a

        packet could be to free up buffer space.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/in-errors:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_in_errors'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_in_errors
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_in_errors

        For packet-oriented interfaces, the number of inbound

        packets that contained errors preventing them from being

        deliverable to a higher-layer protocol.  For character-

        oriented or fixed-length interfaces, the number of

        inbound transmission units that contained errors

        preventing them from being deliverable to a higher-layer

        protocol.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_in_errors
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_in_errors

        For packet-oriented interfaces, the number of inbound

        packets that contained errors preventing them from being

        deliverable to a higher-layer protocol.  For character-

        oriented or fixed-length interfaces, the number of

        inbound transmission units that contained errors

        preventing them from being deliverable to a higher-layer

        protocol.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/in-unknown-protos:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_in_unknown_protos'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_in_unknown_protos
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_in_unknown_protos

        For packet-oriented interfaces, the number of packets

        received via the interface that were discarded because

        of an unknown or unsupported protocol.  For

        character-oriented or fixed-length interfaces that

        support protocol multiplexing, the number of

        transmission units received via the interface that were

        discarded because of an unknown or unsupported protocol.

        For any interface that does not support protocol

        multiplexing, this counter is not present.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_in_unknown_protos
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_in_unknown_protos

        For packet-oriented interfaces, the number of packets

        received via the interface that were discarded because

        of an unknown or unsupported protocol.  For

        character-oriented or fixed-length interfaces that

        support protocol multiplexing, the number of

        transmission units received via the interface that were

        discarded because of an unknown or unsupported protocol.

        For any interface that does not support protocol

        multiplexing, this counter is not present.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/out-octets:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_out_octets'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_out_octets
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_out_octets

        The total number of octets transmitted out of the

        interface, including framing characters.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_out_octets
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_out_octets

        The total number of octets transmitted out of the

        interface, including framing characters.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/out-unicast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_out_unicast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_out_unicast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_out_unicast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were not addressed

        to a multicast or broadcast address at this sub-layer,

        including those that were discarded or not sent.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_out_unicast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_out_unicast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were not addressed

        to a multicast or broadcast address at this sub-layer,

        including those that were discarded or not sent.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/out-broadcast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_out_broadcast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_out_broadcast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_out_broadcast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were addressed to a

        broadcast address at this sub-layer, including those

        that were discarded or not sent.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_out_broadcast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_out_broadcast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were addressed to a

        broadcast address at this sub-layer, including those

        that were discarded or not sent.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/out-multicast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_out_multicast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_out_multicast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_out_multicast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were addressed to a

        multicast address at this sub-layer, including those

        that were discarded or not sent.  For a MAC-layer

        protocol, this includes both Group and Functional

        addresses.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_out_multicast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_out_multicast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were addressed to a

        multicast address at this sub-layer, including those

        that were discarded or not sent.  For a MAC-layer

        protocol, this includes both Group and Functional

        addresses.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/out-discards:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_out_discards'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_out_discards
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_out_discards

        The number of outbound packets that were chosen to be

        discarded even though no errors had been detected to

        prevent their being transmitted.  One possible reason

        for discarding such a packet could be to free up buffer

        space.



        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_out_discards
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_out_discards

        The number of outbound packets that were chosen to be

        discarded even though no errors had been detected to

        prevent their being transmitted.  One possible reason

        for discarding such a packet could be to free up buffer

        space.



        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces/interface={name}/statistics/out-errors:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_interface_statistics_out_errors'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_interface_statistics_out_errors
      description: 'OperationId: get_test_data_nodes_interfaces_interface_statistics_out_errors

        For packet-oriented interfaces, the number of outbound

        packets that could not be transmitted because of errors.

        For character-oriented or fixed-length interfaces, the

        number of outbound transmission units that could not be

        transmitted because of errors.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A device MAY restrict the allowed values for this leaf,

          possibly depending on the type of the interface.

          For system-controlled interfaces, this leaf is the

          device-specific name of the interface.


          If a client tries to create configuration for a

          system-controlled interface that is not present in the

          operational state, the server MAY reject the request if

          the implementation does not support pre-provisioning of

          interfaces or if the name refers to an interface that can

          never exist in the system.  A Network Configuration

          Protocol (NETCONF) server MUST reply with an rpc-error

          with the error-tag ''invalid-value'' in this case.


          If the device supports pre-provisioning of interface

          configuration, the ''pre-provisioning'' feature is

          advertised.


          If the device allows arbitrarily named user-controlled

          interfaces, the ''arbitrary-names'' feature is advertised.

          When a configured user-controlled interface is created by

          the system, it is instantiated with the same name in the

          operational state.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_interface_statistics_out_errors
      description: 'OperationId: head_test_data_nodes_interfaces_interface_statistics_out_errors

        For packet-oriented interfaces, the number of outbound

        packets that could not be transmitted because of errors.

        For character-oriented or fixed-length interfaces, the

        number of outbound transmission units that could not be

        transmitted because of errors.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state:
    get:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state
      description: 'OperationId: get_test_data_nodes_interfaces_state

        Data nodes for the operational state of interfaces.'
    head:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state
      description: 'OperationId: head_test_data_nodes_interfaces_state

        Data nodes for the operational state of interfaces.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface

        The list of interfaces on the device.


        System-controlled interfaces created by the system are

        always present in this list, whether or not they are

        configured.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface

        The list of interfaces on the device.


        System-controlled interfaces created by the system are

        always present in this list, whether or not they are

        configured.'
  /restconf/data/test-data-nodes:interfaces-state/interface:
    get:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_list_test_data_nodes_interfaces_state_interface
      description: 'OperationId: get_list_test_data_nodes_interfaces_state_interface

        The list of interfaces on the device.


        System-controlled interfaces created by the system are

        always present in this list, whether or not they are

        configured.'
    head:
      tags:
      - test-data-nodes
      parameters: []
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_list_test_data_nodes_interfaces_state_interface
      description: 'OperationId: head_list_test_data_nodes_interfaces_state_interface

        The list of interfaces on the device.


        System-controlled interfaces created by the system are

        always present in this list, whether or not they are

        configured.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/type:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_type'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_type
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_type

        The type of the interface.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_type
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_type

        The type of the interface.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/admin-status:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_admin_status'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_admin_status
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_admin_status

        The desired state of the interface.


        This leaf has the same read semantics as ifAdminStatus.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_admin_status
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_admin_status

        The desired state of the interface.


        This leaf has the same read semantics as ifAdminStatus.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/oper-status:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_oper_status'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_oper_status
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_oper_status

        The current operational state of the interface.


        This leaf has the same semantics as ifOperStatus.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_oper_status
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_oper_status

        The current operational state of the interface.


        This leaf has the same semantics as ifOperStatus.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/last-change:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_last_change'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_last_change
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_last_change

        The time the interface entered its current operational

        state.  If the current state was entered prior to the

        last re-initialization of the local network management

        subsystem, then this node is not present.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_last_change
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_last_change

        The time the interface entered its current operational

        state.  If the current state was entered prior to the

        last re-initialization of the local network management

        subsystem, then this node is not present.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/if-index:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_if_index'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_if_index
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_if_index

        The ifIndex value for the ifEntry represented by this

        interface.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_if_index
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_if_index

        The ifIndex value for the ifEntry represented by this

        interface.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/phys-address:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_phys_address'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_phys_address
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_phys_address

        The interface''s address at its protocol sub-layer.  For

        example, for an 802.x interface, this object normally

        contains a Media Access Control (MAC) address.  The

        interface''s media-specific modules must define the bit

        and byte ordering and the format of the value of this

        object.  For interfaces that do not have such an address

        (e.g., a serial line), this node is not present.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_phys_address
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_phys_address

        The interface''s address at its protocol sub-layer.  For

        example, for an 802.x interface, this object normally

        contains a Media Access Control (MAC) address.  The

        interface''s media-specific modules must define the bit

        and byte ordering and the format of the value of this

        object.  For interfaces that do not have such an address

        (e.g., a serial line), this node is not present.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/higher-layer-if:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_higher_layer_if'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_higher_layer_if
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_higher_layer_if

        A list of references to interfaces layered on top of this

        interface.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_higher_layer_if
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_higher_layer_if

        A list of references to interfaces layered on top of this

        interface.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/lower-layer-if:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_lower_layer_if'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_lower_layer_if
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_lower_layer_if

        A list of references to interfaces layered underneath this

        interface.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_lower_layer_if
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_lower_layer_if

        A list of references to interfaces layered underneath this

        interface.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/speed:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_speed'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_speed
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_speed

        An estimate of the interface''s current bandwidth in bits

        per second.  For interfaces that do not vary in

        bandwidth or for those where no accurate estimation can


        be made, this node should contain the nominal bandwidth.

        For interfaces that have no concept of bandwidth, this

        node is not present.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_speed
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_speed

        An estimate of the interface''s current bandwidth in bits

        per second.  For interfaces that do not vary in

        bandwidth or for those where no accurate estimation can


        be made, this node should contain the nominal bandwidth.

        For interfaces that have no concept of bandwidth, this

        node is not present.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics

        A collection of interface-related statistics objects.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics

        A collection of interface-related statistics objects.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/discontinuity-time:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_discontinuity_time'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_discontinuity_time
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_discontinuity_time

        The time on the most recent occasion at which any one or

        more of this interface''s counters suffered a

        discontinuity.  If no such discontinuities have occurred

        since the last re-initialization of the local management

        subsystem, then this node contains the time the local

        management subsystem re-initialized itself.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_discontinuity_time
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_discontinuity_time

        The time on the most recent occasion at which any one or

        more of this interface''s counters suffered a

        discontinuity.  If no such discontinuities have occurred

        since the last re-initialization of the local management

        subsystem, then this node contains the time the local

        management subsystem re-initialized itself.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/in-octets:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_in_octets'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_in_octets
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_in_octets

        The total number of octets received on the interface,

        including framing characters.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_in_octets
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_in_octets

        The total number of octets received on the interface,

        including framing characters.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/in-unicast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_in_unicast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_in_unicast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_in_unicast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were not addressed to a

        multicast or broadcast address at this sub-layer.

        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_in_unicast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_in_unicast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were not addressed to a

        multicast or broadcast address at this sub-layer.

        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/in-broadcast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_in_broadcast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_in_broadcast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_in_broadcast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were addressed to a broadcast

        address at this sub-layer.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_in_broadcast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_in_broadcast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were addressed to a broadcast

        address at this sub-layer.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/in-multicast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_in_multicast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_in_multicast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_in_multicast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were addressed to a multicast

        address at this sub-layer.  For a MAC-layer protocol,

        this includes both Group and Functional addresses.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_in_multicast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_in_multicast_pkts

        The number of packets, delivered by this sub-layer to a

        higher (sub-)layer, that were addressed to a multicast

        address at this sub-layer.  For a MAC-layer protocol,

        this includes both Group and Functional addresses.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/in-discards:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_in_discards'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_in_discards
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_in_discards

        The number of inbound packets that were chosen to be

        discarded even though no errors had been detected to

        prevent their being deliverable to a higher-layer

        protocol.  One possible reason for discarding such a

        packet could be to free up buffer space.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_in_discards
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_in_discards

        The number of inbound packets that were chosen to be

        discarded even though no errors had been detected to

        prevent their being deliverable to a higher-layer

        protocol.  One possible reason for discarding such a

        packet could be to free up buffer space.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/in-errors:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_in_errors'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_in_errors
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_in_errors

        For packet-oriented interfaces, the number of inbound

        packets that contained errors preventing them from being

        deliverable to a higher-layer protocol.  For character-

        oriented or fixed-length interfaces, the number of

        inbound transmission units that contained errors

        preventing them from being deliverable to a higher-layer

        protocol.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_in_errors
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_in_errors

        For packet-oriented interfaces, the number of inbound

        packets that contained errors preventing them from being

        deliverable to a higher-layer protocol.  For character-

        oriented or fixed-length interfaces, the number of

        inbound transmission units that contained errors

        preventing them from being deliverable to a higher-layer

        protocol.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/in-unknown-protos:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_in_unknown_protos'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_in_unknown_protos
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_in_unknown_protos

        For packet-oriented interfaces, the number of packets

        received via the interface that were discarded because

        of an unknown or unsupported protocol.  For

        character-oriented or fixed-length interfaces that

        support protocol multiplexing, the number of

        transmission units received via the interface that were

        discarded because of an unknown or unsupported protocol.

        For any interface that does not support protocol

        multiplexing, this counter is not present.

        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_in_unknown_protos
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_in_unknown_protos

        For packet-oriented interfaces, the number of packets

        received via the interface that were discarded because

        of an unknown or unsupported protocol.  For

        character-oriented or fixed-length interfaces that

        support protocol multiplexing, the number of

        transmission units received via the interface that were

        discarded because of an unknown or unsupported protocol.

        For any interface that does not support protocol

        multiplexing, this counter is not present.

        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/out-octets:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_out_octets'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_out_octets
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_out_octets

        The total number of octets transmitted out of the

        interface, including framing characters.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_out_octets
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_out_octets

        The total number of octets transmitted out of the

        interface, including framing characters.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/out-unicast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_out_unicast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_out_unicast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_out_unicast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were not addressed

        to a multicast or broadcast address at this sub-layer,

        including those that were discarded or not sent.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_out_unicast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_out_unicast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were not addressed

        to a multicast or broadcast address at this sub-layer,

        including those that were discarded or not sent.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/out-broadcast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_out_broadcast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_out_broadcast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_out_broadcast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were addressed to a

        broadcast address at this sub-layer, including those

        that were discarded or not sent.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_out_broadcast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_out_broadcast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were addressed to a

        broadcast address at this sub-layer, including those

        that were discarded or not sent.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/out-multicast-pkts:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_out_multicast_pkts'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_out_multicast_pkts
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_out_multicast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were addressed to a

        multicast address at this sub-layer, including those

        that were discarded or not sent.  For a MAC-layer

        protocol, this includes both Group and Functional

        addresses.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_out_multicast_pkts
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_out_multicast_pkts

        The total number of packets that higher-level protocols

        requested be transmitted and that were addressed to a

        multicast address at this sub-layer, including those

        that were discarded or not sent.  For a MAC-layer

        protocol, this includes both Group and Functional

        addresses.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/out-discards:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_out_discards'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_out_discards
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_out_discards

        The number of outbound packets that were chosen to be

        discarded even though no errors had been detected to

        prevent their being transmitted.  One possible reason

        for discarding such a packet could be to free up buffer

        space.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_out_discards
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_out_discards

        The number of outbound packets that were chosen to be

        discarded even though no errors had been detected to

        prevent their being transmitted.  One possible reason

        for discarding such a packet could be to free up buffer

        space.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
  /restconf/data/test-data-nodes:interfaces-state/interface={name}/statistics/out-errors:
    get:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          content:
            application/yang-data+json:
              schema:
                $ref: '#/components/schemas/get_test_data_nodes_interfaces_state_interface_statistics_out_errors'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: get_test_data_nodes_interfaces_state_interface_statistics_out_errors
      description: 'OperationId: get_test_data_nodes_interfaces_state_interface_statistics_out_errors

        For packet-oriented interfaces, the number of outbound

        packets that could not be transmitted because of errors.

        For character-oriented or fixed-length interfaces, the

        number of outbound transmission units that could not be

        transmitted because of errors.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
    head:
      tags:
      - test-data-nodes
      parameters:
      - name: name
        in: path
        required: true
        schema:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
        description: 'The name of the interface.


          A server implementation MAY map this leaf to the ifName

          MIB object.  Such an implementation needs to use some

          mechanism to handle the differences in size and characters

          allowed between this leaf and ifName.  The definition of

          such a mechanism is outside the scope of this document.'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
      x-config: 'false'
      operationId: head_test_data_nodes_interfaces_state_interface_statistics_out_errors
      description: 'OperationId: head_test_data_nodes_interfaces_state_interface_statistics_out_errors

        For packet-oriented interfaces, the number of outbound

        packets that could not be transmitted because of errors.

        For character-oriented or fixed-length interfaces, the

        number of outbound transmission units that could not be

        transmitted because of errors.


        Discontinuities in the value of this counter can occur

        at re-initialization of the management system and at

        other times as indicated by the value of

        ''discontinuity-time''.'
components:
  securitySchemes:
    basic:
      scheme: basic
      type: http
    bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http
  schemas:
    test_data_nodes_interfaces:
      type: object
      properties:
        test-data-nodes:interfaces:
          type: object
          properties:
            interface:
              type: array
              items:
                type: object
                required:
                - name
                - type
                properties:
                  name:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  description:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  type:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  enabled:
                    default: 'true'
                    format: boolean
                    type: boolean
                    x-yang-type: boolean
                  link-up-down-trap-enable:
                    enum:
                    - enabled
                    - disabled
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
    post_test_data_nodes_interfaces:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces'
    put_test_data_nodes_interfaces:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces'
    patch_test_data_nodes_interfaces:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces'
    get_test_data_nodes_interfaces:
      type: object
      properties:
        test-data-nodes:interfaces:
          type: object
          properties:
            interface:
              type: array
              items:
                type: object
                required:
                - name
                - type
                properties:
                  name:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  description:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  type:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  enabled:
                    default: 'true'
                    format: boolean
                    type: boolean
                    x-yang-type: boolean
                  link-up-down-trap-enable:
                    enum:
                    - enabled
                    - disabled
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  admin-status:
                    enum:
                    - up
                    - down
                    - testing
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  oper-status:
                    enum:
                    - up
                    - down
                    - testing
                    - unknown
                    - dormant
                    - not-present
                    - lower-layer-down
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  last-change:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
                    x-yang-type: string
                  if-index:
                    format: int32
                    maximum: 2147483647
                    minimum: 1
                    type: integer
                    x-range: 1..2147483647
                    x-yang-type: int32
                  phys-address:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-pattern: ([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?
                    x-yang-type: string
                  higher-layer-if:
                    type: array
                    items:
                      maxLength: 18446744073709551615
                      minLength: 0
                      type: string
                      x-yang-type: string
                  lower-layer-if:
                    type: array
                    items:
                      maxLength: 18446744073709551615
                      minLength: 0
                      type: string
                      x-yang-type: string
                  speed:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  statistics:
                    type: object
                    properties:
                      discontinuity-time:
                        maxLength: 18446744073709551615
                        minLength: 0
                        type: string
                        x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
                        x-yang-type: string
                      in-octets:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      in-unicast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      in-broadcast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      in-multicast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      in-discards:
                        format: int32
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-yang-type: uint32
                      in-errors:
                        format: int32
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-yang-type: uint32
                      in-unknown-protos:
                        format: int32
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-yang-type: uint32
                      out-octets:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      out-unicast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      out-broadcast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      out-multicast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      out-discards:
                        format: int32
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-yang-type: uint32
                      out-errors:
                        format: int32
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-yang-type: uint32
    test_data_nodes_interfaces_interface:
      type: object
      properties:
        test-data-nodes:interface:
          type: array
          items:
            type: object
            required:
            - name
            - type
            properties:
              name:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              description:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              type:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              enabled:
                default: 'true'
                format: boolean
                type: boolean
                x-yang-type: boolean
              link-up-down-trap-enable:
                enum:
                - enabled
                - disabled
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
    put_test_data_nodes_interfaces_interface:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface'
    patch_test_data_nodes_interfaces_interface:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface'
    get_test_data_nodes_interfaces_interface:
      type: object
      properties:
        test-data-nodes:interface:
          type: array
          items:
            type: object
            required:
            - name
            - type
            properties:
              name:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              description:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              type:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              enabled:
                default: 'true'
                format: boolean
                type: boolean
                x-yang-type: boolean
              link-up-down-trap-enable:
                enum:
                - enabled
                - disabled
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              admin-status:
                enum:
                - up
                - down
                - testing
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              oper-status:
                enum:
                - up
                - down
                - testing
                - unknown
                - dormant
                - not-present
                - lower-layer-down
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              last-change:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
                x-yang-type: string
              if-index:
                format: int32
                maximum: 2147483647
                minimum: 1
                type: integer
                x-range: 1..2147483647
                x-yang-type: int32
              phys-address:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-pattern: ([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?
                x-yang-type: string
              higher-layer-if:
                type: array
                items:
                  maxLength: 18446744073709551615
                  minLength: 0
                  type: string
                  x-yang-type: string
              lower-layer-if:
                type: array
                items:
                  maxLength: 18446744073709551615
                  minLength: 0
                  type: string
                  x-yang-type: string
              speed:
                format: int64
                maximum: 18446744073709551615
                minimum: 0
                type: integer
                x-yang-type: uint64
              statistics:
                type: object
                properties:
                  discontinuity-time:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
                    x-yang-type: string
                  in-octets:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  in-unicast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  in-broadcast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  in-multicast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  in-discards:
                    format: int32
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                    x-yang-type: uint32
                  in-errors:
                    format: int32
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                    x-yang-type: uint32
                  in-unknown-protos:
                    format: int32
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                    x-yang-type: uint32
                  out-octets:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  out-unicast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  out-broadcast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  out-multicast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  out-discards:
                    format: int32
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                    x-yang-type: uint32
                  out-errors:
                    format: int32
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                    x-yang-type: uint32
    post_list_test_data_nodes_interfaces_interface:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface'
    put_list_test_data_nodes_interfaces_interface:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface'
    patch_list_test_data_nodes_interfaces_interface:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface'
    test_data_nodes_interfaces_interface_description:
      type: object
      properties:
        test-data-nodes:description:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    post_test_data_nodes_interfaces_interface_description:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_description'
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_type'
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_enabled'
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_link_up_down_trap_enable'
    put_test_data_nodes_interfaces_interface_description:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_description'
    patch_test_data_nodes_interfaces_interface_description:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_description'
    get_test_data_nodes_interfaces_interface_description:
      type: object
      properties:
        test-data-nodes:description:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    test_data_nodes_interfaces_interface_type:
      type: object
      properties:
        test-data-nodes:type:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    put_test_data_nodes_interfaces_interface_type:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_type'
    patch_test_data_nodes_interfaces_interface_type:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_type'
    get_test_data_nodes_interfaces_interface_type:
      type: object
      properties:
        test-data-nodes:type:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    test_data_nodes_interfaces_interface_enabled:
      type: object
      properties:
        test-data-nodes:enabled:
          default: 'true'
          format: boolean
          type: boolean
          x-yang-type: boolean
    put_test_data_nodes_interfaces_interface_enabled:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_enabled'
    patch_test_data_nodes_interfaces_interface_enabled:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_enabled'
    get_test_data_nodes_interfaces_interface_enabled:
      type: object
      properties:
        test-data-nodes:enabled:
          default: 'true'
          format: boolean
          type: boolean
          x-yang-type: boolean
    test_data_nodes_interfaces_interface_link_up_down_trap_enable:
      type: object
      properties:
        test-data-nodes:link-up-down-trap-enable:
          enum:
          - enabled
          - disabled
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    put_test_data_nodes_interfaces_interface_link_up_down_trap_enable:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_link_up_down_trap_enable'
    patch_test_data_nodes_interfaces_interface_link_up_down_trap_enable:
      allOf:
      - $ref: '#/components/schemas/test_data_nodes_interfaces_interface_link_up_down_trap_enable'
    get_test_data_nodes_interfaces_interface_link_up_down_trap_enable:
      type: object
      properties:
        test-data-nodes:link-up-down-trap-enable:
          enum:
          - enabled
          - disabled
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    get_test_data_nodes_interfaces_interface_admin_status:
      type: object
      properties:
        test-data-nodes:admin-status:
          enum:
          - up
          - down
          - testing
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    get_test_data_nodes_interfaces_interface_oper_status:
      type: object
      properties:
        test-data-nodes:oper-status:
          enum:
          - up
          - down
          - testing
          - unknown
          - dormant
          - not-present
          - lower-layer-down
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    get_test_data_nodes_interfaces_interface_last_change:
      type: object
      properties:
        test-data-nodes:last-change:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
          x-yang-type: string
    get_test_data_nodes_interfaces_interface_if_index:
      type: object
      properties:
        test-data-nodes:if-index:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
          x-range: 1..2147483647
          x-yang-type: int32
    get_test_data_nodes_interfaces_interface_phys_address:
      type: object
      properties:
        test-data-nodes:phys-address:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-pattern: ([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?
          x-yang-type: string
    get_test_data_nodes_interfaces_interface_higher_layer_if:
      type: object
      properties:
        test-data-nodes:higher-layer-if:
          type: array
          items:
            maxLength: 18446744073709551615
            minLength: 0
            type: string
            x-yang-type: string
    get_test_data_nodes_interfaces_interface_lower_layer_if:
      type: object
      properties:
        test-data-nodes:lower-layer-if:
          type: array
          items:
            maxLength: 18446744073709551615
            minLength: 0
            type: string
            x-yang-type: string
    get_test_data_nodes_interfaces_interface_speed:
      type: object
      properties:
        test-data-nodes:speed:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_interface_statistics:
      type: object
      properties:
        test-data-nodes:statistics:
          type: object
          properties:
            discontinuity-time:
              maxLength: 18446744073709551615
              minLength: 0
              type: string
              x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
              x-yang-type: string
            in-octets:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            in-unicast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            in-broadcast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            in-multicast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            in-discards:
              format: int32
              maximum: 4294967295
              minimum: 0
              type: integer
              x-yang-type: uint32
            in-errors:
              format: int32
              maximum: 4294967295
              minimum: 0
              type: integer
              x-yang-type: uint32
            in-unknown-protos:
              format: int32
              maximum: 4294967295
              minimum: 0
              type: integer
              x-yang-type: uint32
            out-octets:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            out-unicast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            out-broadcast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            out-multicast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            out-discards:
              format: int32
              maximum: 4294967295
              minimum: 0
              type: integer
              x-yang-type: uint32
            out-errors:
              format: int32
              maximum: 4294967295
              minimum: 0
              type: integer
              x-yang-type: uint32
    get_test_data_nodes_interfaces_interface_statistics_discontinuity_time:
      type: object
      properties:
        test-data-nodes:discontinuity-time:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
          x-yang-type: string
    get_test_data_nodes_interfaces_interface_statistics_in_octets:
      type: object
      properties:
        test-data-nodes:in-octets:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_interface_statistics_in_unicast_pkts:
      type: object
      properties:
        test-data-nodes:in-unicast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_interface_statistics_in_broadcast_pkts:
      type: object
      properties:
        test-data-nodes:in-broadcast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_interface_statistics_in_multicast_pkts:
      type: object
      properties:
        test-data-nodes:in-multicast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_interface_statistics_in_discards:
      type: object
      properties:
        test-data-nodes:in-discards:
          format: int32
          maximum: 4294967295
          minimum: 0
          type: integer
          x-yang-type: uint32
    get_test_data_nodes_interfaces_interface_statistics_in_errors:
      type: object
      properties:
        test-data-nodes:in-errors:
          format: int32
          maximum: 4294967295
          minimum: 0
          type: integer
          x-yang-type: uint32
    get_test_data_nodes_interfaces_interface_statistics_in_unknown_protos:
      type: object
      properties:
        test-data-nodes:in-unknown-protos:
          format: int32
          maximum: 4294967295
          minimum: 0
          type: integer
          x-yang-type: uint32
    get_test_data_nodes_interfaces_interface_statistics_out_octets:
      type: object
      properties:
        test-data-nodes:out-octets:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_interface_statistics_out_unicast_pkts:
      type: object
      properties:
        test-data-nodes:out-unicast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_interface_statistics_out_broadcast_pkts:
      type: object
      properties:
        test-data-nodes:out-broadcast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_interface_statistics_out_multicast_pkts:
      type: object
      properties:
        test-data-nodes:out-multicast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_interface_statistics_out_discards:
      type: object
      properties:
        test-data-nodes:out-discards:
          format: int32
          maximum: 4294967295
          minimum: 0
          type: integer
          x-yang-type: uint32
    get_test_data_nodes_interfaces_interface_statistics_out_errors:
      type: object
      properties:
        test-data-nodes:out-errors:
          format: int32
          maximum: 4294967295
          minimum: 0
          type: integer
          x-yang-type: uint32
    get_test_data_nodes_interfaces_state:
      type: object
      properties:
        test-data-nodes:interfaces-state:
          type: object
          properties:
            interface:
              type: array
              items:
                type: object
                required:
                - name
                properties:
                  name:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  type:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  admin-status:
                    enum:
                    - up
                    - down
                    - testing
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  oper-status:
                    enum:
                    - up
                    - down
                    - testing
                    - unknown
                    - dormant
                    - not-present
                    - lower-layer-down
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-yang-type: string
                  last-change:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
                    x-yang-type: string
                  if-index:
                    format: int32
                    maximum: 2147483647
                    minimum: 1
                    type: integer
                    x-range: 1..2147483647
                    x-yang-type: int32
                  phys-address:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-pattern: ([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?
                    x-yang-type: string
                  higher-layer-if:
                    type: array
                    items:
                      maxLength: 18446744073709551615
                      minLength: 0
                      type: string
                      x-yang-type: string
                  lower-layer-if:
                    type: array
                    items:
                      maxLength: 18446744073709551615
                      minLength: 0
                      type: string
                      x-yang-type: string
                  speed:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  statistics:
                    type: object
                    properties:
                      discontinuity-time:
                        maxLength: 18446744073709551615
                        minLength: 0
                        type: string
                        x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
                        x-yang-type: string
                      in-octets:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      in-unicast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      in-broadcast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      in-multicast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      in-discards:
                        format: int32
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-yang-type: uint32
                      in-errors:
                        format: int32
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-yang-type: uint32
                      in-unknown-protos:
                        format: int32
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-yang-type: uint32
                      out-octets:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      out-unicast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      out-broadcast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      out-multicast-pkts:
                        format: int64
                        maximum: 18446744073709551615
                        minimum: 0
                        type: integer
                        x-yang-type: uint64
                      out-discards:
                        format: int32
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-yang-type: uint32
                      out-errors:
                        format: int32
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-yang-type: uint32
    get_test_data_nodes_interfaces_state_interface:
      type: object
      properties:
        test-data-nodes:interface:
          type: array
          items:
            type: object
            required:
            - name
            properties:
              name:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              type:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              admin-status:
                enum:
                - up
                - down
                - testing
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              oper-status:
                enum:
                - up
                - down
                - testing
                - unknown
                - dormant
                - not-present
                - lower-layer-down
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-yang-type: string
              last-change:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
                x-yang-type: string
              if-index:
                format: int32
                maximum: 2147483647
                minimum: 1
                type: integer
                x-range: 1..2147483647
                x-yang-type: int32
              phys-address:
                maxLength: 18446744073709551615
                minLength: 0
                type: string
                x-pattern: ([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?
                x-yang-type: string
              higher-layer-if:
                type: array
                items:
                  maxLength: 18446744073709551615
                  minLength: 0
                  type: string
                  x-yang-type: string
              lower-layer-if:
                type: array
                items:
                  maxLength: 18446744073709551615
                  minLength: 0
                  type: string
                  x-yang-type: string
              speed:
                format: int64
                maximum: 18446744073709551615
                minimum: 0
                type: integer
                x-yang-type: uint64
              statistics:
                type: object
                properties:
                  discontinuity-time:
                    maxLength: 18446744073709551615
                    minLength: 0
                    type: string
                    x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
                    x-yang-type: string
                  in-octets:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  in-unicast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  in-broadcast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  in-multicast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  in-discards:
                    format: int32
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                    x-yang-type: uint32
                  in-errors:
                    format: int32
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                    x-yang-type: uint32
                  in-unknown-protos:
                    format: int32
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                    x-yang-type: uint32
                  out-octets:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  out-unicast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  out-broadcast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  out-multicast-pkts:
                    format: int64
                    maximum: 18446744073709551615
                    minimum: 0
                    type: integer
                    x-yang-type: uint64
                  out-discards:
                    format: int32
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                    x-yang-type: uint32
                  out-errors:
                    format: int32
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                    x-yang-type: uint32
    get_test_data_nodes_interfaces_state_interface_type:
      type: object
      properties:
        test-data-nodes:type:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    get_test_data_nodes_interfaces_state_interface_admin_status:
      type: object
      properties:
        test-data-nodes:admin-status:
          enum:
          - up
          - down
          - testing
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    get_test_data_nodes_interfaces_state_interface_oper_status:
      type: object
      properties:
        test-data-nodes:oper-status:
          enum:
          - up
          - down
          - testing
          - unknown
          - dormant
          - not-present
          - lower-layer-down
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-yang-type: string
    get_test_data_nodes_interfaces_state_interface_last_change:
      type: object
      properties:
        test-data-nodes:last-change:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
          x-yang-type: string
    get_test_data_nodes_interfaces_state_interface_if_index:
      type: object
      properties:
        test-data-nodes:if-index:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
          x-range: 1..2147483647
          x-yang-type: int32
    get_test_data_nodes_interfaces_state_interface_phys_address:
      type: object
      properties:
        test-data-nodes:phys-address:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-pattern: ([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?
          x-yang-type: string
    get_test_data_nodes_interfaces_state_interface_higher_layer_if:
      type: object
      properties:
        test-data-nodes:higher-layer-if:
          type: array
          items:
            maxLength: 18446744073709551615
            minLength: 0
            type: string
            x-yang-type: string
    get_test_data_nodes_interfaces_state_interface_lower_layer_if:
      type: object
      properties:
        test-data-nodes:lower-layer-if:
          type: array
          items:
            maxLength: 18446744073709551615
            minLength: 0
            type: string
            x-yang-type: string
    get_test_data_nodes_interfaces_state_interface_speed:
      type: object
      properties:
        test-data-nodes:speed:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_state_interface_statistics:
      type: object
      properties:
        test-data-nodes:statistics:
          type: object
          properties:
            discontinuity-time:
              maxLength: 18446744073709551615
              minLength: 0
              type: string
              x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
              x-yang-type: string
            in-octets:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            in-unicast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            in-broadcast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            in-multicast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            in-discards:
              format: int32
              maximum: 4294967295
              minimum: 0
              type: integer
              x-yang-type: uint32
            in-errors:
              format: int32
              maximum: 4294967295
              minimum: 0
              type: integer
              x-yang-type: uint32
            in-unknown-protos:
              format: int32
              maximum: 4294967295
              minimum: 0
              type: integer
              x-yang-type: uint32
            out-octets:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            out-unicast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            out-broadcast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            out-multicast-pkts:
              format: int64
              maximum: 18446744073709551615
              minimum: 0
              type: integer
              x-yang-type: uint64
            out-discards:
              format: int32
              maximum: 4294967295
              minimum: 0
              type: integer
              x-yang-type: uint32
            out-errors:
              format: int32
              maximum: 4294967295
              minimum: 0
              type: integer
              x-yang-type: uint32
    get_test_data_nodes_interfaces_state_interface_statistics_discontinuity_time:
      type: object
      properties:
        test-data-nodes:discontinuity-time:
          maxLength: 18446744073709551615
          minLength: 0
          type: string
          x-pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[\+\-]\d{2}:\d{2})
          x-yang-type: string
    get_test_data_nodes_interfaces_state_interface_statistics_in_octets:
      type: object
      properties:
        test-data-nodes:in-octets:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_state_interface_statistics_in_unicast_pkts:
      type: object
      properties:
        test-data-nodes:in-unicast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_state_interface_statistics_in_broadcast_pkts:
      type: object
      properties:
        test-data-nodes:in-broadcast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_state_interface_statistics_in_multicast_pkts:
      type: object
      properties:
        test-data-nodes:in-multicast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_state_interface_statistics_in_discards:
      type: object
      properties:
        test-data-nodes:in-discards:
          format: int32
          maximum: 4294967295
          minimum: 0
          type: integer
          x-yang-type: uint32
    get_test_data_nodes_interfaces_state_interface_statistics_in_errors:
      type: object
      properties:
        test-data-nodes:in-errors:
          format: int32
          maximum: 4294967295
          minimum: 0
          type: integer
          x-yang-type: uint32
    get_test_data_nodes_interfaces_state_interface_statistics_in_unknown_protos:
      type: object
      properties:
        test-data-nodes:in-unknown-protos:
          format: int32
          maximum: 4294967295
          minimum: 0
          type: integer
          x-yang-type: uint32
    get_test_data_nodes_interfaces_state_interface_statistics_out_octets:
      type: object
      properties:
        test-data-nodes:out-octets:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_state_interface_statistics_out_unicast_pkts:
      type: object
      properties:
        test-data-nodes:out-unicast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_state_interface_statistics_out_broadcast_pkts:
      type: object
      properties:
        test-data-nodes:out-broadcast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_state_interface_statistics_out_multicast_pkts:
      type: object
      properties:
        test-data-nodes:out-multicast-pkts:
          format: int64
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          x-yang-type: uint64
    get_test_data_nodes_interfaces_state_interface_statistics_out_discards:
      type: object
      properties:
        test-data-nodes:out-discards:
          format: int32
          maximum: 4294967295
          minimum: 0
          type: integer
          x-yang-type: uint32
    get_test_data_nodes_interfaces_state_interface_statistics_out_errors:
      type: object
      properties:
        test-data-nodes:out-errors:
          format: int32
          maximum: 4294967295
          minimum: 0
          type: integer
          x-yang-type: uint32
